<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="ru">
  <compounddef id="kolibri__scrollbar_8h" kind="file" language="C++">
    <compoundname>kolibri_scrollbar.h</compoundname>
    <includes refid="kos32sys_8h" local="no">kos32sys.h</includes>
    <includes refid="os_8hpp" local="no">kolibriLib/system/os.hpp</includes>
    <includedby refid="kolibri__gui__elements_8h" local="yes">C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui_elements.h</includedby>
    <includedby refid="kolibri__treelist_8h" local="no">C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h</label>
        <link refid="kolibri__scrollbar_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kos32sys.h</label>
        <link refid="kos32sys_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>kolibriLib/color.hpp</label>
        <link refid="color_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>kolibriLib/system/filesystem.hpp</label>
        <link refid="filesystem_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>kolibriLib/system/os.hpp</label>
        <link refid="os_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdarg.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
      <node id="10">
        <label>sys/ksys.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui.h</label>
        <link refid="kolibri__gui_8h_source"/>
      </node>
      <node id="2">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui_elements.h</label>
        <link refid="kolibri__gui__elements_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h</label>
        <link refid="kolibri__scrollbar_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h</label>
        <link refid="kolibri__treelist_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="kolibri__scrollbar_8h_1a4c3482f7afd29668687eda7253a988f7" prot="public" static="no" mutable="no">
        <type></type>
        <definition>scrollbar</definition>
        <argsstring></argsstring>
        <name>scrollbar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" line="37" column="2" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__scrollbar_8h_1a0c58c073880933b87a48366a4f1c4095" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* scrollbar_h_draw) (scrollbar *) __attribute__((__stdcall__))</definition>
        <argsstring>)(scrollbar *) __attribute__((__stdcall__))</argsstring>
        <name>scrollbar_h_draw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" line="89" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" declline="89" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__scrollbar_8h_1a5b739cb4a8d2cc2851956e42fee43c3d" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* scrollbar_h_mouse) (scrollbar *) __attribute__((__stdcall__))</definition>
        <argsstring>)(scrollbar *) __attribute__((__stdcall__))</argsstring>
        <name>scrollbar_h_mouse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" line="90" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" declline="90" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__scrollbar_8h_1a2461e9a7ae750151ee8318b33188ba08" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* scrollbar_v_draw) (scrollbar *) __attribute__((__stdcall__))</definition>
        <argsstring>)(scrollbar *) __attribute__((__stdcall__))</argsstring>
        <name>scrollbar_v_draw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" line="91" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" declline="91" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__scrollbar_8h_1a100feaf81334473a8ff291088d94571f" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* scrollbar_v_mouse) (scrollbar *) __attribute__((__stdcall__))</definition>
        <argsstring>)(scrollbar *) __attribute__((__stdcall__))</argsstring>
        <name>scrollbar_v_mouse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" line="92" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" declline="92" declcolumn="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="kolibri__scrollbar_8h_1ad09246453a4dabd919c7541484046a87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>struct __attribute__</definition>
        <argsstring>((__packed__))</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(__packed__)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" line="1" column="0" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" bodystart="7" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__scrollbar_8h_1a0347a75e375e73dfc518df4285477ea9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>scrollbar *</type>
        <definition>static scrollbar * kolibri_scrollbar</definition>
        <argsstring>(scrollbar *sb, uint32_t x_w, uint32_t y_h, uint32_t btn_height, uint32_t max_area, uint32_t cur_area, uint32_t position, uint32_t back_color, uint32_t front_color, uint32_t line_color)</argsstring>
        <name>kolibri_scrollbar</name>
        <param>
          <type>scrollbar *</type>
          <declname>sb</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>x_w</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>y_h</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>btn_height</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_area</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cur_area</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>position</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>back_color</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>front_color</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>line_color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" line="39" column="25" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" bodystart="39" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__scrollbar_8h_1a086becd9ec858559c8ce0d42105cff3f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>scrollbar *</type>
        <definition>static scrollbar * kolibri_new_scrollbar</definition>
        <argsstring>(uint32_t x_w, uint32_t y_h, uint32_t btn_height, uint32_t max_area, uint32_t cur_area, uint32_t position, uint32_t back_color, uint32_t front_color, uint32_t line_color)</argsstring>
        <name>kolibri_new_scrollbar</name>
        <param>
          <type>uint32_t</type>
          <declname>x_w</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>y_h</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>btn_height</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_area</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cur_area</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>position</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>back_color</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>front_color</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>line_color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" line="59" column="25" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" bodystart="59" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__scrollbar_8h_1accbcd153daf7830a40b77302903e78a9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>scrollbar *</type>
        <definition>static scrollbar * kolibri_scrollbar_def</definition>
        <argsstring>(scrollbar *sb, uint32_t x_w, uint32_t y_h, uint32_t max_area, uint32_t cur_area, uint32_t position)</argsstring>
        <name>kolibri_scrollbar_def</name>
        <param>
          <type>scrollbar *</type>
          <declname>sb</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>x_w</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>y_h</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_area</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cur_area</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" line="67" column="25" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" bodystart="67" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__scrollbar_8h_1aa95a0dce7171bf5c6bd60320eb26792f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>scrollbar *</type>
        <definition>static scrollbar * kolibri_new_scrollbar_def</definition>
        <argsstring>(uint32_t x_w, uint32_t y_h, uint32_t max_area, uint32_t cur_area, uint32_t position)</argsstring>
        <name>kolibri_new_scrollbar_def</name>
        <param>
          <type>uint32_t</type>
          <declname>x_w</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>y_h</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_area</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cur_area</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" line="73" column="25" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__scrollbar_8h_1a705bf902a7b55899ed114f991706386c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gui_add_scrollbar_h</definition>
        <argsstring>(kolibri_window *wnd, scrollbar *sb)</argsstring>
        <name>gui_add_scrollbar_h</name>
        <param>
          <type><ref refid="structkolibri__window" kindref="compound">kolibri_window</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>scrollbar *</type>
          <declname>sb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" line="79" column="20" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__scrollbar_8h_1a0d0b98e0aa67488637d4524fdb5f3d01" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gui_add_scrollbar_v</definition>
        <argsstring>(kolibri_window *wnd, scrollbar *sb)</argsstring>
        <name>gui_add_scrollbar_v</name>
        <param>
          <type><ref refid="structkolibri__window" kindref="compound">kolibri_window</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>scrollbar *</type>
          <declname>sb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" line="84" column="20" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h" bodystart="84" bodyend="87"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>KOLIBRI_SCROLLBAR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KOLIBRI_SCROLLBAR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kos32sys.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kolibriLib/system/os.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__attribute__<sp/>((__packed__))<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>uint16_t<sp/>xsize;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>uint16_t<sp/>xpos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>uint16_t<sp/>ysize;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>uint16_t<sp/>ypos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>x_w;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>y_h;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>btn_height;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>type;<sp/><sp/></highlight><highlight class="comment">//<sp/>type<sp/>1<sp/>-<sp/>stylish<sp/>frame,<sp/>type<sp/>2<sp/>-<sp/>?,<sp/>type<sp/>0<sp/>-<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>max_area;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cur_area;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>position;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>back_color;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>front_color;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>line_color;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>redraw;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>delta;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>delta2;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>r_size_x;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>r_start_x;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>r_size_y;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>r_start_y;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>m_pos;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>m_pos2;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>m_keys;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>run_size;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>position2;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>work_size;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>all_redraw;<sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>be<sp/>set<sp/>=1<sp/>before<sp/>each<sp/>redraw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ar_offset;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}<sp/>scrollbar;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>scrollbar*<sp/>kolibri_scrollbar(scrollbar*<sp/>sb,<sp/>uint32_t<sp/>x_w,<sp/>uint32_t<sp/>y_h,<sp/>uint32_t<sp/>btn_height,<sp/>uint32_t<sp/>max_area,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cur_area,<sp/>uint32_t<sp/>position,<sp/>uint32_t<sp/>back_color,<sp/>uint32_t<sp/>front_color,<sp/>uint32_t<sp/>line_color)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(sb,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(scrollbar));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>sb-&gt;x_w<sp/>=<sp/>x_w;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>sb-&gt;y_h<sp/>=<sp/>y_h;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>sb-&gt;btn_height<sp/>=<sp/>btn_height;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>sb-&gt;type<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>sb-&gt;max_area<sp/>=<sp/>max_area;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>sb-&gt;cur_area<sp/>=<sp/>cur_area;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>sb-&gt;position<sp/>=<sp/>position;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>sb-&gt;line_color<sp/>=<sp/>line_color;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>sb-&gt;back_color<sp/>=<sp/>back_color;<sp/><sp/></highlight><highlight class="comment">//<sp/>0xeeeeee</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>sb-&gt;front_color<sp/>=<sp/>front_color;<sp/></highlight><highlight class="comment">//<sp/>0xbbddff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>sb-&gt;ar_offset<sp/>=<sp/>max_area<sp/>/<sp/>30;<sp/></highlight><highlight class="comment">//<sp/>temporary<sp/>step<sp/>3%</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>sb-&gt;all_redraw<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sb;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>scrollbar*<sp/>kolibri_new_scrollbar(uint32_t<sp/>x_w,<sp/>uint32_t<sp/>y_h,<sp/>uint32_t<sp/>btn_height,<sp/>uint32_t<sp/>max_area,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cur_area,<sp/>uint32_t<sp/>position,<sp/>uint32_t<sp/>back_color,<sp/>uint32_t<sp/>front_color,<sp/>uint32_t<sp/>line_color)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>scrollbar<sp/>*sb<sp/>=<sp/>(scrollbar<sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(scrollbar));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kolibri_scrollbar(sb,<sp/>x_w,<sp/>y_h,<sp/>btn_height,<sp/>max_area,<sp/>cur_area,<sp/>position,<sp/>back_color,<sp/>front_color,<sp/>line_color);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>scrollbar*<sp/>kolibri_scrollbar_def(scrollbar*<sp/>sb,<sp/>uint32_t<sp/>x_w,<sp/>uint32_t<sp/>y_h,<sp/>uint32_t<sp/>max_area,<sp/>uint32_t<sp/>cur_area,<sp/>uint32_t<sp/>position)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kolibri_scrollbar(sb,<sp/>x_w,<sp/>y_h,<sp/>15,<sp/>max_area,<sp/>cur_area,<sp/>position,<sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().work_area,<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().work_button,<sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().work_button_text);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>scrollbar*<sp/>kolibri_new_scrollbar_def(uint32_t<sp/>x_w,<sp/>uint32_t<sp/>y_h,<sp/>uint32_t<sp/>max_area,<sp/>uint32_t<sp/>cur_area,<sp/>uint32_t<sp/>position)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kolibri_new_scrollbar(x_w,<sp/>y_h,<sp/>15,<sp/>max_area,<sp/>cur_area,<sp/>position,<sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().work_area,<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().work_button,<sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().work_button_text);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gui_add_scrollbar_h(<ref refid="structkolibri__window" kindref="compound">kolibri_window</ref><sp/>*wnd,<sp/>scrollbar*<sp/>sb)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>kolibri_window_add_element(wnd,<sp/>KOLIBRI_SCROLL_BAR_H,<sp/>sb);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gui_add_scrollbar_v(<ref refid="structkolibri__window" kindref="compound">kolibri_window</ref><sp/>*wnd,<sp/>scrollbar*<sp/>sb)</highlight></codeline>
<codeline lineno="85"><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>kolibri_window_add_element(wnd,<sp/>KOLIBRI_SCROLL_BAR_V,<sp/>sb);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*scrollbar_h_draw)(scrollbar*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*scrollbar_h_mouse)(scrollbar*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*scrollbar_v_draw)(scrollbar*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*scrollbar_v_mouse)(scrollbar*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>KOLIBRI_SCROLLBAR_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_scrollbar.h"/>
  </compounddef>
</doxygen>
