<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="ru">
  <compounddef id="kolibri__treelist_8h" kind="file" language="C++">
    <compoundname>kolibri_treelist.h</compoundname>
    <includes refid="kos32sys_8h" local="no">kos32sys.h</includes>
    <includes refid="kolibri__scrollbar_8h" local="no">kolibri_scrollbar.h</includes>
    <includedby refid="kolibri__gui__elements_8h" local="yes">C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui_elements.h</includedby>
    <incdepgraph>
      <node id="8">
        <label>kolibri_scrollbar.h</label>
        <link refid="kolibri__scrollbar_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h</label>
        <link refid="kolibri__treelist_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kos32sys.h</label>
        <link refid="kos32sys_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>kolibriLib/color.hpp</label>
        <link refid="color_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>kolibriLib/system/filesystem.hpp</label>
        <link refid="filesystem_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>kolibriLib/system/os.hpp</label>
        <link refid="os_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdarg.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="12">
        <label>string</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
      <node id="11">
        <label>sys/ksys.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui.h</label>
        <link refid="kolibri__gui_8h_source"/>
      </node>
      <node id="2">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui_elements.h</label>
        <link refid="kolibri__gui__elements_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h</label>
        <link refid="kolibri__treelist_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="kolibri__treelist_8h_1a912844fe2bb4ed14b19eaf65a1d30868" prot="public" static="no" strong="no">
        <type></type>
        <name>tl_style</name>
        <enumvalue id="kolibri__treelist_8h_1a912844fe2bb4ed14b19eaf65a1d30868af66bcfe255a2c44d0cf6b2c51c8d95a1" prot="public">
          <name>TL_KEY_NO_EDIT</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__treelist_8h_1a912844fe2bb4ed14b19eaf65a1d30868aace99615ff762edc50c08609006283b5" prot="public">
          <name>TL_DRAW_PAR_LINE</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__treelist_8h_1a912844fe2bb4ed14b19eaf65a1d30868ae1718248cd6c22e0fa27d431726f8440" prot="public">
          <name>TL_LISTBOX_MODE</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>константы стиля </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="8" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" bodystart="8" bodyend="12"/>
      </memberdef>
      <memberdef kind="enum" id="kolibri__treelist_8h_1adb0c45ab463f7eb05be63cdeb144f051" prot="public" static="no" strong="no">
        <type></type>
        <name>tl_err</name>
        <enumvalue id="kolibri__treelist_8h_1adb0c45ab463f7eb05be63cdeb144f051a794c91cf3eea6965df3d7591cf2c660b" prot="public">
          <name>TL_ERR_LOAD_CAPTION</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__treelist_8h_1adb0c45ab463f7eb05be63cdeb144f051a24e5c06c46af10a363f2b78bd149013c" prot="public">
          <name>TL_ERR_SAVE_MEMOTY_SIZE</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__treelist_8h_1adb0c45ab463f7eb05be63cdeb144f051a302acb543855d6aa6a28e9ba1500b7f3" prot="public">
          <name>TL_ERR_LOAD_INFO_SIZE</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>константы для функций </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="15" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" bodystart="15" bodyend="19"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="kolibri__treelist_8h_1a251f2a6066b332b93815be48005836d0" prot="public" static="no" mutable="no">
        <type></type>
        <definition>treelist_node</definition>
        <argsstring></argsstring>
        <name>treelist_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="29" column="2" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1a5622589e29e2a248a53061094e0a3524" prot="public" static="no" mutable="no">
        <type></type>
        <definition>treelist</definition>
        <argsstring></argsstring>
        <name>treelist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="58" column="2" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1af4c3e1b6ca3ba15d54d7850f3c797fae" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* tl_mouse) (treelist *) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *) __attribute__((__stdcall__))</argsstring>
        <name>tl_mouse</name>
        <briefdescription>
<para>реакция на мышь </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="93" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="93" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1a90df3140e0c92e2b61415b2d73de3318" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* tl_draw) (treelist *) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *) __attribute__((__stdcall__))</argsstring>
        <name>tl_draw</name>
        <briefdescription>
<para>вывод списка на экран </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="96" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="96" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1ad3eb4824944c8a67a1ae8a4fa4667edc" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* tl_node_move_up) (treelist *) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *) __attribute__((__stdcall__))</argsstring>
        <name>tl_node_move_up</name>
        <briefdescription>
<para>перемещаем узел вверх </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="105" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="105" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1ad84100f48639aedefd908ea76447ffe3" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* tl_node_move_down) (treelist *) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *) __attribute__((__stdcall__))</argsstring>
        <name>tl_node_move_down</name>
        <briefdescription>
<para>перемещаем узел вниз </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="108" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="108" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1afce8e3e0958ed535d9e42a2fe9ba3871" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* tl_data_init) (treelist *) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *) __attribute__((__stdcall__))</argsstring>
        <name>tl_data_init</name>
        <briefdescription>
<para>выделение памяти для структур списка и основной информации (конструктор) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="111" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="111" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1ae144a09d37a552fc1d700956c7d9ff66" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* tl_data_clear) (treelist *) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *) __attribute__((__stdcall__))</argsstring>
        <name>tl_data_clear</name>
        <briefdescription>
<para>очистка памяти элемента (деструктор) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="115" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="115" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1a657ebd8df6fc552d909ff172b9f17cfa" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* tl_info_clear) (treelist *) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *) __attribute__((__stdcall__))</argsstring>
        <name>tl_info_clear</name>
        <briefdescription>
<para>очистка списка (информации) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="123" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="123" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1a5376791029f19e71ee3669ec8c5a5ed4" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* tl_key_asm) (treelist *) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *) __attribute__((__stdcall__))</argsstring>
        <name>tl_key_asm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="125" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="125" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1ae0f76f7576554d94a8d1d76352f32992" prot="public" static="no" mutable="no">
        <type>oskey_t</type>
        <definition>oskey_t code</definition>
        <argsstring></argsstring>
        <name>code</name>
        <initializer>{
    __asm__ __volatile__ (
             &quot;push %2\n\t&quot;
             &quot;call *%1 \n\t&quot;::&quot;a&quot;(code.val), &quot;m&quot;(tl_key_asm), &quot;m&quot;(tl):)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="127" column="28" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1a47a2d1337ac748f357ec9ef19ca035c7" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* tl_info_undo) (treelist *) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *) __attribute__((__stdcall__))</argsstring>
        <name>tl_info_undo</name>
        <briefdescription>
<para>отмена действия </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="137" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="137" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1a0e5d8c9026ba10fedee2c3fc26c600e3" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* tl_info_redo) (treelist *) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *) __attribute__((__stdcall__))</argsstring>
        <name>tl_info_redo</name>
        <briefdescription>
<para>повтор действия </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="140" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="140" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1a67cc20b70bf475850261b21117a060df" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* tl_node_add) (treelist *, uint32_t n_opt, void *n_info) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *, uint32_t n_opt, void *n_info) __attribute__((__stdcall__))</argsstring>
        <name>tl_node_add</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="142" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="142" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1a05c61d9c0fb0aa735e0456c0d08263f0" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* tl_node_set_data) (treelist *, void *n_info) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *, void *n_info) __attribute__((__stdcall__))</argsstring>
        <name>tl_node_set_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>записать в текущий узел input: tlist - указатель на структуру листа n_info - указатель на данные </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="158" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="158" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1ac3447edc4290d41eea5821d8864a58f5" prot="public" static="no" extern="yes" mutable="no">
        <type>void *(*</type>
        <definition>void *(* tl_node_get_data) (treelist *) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *) __attribute__((__stdcall__))</argsstring>
        <name>tl_node_get_data</name>
        <briefdescription>
<para>взять указатель на данные узла под курсором </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="161" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="161" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1aa81706945050eb17168d4b1423e272fd" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* tl_node_delete) (treelist *) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *) __attribute__((__stdcall__))</argsstring>
        <name>tl_node_delete</name>
        <briefdescription>
<para>удалить узел под курсором </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="164" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="164" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1adca5826d2704952dbc7d44ba6c67cef0" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* tl_cur_beg) (treelist *) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *) __attribute__((__stdcall__))</argsstring>
        <name>tl_cur_beg</name>
        <briefdescription>
<para>поставить курсор на первый узел </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="167" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="167" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1ae19a8185b61f7e52f1b9e1a99829b6b8" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* tl_cur_next) (treelist *) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *) __attribute__((__stdcall__))</argsstring>
        <name>tl_cur_next</name>
        <briefdescription>
<para>перенести курсор на 1 позицию ниже </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="170" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="170" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1adde796f50333a710bb5263521af5fb08" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* tl_cur_perv) (treelist *) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *) __attribute__((__stdcall__))</argsstring>
        <name>tl_cur_perv</name>
        <briefdescription>
<para>перенести курсор на 1 позицию выше </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="173" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="173" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1a4f4c68a30c6d156ce44d5f349f3401ee" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* tl_node_close_open) (treelist *) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *) __attribute__((__stdcall__))</argsstring>
        <name>tl_node_close_open</name>
        <briefdescription>
<para>открыть/закрыть узел (работает с узлами которые имеют дочерние узлы) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="176" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="176" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1a665f52875d02857f0df97e2dac064c54" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* tl_node_lev_inc) (treelist *) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *) __attribute__((__stdcall__))</argsstring>
        <name>tl_node_lev_inc</name>
        <briefdescription>
<para>увеличить уровень </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="179" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="179" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1ab626b1d2eb80d56d218120689b6d08a3" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* tl_node_lev_dec) (treelist *) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *) __attribute__((__stdcall__))</argsstring>
        <name>tl_node_lev_dec</name>
        <briefdescription>
<para>уменьшить уровень </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="182" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="182" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1a906cadfe882f0863040fda0939b74ab6" prot="public" static="no" extern="yes" mutable="no">
        <type>treelist_node *(*</type>
        <definition>treelist_node *(* tl_node_poi_get_info) (treelist *, int node_ind) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *, int node_ind) __attribute__((__stdcall__))</argsstring>
        <name>tl_node_poi_get_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>взять указатель на структуру узла в указанной позиции input: tlist - pointer to &apos;TreeList&apos; struct node_ind - node index output - pointer to node info or NULL </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="189" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="189" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1a2b99aaf60e4cd1ec9535dcb68f396959" prot="public" static="no" extern="yes" mutable="no">
        <type>treelist_node *(*</type>
        <definition>treelist_node *(* tl_node_poi_get_next_info) (treelist *, treelist_node *) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *, treelist_node *) __attribute__((__stdcall__))</argsstring>
        <name>tl_node_poi_get_next_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>взять указатель на следущую структуру узла input: tlist - pointer to &apos;TreeList&apos; struct node_p - node param struct output - pointer to next node struct or NULL </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="196" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="196" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1af1e6a503583bce8804c263bda8f6675b" prot="public" static="no" extern="yes" mutable="no">
        <type>void *(*</type>
        <definition>void *(* _tl_node_poi_get_data) (treelist *, treelist_node *) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *, treelist_node *) __attribute__((__stdcall__))</argsstring>
        <name>_tl_node_poi_get_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>;взять указатель на данные узла input: tlist - pointer to &apos;TreeList&apos; struct node_p - node param struct output - pointer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="203" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="203" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1a7033b85de7c0cd7e3a4419f0b2d149e5" prot="public" static="no" extern="yes" mutable="no">
        <type>int(*</type>
        <definition>int(* tl_save_mem) (treelist *, int opt, void *h_mem, int mem_size) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *, int opt, void *h_mem, int mem_size) __attribute__((__stdcall__))</argsstring>
        <name>tl_save_mem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>tlist - pointer to &apos;TreeList&apos; struct opt - options: 0 - first element, 1 - add next element h_mem - pointer to memory mem_size - memory size output - error code </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="210" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="210" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1abbb9e9eaa76520ed3af386977445e60f" prot="public" static="no" extern="yes" mutable="no">
        <type>int(*</type>
        <definition>int(* _tl_load_mem) (treelist *, int opt, void *h_mem, int mem_size) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *, int opt, void *h_mem, int mem_size) __attribute__((__stdcall__))</argsstring>
        <name>_tl_load_mem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>input: ; tlist - pointer to &apos;TreeList&apos; struct ; opt - options: element index + (2*(add mode)+(init mode)) shl 16, tl_load_mode_add equ 0x20000 ;опция считывания в режиме добавления информации ; h_mem - pointer to memory ; mem_size - memory size ; размер памяти, пока не используется (назначался для контроля) ; для его использования нужно доработать функцию ;output: ; eax - error code ;memory header format: ; +0 - (4) &apos;tree&apos; ; +4 - (2) info size ; +6 - (4) count nodes ; +10 - (4) tlist style ; +14 - (4) cursor pos ; +18 - (2) info capt offs ; +20 - (2) info capt len ; +22 - (4) scroll pos ;memory data format: ; +26 - (info size + 8) * count nodes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="232" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="232" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__treelist_8h_1ac18c66f024616b13595dd0c9fd5bacba" prot="public" static="no" extern="yes" mutable="no">
        <type>int(*</type>
        <definition>int(* tl_get_mem_size) (treelist *, void *h_mem) __attribute__((__stdcall__))</definition>
        <argsstring>)(treelist *, void *h_mem) __attribute__((__stdcall__))</argsstring>
        <name>tl_get_mem_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>;берет размер памяти занятой функцией tl_save_mem при сохранении элементов tlist - pointer to &apos;TreeList&apos; struct h_mem - pointer to saved memory </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="237" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" declline="237" declcolumn="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="kolibri__treelist_8h_1ad09246453a4dabd919c7541484046a87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>struct __attribute__</definition>
        <argsstring>((__packed__))</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(__packed__)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="1" column="0" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" bodystart="21" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__treelist_8h_1aff57d489fb8b592c1a4a7a40b1778012" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>treelist *</type>
        <definition>static treelist * kolibri_new_treelist</definition>
        <argsstring>(uint32_t x_w, uint32_t y_h, uint16_t capt_cy, uint32_t icon_size_xy, uint16_t info_size, uint32_t info_max_count, uint16_t info_capt_len, uint16_t info_capt_offs, enum tl_style style, void *el_focus, color_t back, color_t title, color_t txt)</argsstring>
        <name>kolibri_new_treelist</name>
        <param>
          <type>uint32_t</type>
          <declname>x_w</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>y_h</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>capt_cy</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>icon_size_xy</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>info_size</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>info_max_count</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>info_capt_len</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>info_capt_offs</declname>
        </param>
        <param>
          <type>enum tl_style</type>
          <declname>style</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>el_focus</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>back</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>title</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>txt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="62" column="24" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" bodystart="62" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__treelist_8h_1ad35da262228fa9eba67fd3e52e140915" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gui_add_treelist</definition>
        <argsstring>(kolibri_window *wnd, treelist *tl)</argsstring>
        <name>gui_add_treelist</name>
        <param>
          <type><ref refid="structkolibri__window" kindref="compound">kolibri_window</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>treelist *</type>
          <declname>tl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="86" column="20" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__treelist_8h_1a15b951192d6a4f2053c6169e48c3feff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>__attribute__</definition>
        <argsstring>((__stdcall__)) static inline void treelist_key(treelist *tl</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(__stdcall__)</type>
        </param>
        <briefdescription>
<para>реакция на клавиатуру </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="97" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" bodystart="97" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__treelist_8h_1ae16019d0a30efc66d2daeda8afe724ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void treelist_data_clear</definition>
        <argsstring>(treelist *tl)</argsstring>
        <name>treelist_data_clear</name>
        <param>
          <type>treelist *</type>
          <declname>tl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="116" column="20" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" bodystart="116" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__treelist_8h_1a5544469653a613782348253afe0f0108" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void treelist_node_add</definition>
        <argsstring>(treelist *tl, void *n_info, uint16_t type, uint8_t clos, uint8_t lev)</argsstring>
        <name>treelist_node_add</name>
        <param>
          <type>treelist *</type>
          <declname>tl</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>n_info</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>clos</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>lev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>добавить узел input: tlist - указатель на структуру листа n_opt - опции добавления n_info - указатель на добавляемые данные </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" line="148" column="20" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h" bodystart="148" bodyend="152"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>KOLIBRI_TREELIST_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KOLIBRI_TREELIST_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kos32sys.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kolibri_scrollbar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>tl_style<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>TL_KEY_NO_EDIT<sp/><sp/>=<sp/>1,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>элемент<sp/>нельзя<sp/>редактировать<sp/>на<sp/>клавиатуре<sp/>(изменять<sp/>уровни<sp/>стрелками,<sp/>удалять<sp/>DEL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>TL_DRAW_PAR_LINE<sp/>=<sp/>2,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>рисовать<sp/>линии<sp/>к<sp/>родительскому<sp/>узлу</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>TL_LISTBOX_MODE<sp/><sp/>=<sp/>4<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//стиль<sp/>не<sp/>отображает<sp/>уровни<sp/>(как<sp/>в<sp/>ListBox<sp/>все<sp/>одного<sp/>уровня)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">};</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>tl_err<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>TL_ERR_LOAD_CAPTION<sp/><sp/><sp/><sp/><sp/>=<sp/>1,<sp/></highlight><highlight class="comment">//в<sp/>памяти<sp/>нет<sp/>заголовка<sp/>&apos;tree&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>TL_ERR_SAVE_MEMOTY_SIZE<sp/>=<sp/>2,<sp/></highlight><highlight class="comment">//не<sp/>хватает<sp/>памяти<sp/>для<sp/>сохранения<sp/>элемента</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>TL_ERR_LOAD_INFO_SIZE<sp/><sp/><sp/>=<sp/>4,<sp/></highlight><highlight class="comment">//не<sp/>совпадает<sp/>размер<sp/>информационной<sp/>структуры<sp/>при<sp/>открытии</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__attribute__<sp/>((__packed__))<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/>type;<sp/><sp/><sp/></highlight><highlight class="comment">//тип<sp/>элемента,<sp/>или<sp/>индекс<sp/>иконки<sp/>для<sp/>узла</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/>lev;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//уровень<sp/>элемента</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/>clo;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//флаг<sp/>закрытия,<sp/>или<sp/>открытия<sp/>(имеет<sp/>смысл<sp/>для<sp/>родительского<sp/>узла)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/>prev;<sp/><sp/><sp/></highlight><highlight class="comment">//индекс<sp/>предыдущего<sp/>элемента</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/>next;<sp/><sp/><sp/></highlight><highlight class="comment">//индекс<sp/>последующего<sp/>элемента</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/>tcreat;<sp/></highlight><highlight class="comment">//врем.<sp/>создания</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/>tdel;<sp/><sp/><sp/></highlight><highlight class="comment">//врем.<sp/>удаления</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">}<sp/>treelist_node;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__attribute__<sp/>((__packed__))<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/>left;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/>top;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/>width;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/>height;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data_info;<sp/><sp/></highlight><highlight class="comment">//<sp/>указатель<sp/>на<sp/>основные<sp/>даные</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/>info_size;<sp/><sp/></highlight><highlight class="comment">//<sp/>размер<sp/>данных<sp/>выделяемых<sp/>для<sp/>каждого<sp/>узла<sp/>(пользовательськие<sp/>данные<sp/>+<sp/>текст<sp/>для<sp/>подписи)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/>info_max_count;<sp/></highlight><highlight class="comment">//<sp/>максимальное<sp/>количество<sp/>узлов,<sp/>которые<sp/>можно<sp/>добавить<sp/>в<sp/>элемент</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/>style;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>стили<sp/>элемента</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>treelist_node<sp/>*data_nodes;<sp/></highlight><highlight class="comment">//<sp/>указатель<sp/>на<sp/>структуры<sp/>узлов</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data_img;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>указатель<sp/>на<sp/>изображения<sp/>с<sp/>иконками<sp/>узлов</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/>img_cx;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ширина<sp/>иконок</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/>img_cy;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>высота<sp/>иконок</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*data_img_sys;</highlight><highlight class="comment">//указатель<sp/>на<sp/>системные<sp/>изображения<sp/>(стрелки,<sp/>плюсики)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/>ch_tim;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>количество<sp/>изменений<sp/>в<sp/>файле</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/>tim_undo;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>количество<sp/>отмененных<sp/>действий</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/>cur_pos;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>позиция<sp/>курсора</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/><sp/><sp/><sp/><sp/>col_bkg;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>цвет<sp/>фона</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/><sp/><sp/><sp/><sp/>col_zag;<sp/></highlight><highlight class="comment">//<sp/>цвет<sp/>заголовка</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/><sp/><sp/><sp/><sp/>col_txt;<sp/></highlight><highlight class="comment">//<sp/>цвет<sp/>текста</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/>capt_cy;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>высота<sp/>подписи</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/>info_capt_offs;</highlight><highlight class="comment">//сдвиг<sp/>для<sp/>начала<sp/>текста<sp/>(подписи<sp/>узла)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/>info_capt_len;</highlight><highlight class="comment">//длина<sp/>текста<sp/>подписи<sp/>узла<sp/>(если<sp/>=<sp/>0<sp/>то<sp/>до<sp/>конца<sp/>структуры)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*el_focus;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>указатель<sp/>на<sp/>структуру<sp/>элемента<sp/>в<sp/>фокусе</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>scrollbar<sp/><sp/>*p_scroll;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>указатель<sp/>на<sp/>структуру<sp/>скроллинга</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*on_press;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+84<sp/>указатель<sp/>на<sp/>функцию,<sp/>которая<sp/>вызывается<sp/>при<sp/>нажатии<sp/>Enter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">}<sp/>treelist;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>capt_cy<sp/>may<sp/>be<sp/>0<sp/>=<sp/>no<sp/>caption</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>icon_size<sp/>is<sp/>16x16,<sp/>and<sp/>data_img<sp/>id<sp/>NULL,<sp/>no<sp/>icons<sp/>-<sp/>useful<sp/>in<sp/>list<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>treelist*<sp/>kolibri_new_treelist(<sp/>uint32_t<sp/>x_w,<sp/>uint32_t<sp/>y_h,<sp/>uint16_t<sp/>capt_cy,<sp/>uint32_t<sp/>icon_size_xy,<sp/>uint16_t<sp/>info_size,<sp/>uint32_t<sp/>info_max_count,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/>info_capt_len,<sp/>uint16_t<sp/>info_capt_offs,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>tl_style<sp/>style,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*el_focus,<sp/>color_t<sp/>back,<sp/>color_t<sp/>title,<sp/>color_t<sp/>txt)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>treelist<sp/>*tl<sp/>=<sp/>(treelist<sp/>*)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(treelist));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>tl-&gt;left=<sp/>x_w<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>tl-&gt;width<sp/>=<sp/>x_w<sp/>&amp;<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>tl-&gt;top<sp/>=<sp/>y_h<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>tl-&gt;height<sp/>=<sp/>y_h<sp/>&amp;<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>tl-&gt;info_size<sp/>=<sp/>info_size;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>tl-&gt;info_max_count<sp/>=<sp/>info_max_count;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>tl-&gt;style<sp/>=<sp/>style;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>tl-&gt;img_cx<sp/>=<sp/>icon_size_xy<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>tl-&gt;img_cy<sp/>=<sp/>icon_size_xy<sp/>&amp;<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>tl-&gt;col_bkg<sp/>=<sp/>back;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>tl-&gt;col_zag<sp/>=<sp/>title;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>tl-&gt;col_txt<sp/>=<sp/>txt;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>tl-&gt;info_capt_len<sp/>=<sp/>info_capt_len;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>tl-&gt;info_capt_offs<sp/>=<sp/>info_capt_offs;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>tl-&gt;el_focus<sp/>=<sp/>el_focus;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>tl-&gt;capt_cy<sp/>=<sp/>capt_cy;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>tl-&gt;p_scroll<sp/>=<sp/>kolibri_new_scrollbar_def(X_Y(0,<sp/>16),<sp/>X_Y(0,<sp/>0),<sp/>100,<sp/>30,<sp/>0);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tl;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gui_add_treelist(<ref refid="structkolibri__window" kindref="compound">kolibri_window</ref><sp/>*wnd,<sp/>treelist*<sp/>tl)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>kolibri_window_add_element(wnd,<sp/>KOLIBRI_TREELIST,<sp/>tl);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*tl_mouse)(treelist<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*tl_draw)(treelist<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="97"><highlight class="normal">__attribute__((__stdcall__))<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>treelist_draw(treelist<sp/>*tl)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>tl-&gt;p_scroll-&gt;all_redraw<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>(*tl_draw)(tl);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*tl_node_move_up)(treelist<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*tl_node_move_down)(treelist<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*tl_data_init)(treelist<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*tl_data_clear)(treelist<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>treelist_data_clear(treelist<sp/>*tl)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>(*tl_data_clear)(tl);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>free(tl-&gt;p_scroll);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*tl_info_clear)(treelist<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*tl_key_asm)(treelist<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="127"><highlight class="normal">__attribute__((__stdcall__))<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>treelist_key(treelist<sp/>*tl,<sp/>oskey_t<sp/>code)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__<sp/>(</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;push<sp/>%2\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;call<sp/>*%1<sp/>\n\t&quot;</highlight><highlight class="normal">::</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">(code.val),<sp/></highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">(tl_key_asm),<sp/></highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">(tl):);<sp/><sp/></highlight><highlight class="comment">//<sp/>indirect<sp/>call<sp/>with<sp/>asterisk<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(*tl_key_asm)(tl);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*tl_info_undo)(treelist<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*tl_info_redo)(treelist<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*tl_node_add)(treelist<sp/>*,<sp/>uint32_t<sp/>n_opt,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*n_info)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="148"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>treelist_node_add(treelist<sp/>*tl,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*n_info,<sp/>uint16_t<sp/>type,<sp/>uint8_t<sp/>clos,<sp/>uint8_t<sp/>lev)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/>n_opt<sp/>=<sp/>(type<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(clos<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>lev;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>(*tl_node_add)(tl,<sp/>n_opt,<sp/>n_info);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*tl_node_set_data)(treelist<sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*n_info)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>(*tl_node_get_data)(treelist<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*tl_node_delete)(treelist<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*tl_cur_beg)(treelist<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*tl_cur_next)(treelist<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*tl_cur_perv)(treelist<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*tl_node_close_open)(treelist<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*tl_node_lev_inc)(treelist<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*tl_node_lev_dec)(treelist<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>treelist_node*<sp/>(*tl_node_poi_get_info)(treelist<sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_ind)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>treelist_node*<sp/>(*tl_node_poi_get_next_info)(treelist<sp/>*,<sp/>treelist_node*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>(*_tl_node_poi_get_data)(treelist<sp/>*,<sp/>treelist_node*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int<sp/>(*tl_save_mem)(treelist<sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*h_mem,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mem_size)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int<sp/>(*_tl_load_mem)(treelist<sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*h_mem,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mem_size)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int<sp/>(*tl_get_mem_size)(treelist<sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*h_mem)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//KOLIBRI_TREELIST_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h"/>
  </compounddef>
</doxygen>
