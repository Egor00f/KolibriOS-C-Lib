<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="ru">
  <compounddef id="kolibri__pathshow_8h" kind="file" language="C++">
    <compoundname>kolibri_pathshow.h</compoundname>
    <includes refid="kos32sys_8h" local="no">kos32sys.h</includes>
    <includedby refid="kolibri__gui__elements_8h" local="yes">C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui_elements.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_pathshow.h</label>
        <link refid="kolibri__pathshow_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kos32sys.h</label>
        <link refid="kos32sys_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdarg.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui.h</label>
        <link refid="kolibri__gui_8h_source"/>
      </node>
      <node id="2">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui_elements.h</label>
        <link refid="kolibri__gui__elements_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_pathshow.h</label>
        <link refid="kolibri__pathshow_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="kolibri__pathshow_8h_1a1eb869bd22804216af2f27cea23c6982" prot="public" static="no" mutable="no">
        <type></type>
        <definition>pathview</definition>
        <argsstring></argsstring>
        <name>pathview</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_pathshow.h" line="18" column="2" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_pathshow.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__pathshow_8h_1ae961785e0ac268edf0b2083d6119444c" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* path_show_prepare) (pathview *) __attribute__((__stdcall__))</definition>
        <argsstring>)(pathview *) __attribute__((__stdcall__))</argsstring>
        <name>path_show_prepare</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_pathshow.h" line="50" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_pathshow.h" declline="50" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__pathshow_8h_1ad714a376d103da9d261c8e9934908ce5" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* path_show_draw) (pathview *) __attribute__((__stdcall__))</definition>
        <argsstring>)(pathview *) __attribute__((__stdcall__))</argsstring>
        <name>path_show_draw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_pathshow.h" line="51" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_pathshow.h" declline="51" declcolumn="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="kolibri__pathshow_8h_1ad09246453a4dabd919c7541484046a87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>struct __attribute__</definition>
        <argsstring>((__packed__))</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(__packed__)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_pathshow.h" line="1" column="0" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_pathshow.h" bodystart="6" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__pathshow_8h_1ae5166274886fe77360ea96a48fde2d11" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>pathview *</type>
        <definition>static pathview * kolibri_pathview</definition>
        <argsstring>(pathview *p, uint32_t x_y, uint32_t width, uint32_t font_number, uint32_t is_bkgr, char *text, char *temp_buf, color_t font, color_t bkgr)</argsstring>
        <name>kolibri_pathview</name>
        <param>
          <type>pathview *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>x_y</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>font_number</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>is_bkgr</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>temp_buf</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>font</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>bkgr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_pathshow.h" line="22" column="24" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_pathshow.h" bodystart="22" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__pathshow_8h_1af17f730aaee241066b93b2a34077a59d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>pathview *</type>
        <definition>static pathview * kolibri_new_pathview</definition>
        <argsstring>(pathview *p, uint32_t x_y, uint32_t width, uint32_t font_number, uint32_t is_bkgr, char *text, char *temp_buf, color_t font, color_t bkgr)</argsstring>
        <name>kolibri_new_pathview</name>
        <param>
          <type>pathview *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>x_y</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>font_number</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>is_bkgr</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>temp_buf</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>font</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>bkgr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_pathshow.h" line="38" column="24" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_pathshow.h" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__pathshow_8h_1aa28efd0c7e478e1c3c29ea25a05e24e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gui_add_pathview</definition>
        <argsstring>(kolibri_window *wnd, pathview *pv)</argsstring>
        <name>gui_add_pathview</name>
        <param>
          <type><ref refid="structkolibri__window" kindref="compound">kolibri_window</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>pathview *</type>
          <declname>pv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_pathshow.h" line="44" column="20" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_pathshow.h" bodystart="44" bodyend="47"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>KOLIBRI_PATHSHOW_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KOLIBRI_PATHSHOW_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kos32sys.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__attribute__<sp/>((__packed__))<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>type;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>x_y;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>font_size_x;<sp/><sp/></highlight><highlight class="comment">//<sp/>6<sp/>-<sp/>for<sp/>font<sp/>0,<sp/>8<sp/>-<sp/>for<sp/>font<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>area_size_x;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>font_number;<sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>-<sp/>monospace,<sp/>1<sp/>-<sp/>variable,<sp/>as<sp/>fn4<sp/>(2bit<sp/>only<sp/>0-3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>background_flag;<sp/></highlight><highlight class="comment">//<sp/>as<sp/>fn4,<sp/>if<sp/>0,<sp/>bk_color<sp/>unneeded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/><sp/>font_color;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>fn4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/><sp/>background_color;<sp/></highlight><highlight class="comment">//<sp/>as<sp/>fn4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_pointer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4096<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>work_area_pointer;<sp/><sp/></highlight><highlight class="comment">//<sp/>4096<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>temp_text_length;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}<sp/>pathview;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>pathview*<sp/>kolibri_pathview(pathview*<sp/>p,<sp/>uint32_t<sp/>x_y,<sp/>uint32_t<sp/>width,<sp/>uint32_t<sp/>font_number,<sp/>uint32_t<sp/>is_bkgr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>temp_buf,<sp/>color_t<sp/>font,<sp/>color_t<sp/><sp/>bkgr)</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;type<sp/>=<sp/>p-&gt;temp_text_length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;x_y<sp/>=<sp/>x_y;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;font_size_x<sp/>=<sp/>font_number<sp/>==<sp/>0<sp/>?<sp/>6<sp/>:<sp/>8;<sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>correction<sp/>for<sp/>bigger<sp/>fonts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;area_size_x<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;font_number<sp/>=<sp/>font_number;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;background_flag<sp/>=<sp/>is_bkgr;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;text_pointer<sp/>=<sp/>text;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;work_area_pointer<sp/>=<sp/>temp_buf;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;font_color<sp/>=<sp/>font;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;background_color<sp/>=<sp/>bkgr;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>pathview*<sp/>kolibri_new_pathview(pathview*<sp/>p,<sp/>uint32_t<sp/>x_y,<sp/>uint32_t<sp/>width,<sp/>uint32_t<sp/>font_number,<sp/>uint32_t<sp/>is_bkgr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>temp_buf,<sp/>color_t<sp/>font,<sp/>color_t<sp/><sp/>bkgr)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>pathview<sp/>*new_pv<sp/>=<sp/>(pathview<sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pathview));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kolibri_pathview(new_pv,<sp/>x_y,<sp/>width,<sp/>font_number,<sp/>is_bkgr,<sp/>text,<sp/>temp_buf,<sp/>font,<sp/>bkgr);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gui_add_pathview(<ref refid="structkolibri__window" kindref="compound">kolibri_window</ref><sp/>*wnd,<sp/>pathview*<sp/>pv)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>kolibri_window_add_element(wnd,<sp/>KOLIBRI_PATHSHOW,<sp/>pv);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*path_show_prepare)(pathview<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*path_show_draw)(pathview<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>KOLIBRI_PATHSHOW_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_pathshow.h"/>
  </compounddef>
</doxygen>
