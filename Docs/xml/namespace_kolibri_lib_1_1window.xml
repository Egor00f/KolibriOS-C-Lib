<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="ru">
  <compounddef id="namespace_kolibri_lib_1_1window" kind="namespace" language="C++">
    <compoundname>KolibriLib::window</compoundname>
    <innerclass refid="class_kolibri_lib_1_1window_1_1_window" prot="public">KolibriLib::window::Window</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="namespace_kolibri_lib_1_1window_1af574e171423936362ed377f0b72a73e3" prot="public" static="no" strong="no">
        <type></type>
        <name>WindowStyle</name>
        <qualifiedname>KolibriLib::window::WindowStyle</qualifiedname>
        <enumvalue id="namespace_kolibri_lib_1_1window_1af574e171423936362ed377f0b72a73e3a82a7abe67023e161d701d6a16731f2da" prot="public">
          <name>FixSize</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>окно фиксированных размеров </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1window_1af574e171423936362ed377f0b72a73e3a437c943279eb3aced1be94554420c7cc" prot="public">
          <name>NoDraw</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>только определить область окна, ничего не рисовать </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1window_1af574e171423936362ed377f0b72a73e3ae1b6e2066477f6b4ad1b746f27b3ed4e" prot="public">
          <name>CanResize</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>окно изменяемых размеров </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1window_1af574e171423936362ed377f0b72a73e3a48f4ce149dde530a52a5cae2960ff573" prot="public">
          <name>withSkin</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>окно со скином </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1window_1af574e171423936362ed377f0b72a73e3aa55ea9bbd14415e821b5687bc5d0845d" prot="public">
          <name>FixSizewithSkin</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>окно со скином фиксированных размеров </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1window_1af574e171423936362ed377f0b72a73e3a4b55971bca493db19ccb0a807d018c03" prot="public">
          <name>WindowHaveTitle</name>
          <initializer>= 0b00010000</initializer>
          <briefdescription>
<para>у окна есть заголовок </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1window_1af574e171423936362ed377f0b72a73e3a96343d8bb6ab6cf4e43457156dd9a1cd" prot="public">
          <name>NoDrawWorkspace</name>
          <initializer>= 0b01000000</initializer>
          <briefdescription>
<para>не закрашивать рабочую область при отрисовке окна </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1window_1af574e171423936362ed377f0b72a73e3aefab60a60b546ca487f58a2909ca1218" prot="public">
          <name>GradientDraw</name>
          <initializer>= 0b10000000</initializer>
          <briefdescription>
<para>градиентная заливка рабочей области </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="30" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="31" bodyend="48"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_kolibri_lib_1_1window_1a7e5a1c57ea495417e3d2442f66d0fe44" prot="public" static="no" strong="no">
        <type></type>
        <name>Pos</name>
        <qualifiedname>KolibriLib::window::Pos</qualifiedname>
        <enumvalue id="namespace_kolibri_lib_1_1window_1a7e5a1c57ea495417e3d2442f66d0fe44a266058ea4510b8671f8cbd3848d85b86" prot="public">
          <name>BackGround</name>
          <initializer>= -2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1window_1a7e5a1c57ea495417e3d2442f66d0fe44a08e042d7446edeb45401a64b33718288" prot="public">
          <name>AlwaysBack</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1window_1a7e5a1c57ea495417e3d2442f66d0fe44a18ee367c465a3a9cf21c5e4842dcfe87" prot="public">
          <name>Normal</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1window_1a7e5a1c57ea495417e3d2442f66d0fe44ae55f17bf1b2f2aae685dcaa05eb60aa1" prot="public">
          <name>AlwaysTop</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Список констант положения окна относительно других окон: </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="114" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="115" bodyend="120"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespace_kolibri_lib_1_1window_1a48e7313e55557f0eb65b951483a9f67d" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb" kindref="member">Size</ref></type>
        <definition>const Size KolibriLib::window::DefaultWindowSize</definition>
        <argsstring></argsstring>
        <name>DefaultWindowSize</name>
        <qualifiedname>KolibriLib::window::DefaultWindowSize</qualifiedname>
        <initializer>= {600, 400}</initializer>
        <briefdescription>
<para>Размер окна поумолчанию </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="25" column="12" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_kolibri_lib_1_1window_1a2f01debe8c10274b6a21e26a29f0d3c9" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff" kindref="member">Coord</ref></type>
        <definition>const Coord KolibriLib::window::DefaultWindowCoord</definition>
        <argsstring></argsstring>
        <name>DefaultWindowCoord</name>
        <qualifiedname>KolibriLib::window::DefaultWindowCoord</qualifiedname>
        <initializer>= {100, 100}</initializer>
        <briefdescription>
<para>Соординаты окна по умолчанию </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="28" column="13" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1aaba9d2353e18a10d14625698d5395c8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void KolibriLib::window::KolibriLib::window::Window::Element::SetElement&lt; KolibriLib::UI::buttons::Button &gt;</definition>
        <argsstring>(const KolibriLib::UI::buttons::Button &amp;elem)</argsstring>
        <name>KolibriLib::window::Window::Element::SetElement&lt; KolibriLib::UI::buttons::Button &gt;</name>
        <qualifiedname>KolibriLib::window::SetElement&lt; KolibriLib::UI::buttons::Button &gt;</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button" kindref="compound">KolibriLib::UI::buttons::Button</ref> &amp;</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="209" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="209" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1a37fe24b1acb983cbfe5a4410c19ae1a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void KolibriLib::window::KolibriLib::window::Window::Element::SetElement&lt; KolibriLib::UI::Images::Image &gt;</definition>
        <argsstring>(const KolibriLib::UI::Images::Image &amp;elem)</argsstring>
        <name>KolibriLib::window::Window::Element::SetElement&lt; KolibriLib::UI::Images::Image &gt;</name>
        <qualifiedname>KolibriLib::window::SetElement&lt; KolibriLib::UI::Images::Image &gt;</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image" kindref="compound">KolibriLib::UI::Images::Image</ref> &amp;</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="217" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="217" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1aebaa1c780fb02d36086f494fab9f05ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void KolibriLib::window::KolibriLib::window::Window::Element::SetElement&lt; KolibriLib::UI::CheckBox &gt;</definition>
        <argsstring>(const KolibriLib::UI::CheckBox &amp;elem)</argsstring>
        <name>KolibriLib::window::Window::Element::SetElement&lt; KolibriLib::UI::CheckBox &gt;</name>
        <qualifiedname>KolibriLib::window::SetElement&lt; KolibriLib::UI::CheckBox &gt;</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1_check_box" kindref="compound">KolibriLib::UI::CheckBox</ref> &amp;</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="225" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="225" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1ae59d338b19ed079893d98e554aa63916" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void KolibriLib::window::KolibriLib::window::Window::Element::SetElement&lt; KolibriLib::UI::Form &gt;</definition>
        <argsstring>(const KolibriLib::UI::Form &amp;elem)</argsstring>
        <name>KolibriLib::window::Window::Element::SetElement&lt; KolibriLib::UI::Form &gt;</name>
        <qualifiedname>KolibriLib::window::SetElement&lt; KolibriLib::UI::Form &gt;</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1_form" kindref="compound">KolibriLib::UI::Form</ref> &amp;</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="233" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="233" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1a266b8b3a132740e75345d3e9bf76154d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void KolibriLib::window::KolibriLib::window::Window::Element::SetElement&lt; KolibriLib::UI::text::TextLabel &gt;</definition>
        <argsstring>(const KolibriLib::UI::text::TextLabel &amp;elem)</argsstring>
        <name>KolibriLib::window::Window::Element::SetElement&lt; KolibriLib::UI::text::TextLabel &gt;</name>
        <qualifiedname>KolibriLib::window::SetElement&lt; KolibriLib::UI::text::TextLabel &gt;</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label" kindref="compound">KolibriLib::UI::text::TextLabel</ref> &amp;</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="241" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="241" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1abcd7f3614051abf0b2300ea49800dbd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void KolibriLib::window::KolibriLib::window::Window::Element::SetElement&lt; KolibriLib::UI::Menu &gt;</definition>
        <argsstring>(const KolibriLib::UI::Menu &amp;elem)</argsstring>
        <name>KolibriLib::window::Window::Element::SetElement&lt; KolibriLib::UI::Menu &gt;</name>
        <qualifiedname>KolibriLib::window::SetElement&lt; KolibriLib::UI::Menu &gt;</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1_menu" kindref="compound">KolibriLib::UI::Menu</ref> &amp;</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="249" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="249" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1a0452d19f7ae680a5a9e01b8e77c0a70e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void KolibriLib::window::KolibriLib::window::Window::Element::SetElement&lt; KolibriLib::UI::Frame &gt;</definition>
        <argsstring>(const KolibriLib::UI::Frame &amp;elem)</argsstring>
        <name>KolibriLib::window::Window::Element::SetElement&lt; KolibriLib::UI::Frame &gt;</name>
        <qualifiedname>KolibriLib::window::SetElement&lt; KolibriLib::UI::Frame &gt;</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1_frame" kindref="compound">KolibriLib::UI::Frame</ref> &amp;</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="257" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="257" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1add96c1b0dec1400b7f69b8d50e4a0a2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::CreateWindow</definition>
        <argsstring>(const Coord &amp;coord, const Size &amp;size, const std::string &amp;title, const Colors::Color &amp;WorkColor=OS::GetSystemColors().work_area, Colors::Color TitleColor=OS::GetSystemColors().work_text, uint32_t style=WindowStyle::CanResize)</argsstring>
        <name>CreateWindow</name>
        <qualifiedname>KolibriLib::window::CreateWindow</qualifiedname>
        <param>
          <type>const <ref refid="namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff" kindref="member">Coord</ref> &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb" kindref="member">Size</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>WorkColor</declname>
          <defval><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">OS::GetSystemColors</ref>().work_area</defval>
        </param>
        <param>
          <type><ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref></type>
          <declname>TitleColor</declname>
          <defval><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">OS::GetSystemColors</ref>().work_text</defval>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>style</declname>
          <defval><ref refid="namespace_kolibri_lib_1_1window_1af574e171423936362ed377f0b72a73e3ae1b6e2066477f6b4ad1b746f27b3ed4e" kindref="member">WindowStyle::CanResize</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Координаты окна(его левого верхнего угола) на экране </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Размеры окна </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Заголовок окна </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WorkColor</parametername>
</parameternamelist>
<parameterdescription>
<para>цвет рабочей области окна </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TitleColor</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет текста заголовка </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>Стиль </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="57" column="13" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1ac230d3b4ccb7fb8668ce4e2e8cb30c88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::UnfocusWindow</definition>
        <argsstring>(Thread::Slot slot)</argsstring>
        <name>UnfocusWindow</name>
        <qualifiedname>KolibriLib::window::UnfocusWindow</qualifiedname>
        <param>
          <type><ref refid="namespace_kolibri_lib_1_1_thread_1ac583b7a88e5bddeab393a41bf9929c51" kindref="member">Thread::Slot</ref></type>
          <declname>slot</declname>
        </param>
        <briefdescription>
<para>Снять фокус с окна </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>слот окна </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="65" column="13" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1a8522ac0eb50e9a7b5ce0091e5fc9d257" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::FocusWindow</definition>
        <argsstring>(Thread::Slot slot)</argsstring>
        <name>FocusWindow</name>
        <qualifiedname>KolibriLib::window::FocusWindow</qualifiedname>
        <param>
          <type><ref refid="namespace_kolibri_lib_1_1_thread_1ac583b7a88e5bddeab393a41bf9929c51" kindref="member">Thread::Slot</ref></type>
          <declname>slot</declname>
        </param>
        <briefdescription>
<para>Поставить фокус на окно </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>слот окна </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="72" column="13" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1af86ed52f97ce1b6925d0faabc8a0ebe1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_kolibri_lib_1_1_thread_1ac583b7a88e5bddeab393a41bf9929c51" kindref="member">Thread::Slot</ref></type>
        <definition>Thread::Slot KolibriLib::window::GetActiveWindow</definition>
        <argsstring>()</argsstring>
        <name>GetActiveWindow</name>
        <qualifiedname>KolibriLib::window::GetActiveWindow</qualifiedname>
        <briefdescription>
<para>Получить слот активного окна </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Слот активного в данный момент окна </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="79" column="21" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="79" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1a1e8e470c8a52494478a075c0c4b10c07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::MinimizeWindow</definition>
        <argsstring>()</argsstring>
        <name>MinimizeWindow</name>
        <qualifiedname>KolibriLib::window::MinimizeWindow</qualifiedname>
        <briefdescription>
<para>Свернуть окно </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="91" column="13" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="91" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1a91e8114838ac0faa6b26cb1763643a92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::MinimizeAllWindows</definition>
        <argsstring>()</argsstring>
        <name>MinimizeAllWindows</name>
        <qualifiedname>KolibriLib::window::MinimizeAllWindows</qualifiedname>
        <briefdescription>
<para>Свернуть все окна </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="100" column="13" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="100" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1a0967b5d59bd2f60559fe29fdaaffd6c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff" kindref="member">Coord</ref></type>
        <definition>Coord KolibriLib::window::GetWindowCoord</definition>
        <argsstring>()</argsstring>
        <name>GetWindowCoord</name>
        <qualifiedname>KolibriLib::window::GetWindowCoord</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="108" column="14" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1a250b79696e71e4db883c35beac60b0a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int KolibriLib::window::GetWindowPos</definition>
        <argsstring>()</argsstring>
        <name>GetWindowPos</name>
        <qualifiedname>KolibriLib::window::GetWindowPos</qualifiedname>
        <briefdescription>
<para>Получить положение окна относительно других окон </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>одна из констант из списка <ref refid="namespace_kolibri_lib_1_1window_1a7e5a1c57ea495417e3d2442f66d0fe44" kindref="member">Pos</ref></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="124" column="12" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="124" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1a7a45146a32e2035cedd93968251b5831" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KolibriLib::window::SetWindowPos</definition>
        <argsstring>(int pos, Thread::PID pid=-1)</argsstring>
        <name>SetWindowPos</name>
        <qualifiedname>KolibriLib::window::SetWindowPos</qualifiedname>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="namespace_kolibri_lib_1_1_thread_1a1635692d8eb5eddc602109be07a50a45" kindref="member">Thread::PID</ref></type>
          <declname>pid</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Изменить положение окна относительно дроугих окон </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>значение из списка <ref refid="namespace_kolibri_lib_1_1window_1a7e5a1c57ea495417e3d2442f66d0fe44" kindref="member">pid процесс окна, по умолчанию текущий  false если ошибка, </ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="138" column="13" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="138" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1a9b4d6e11048953c9f7a1e530f135fb20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned KolibriLib::window::GetSkinHeight</definition>
        <argsstring>()</argsstring>
        <name>GetSkinHeight</name>
        <qualifiedname>KolibriLib::window::GetSkinHeight</qualifiedname>
        <briefdescription>
<para>Получить высоту скина(заголовка окна) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>высота скина </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="151" column="17" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="151" bodyend="154"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Работа с окном </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="28" column="1"/>
  </compounddef>
</doxygen>
