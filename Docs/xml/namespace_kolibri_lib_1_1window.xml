<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="ru">
  <compounddef id="namespace_kolibri_lib_1_1window" kind="namespace" language="C++">
    <compoundname>KolibriLib::window</compoundname>
    <innerclass refid="class_kolibri_lib_1_1window_1_1_window" prot="public">KolibriLib::window::Window</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="namespace_kolibri_lib_1_1window_1af574e171423936362ed377f0b72a73e3" prot="public" static="no" strong="no">
        <type></type>
        <name>WindowStyle</name>
        <qualifiedname>KolibriLib::window::WindowStyle</qualifiedname>
        <enumvalue id="namespace_kolibri_lib_1_1window_1af574e171423936362ed377f0b72a73e3a82a7abe67023e161d701d6a16731f2da" prot="public">
          <name>FixSize</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>окно фиксированных размеров </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1window_1af574e171423936362ed377f0b72a73e3a437c943279eb3aced1be94554420c7cc" prot="public">
          <name>NoDraw</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>только определить область окна, ничего не рисовать </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1window_1af574e171423936362ed377f0b72a73e3ae1b6e2066477f6b4ad1b746f27b3ed4e" prot="public">
          <name>CanResize</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>окно изменяемых размеров </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1window_1af574e171423936362ed377f0b72a73e3a48f4ce149dde530a52a5cae2960ff573" prot="public">
          <name>withSkin</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>окно со скином </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1window_1af574e171423936362ed377f0b72a73e3aa55ea9bbd14415e821b5687bc5d0845d" prot="public">
          <name>FixSizewithSkin</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>окно со скином фиксированных размеров </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1window_1af574e171423936362ed377f0b72a73e3a96343d8bb6ab6cf4e43457156dd9a1cd" prot="public">
          <name>NoDrawWorkspace</name>
          <initializer>= 0b01000000</initializer>
          <briefdescription>
<para>не закрашивать рабочую область при отрисовке окна </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1window_1af574e171423936362ed377f0b72a73e3a26c600ed61b038f96324592065b013fb" prot="public">
          <name>NormalDraw</name>
          <initializer>= 0b00000000</initializer>
          <briefdescription>
<para>нормальная заливка рабочей области </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1window_1af574e171423936362ed377f0b72a73e3aefab60a60b546ca487f58a2909ca1218" prot="public">
          <name>GradientDraw</name>
          <initializer>= 0b10000000</initializer>
          <briefdescription>
<para>градиентная заливка рабочей области </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="30" column="1" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="31" bodyend="48"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_kolibri_lib_1_1window_1a7e5a1c57ea495417e3d2442f66d0fe44" prot="public" static="no" strong="no">
        <type></type>
        <name>Pos</name>
        <qualifiedname>KolibriLib::window::Pos</qualifiedname>
        <enumvalue id="namespace_kolibri_lib_1_1window_1a7e5a1c57ea495417e3d2442f66d0fe44a266058ea4510b8671f8cbd3848d85b86" prot="public">
          <name>BackGround</name>
          <initializer>= -2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1window_1a7e5a1c57ea495417e3d2442f66d0fe44a08e042d7446edeb45401a64b33718288" prot="public">
          <name>AlwaysBack</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1window_1a7e5a1c57ea495417e3d2442f66d0fe44a18ee367c465a3a9cf21c5e4842dcfe87" prot="public">
          <name>Normal</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1window_1a7e5a1c57ea495417e3d2442f66d0fe44ae55f17bf1b2f2aae685dcaa05eb60aa1" prot="public">
          <name>AlwaysTop</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Список констант положения окна относительно других окон: </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="124" column="1" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="125" bodyend="130"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespace_kolibri_lib_1_1window_1a1f1ae2f8103c37a9b5a88cce14f75f9d" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Size</ref></type>
        <definition>const UI::Size KolibriLib::window::DefaultWindowSize</definition>
        <argsstring></argsstring>
        <name>DefaultWindowSize</name>
        <qualifiedname>KolibriLib::window::DefaultWindowSize</qualifiedname>
        <initializer>= {400, 400}</initializer>
        <briefdescription>
<para>Размер окна поумолчанию </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="25" column="16" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_kolibri_lib_1_1window_1a0b2c16c6f0b120a6ef83b2366006c6a6" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref></type>
        <definition>const UI::Coord KolibriLib::window::DefaultWindowCoord</definition>
        <argsstring></argsstring>
        <name>DefaultWindowCoord</name>
        <qualifiedname>KolibriLib::window::DefaultWindowCoord</qualifiedname>
        <initializer>= {100, 100}</initializer>
        <briefdescription>
<para>Соординаты окна по умолчанию </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="28" column="17" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1ae11ecf3ca59d8ae18ba08bfb128fb5da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::CreateWindow</definition>
        <argsstring>(const UI::Coord coord, const UI::Size size, const std::string &amp;title, const Colors::Color WorkColor=OS::sys_color_table.frame_area, const Colors::Color TitleColor=OS::sys_color_table.work_text, const uint32_t style=WindowStyle::CanResize+WindowStyle::NormalDraw)</argsstring>
        <name>CreateWindow</name>
        <qualifiedname>KolibriLib::window::CreateWindow</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref></type>
          <declname>coord</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Size</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref></type>
          <declname>WorkColor</declname>
          <defval>OS::sys_color_table.frame_area</defval>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref></type>
          <declname>TitleColor</declname>
          <defval>OS::sys_color_table.work_text</defval>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>style</declname>
          <defval><ref refid="namespace_kolibri_lib_1_1window_1af574e171423936362ed377f0b72a73e3ae1b6e2066477f6b4ad1b746f27b3ed4e" kindref="member">WindowStyle::CanResize</ref>+<ref refid="namespace_kolibri_lib_1_1window_1af574e171423936362ed377f0b72a73e3a26c600ed61b038f96324592065b013fb" kindref="member">WindowStyle::NormalDraw</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Координаты окна(его левого верхнего угола) на экране </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Размеры окна </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Заголовок окна </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>WorkColor</parametername>
</parameternamelist>
<parameterdescription>
<para>цвет рабочей области окна </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TitleColor</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет текста заголовка </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>Стиль </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="57" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="57" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1ac230d3b4ccb7fb8668ce4e2e8cb30c88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::UnfocusWindow</definition>
        <argsstring>(Thread::Slot slot)</argsstring>
        <name>UnfocusWindow</name>
        <qualifiedname>KolibriLib::window::UnfocusWindow</qualifiedname>
        <param>
          <type><ref refid="namespace_kolibri_lib_1_1_thread_1ac583b7a88e5bddeab393a41bf9929c51" kindref="member">Thread::Slot</ref></type>
          <declname>slot</declname>
        </param>
        <briefdescription>
<para>Снять фокус с окна </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>слот окна </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="77" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1a8522ac0eb50e9a7b5ce0091e5fc9d257" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::FocusWindow</definition>
        <argsstring>(Thread::Slot slot)</argsstring>
        <name>FocusWindow</name>
        <qualifiedname>KolibriLib::window::FocusWindow</qualifiedname>
        <param>
          <type><ref refid="namespace_kolibri_lib_1_1_thread_1ac583b7a88e5bddeab393a41bf9929c51" kindref="member">Thread::Slot</ref></type>
          <declname>slot</declname>
        </param>
        <briefdescription>
<para>Поставить фокус на окно </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slot</parametername>
</parameternamelist>
<parameterdescription>
<para>слот окна </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="84" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1af86ed52f97ce1b6925d0faabc8a0ebe1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_kolibri_lib_1_1_thread_1ac583b7a88e5bddeab393a41bf9929c51" kindref="member">Thread::Slot</ref></type>
        <definition>Thread::Slot KolibriLib::window::GetActiveWindow</definition>
        <argsstring>()</argsstring>
        <name>GetActiveWindow</name>
        <qualifiedname>KolibriLib::window::GetActiveWindow</qualifiedname>
        <briefdescription>
<para>Получить слот активного окна </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Слот активного в данный момент окна </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="91" column="21" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="91" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1a1e8e470c8a52494478a075c0c4b10c07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::MinimizeWindow</definition>
        <argsstring>()</argsstring>
        <name>MinimizeWindow</name>
        <qualifiedname>KolibriLib::window::MinimizeWindow</qualifiedname>
        <briefdescription>
<para>Свернуть окно </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="103" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="103" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1a91e8114838ac0faa6b26cb1763643a92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::MinimizeAllWindows</definition>
        <argsstring>()</argsstring>
        <name>MinimizeAllWindows</name>
        <qualifiedname>KolibriLib::window::MinimizeAllWindows</qualifiedname>
        <briefdescription>
<para>Свернуть все окна </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="111" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="111" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1a08fa1c0d034c065f169245ed1ae06842" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref></type>
        <definition>UI::Coord KolibriLib::window::GetWindowCoord</definition>
        <argsstring>()</argsstring>
        <name>GetWindowCoord</name>
        <qualifiedname>KolibriLib::window::GetWindowCoord</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="118" column="18" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1a250b79696e71e4db883c35beac60b0a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int KolibriLib::window::GetWindowPos</definition>
        <argsstring>()</argsstring>
        <name>GetWindowPos</name>
        <qualifiedname>KolibriLib::window::GetWindowPos</qualifiedname>
        <briefdescription>
<para>Получить положение окна относительно других окон </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>одна из констант из списка <ref refid="namespace_kolibri_lib_1_1window_1a7e5a1c57ea495417e3d2442f66d0fe44" kindref="member">Pos</ref></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="134" column="12" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="134" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1a7a45146a32e2035cedd93968251b5831" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool KolibriLib::window::SetWindowPos</definition>
        <argsstring>(int pos, Thread::PID pid=-1)</argsstring>
        <name>SetWindowPos</name>
        <qualifiedname>KolibriLib::window::SetWindowPos</qualifiedname>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="namespace_kolibri_lib_1_1_thread_1a1635692d8eb5eddc602109be07a50a45" kindref="member">Thread::PID</ref></type>
          <declname>pid</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Изменить положение окна относительно дроугих окон </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>значение из списка <ref refid="namespace_kolibri_lib_1_1window_1a7e5a1c57ea495417e3d2442f66d0fe44" kindref="member">pid процесс окна, по умолчанию текущий  false если ошибка, </ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="148" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="148" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1window_1a9b4d6e11048953c9f7a1e530f135fb20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned KolibriLib::window::GetSkinHeight</definition>
        <argsstring>()</argsstring>
        <name>GetSkinHeight</name>
        <qualifiedname>KolibriLib::window::GetSkinHeight</qualifiedname>
        <briefdescription>
<para>Получить высоту скина(заголовка окна) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>высота скина </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" line="161" column="17" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/windowBase.hpp" bodystart="161" bodyend="164"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Работа с окном </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="33" column="1"/>
  </compounddef>
</doxygen>
