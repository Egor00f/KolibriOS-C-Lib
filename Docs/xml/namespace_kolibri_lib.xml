<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="namespace_kolibri_lib" kind="namespace" language="C++">
    <compoundname>KolibriLib</compoundname>
    <innerclass refid="struct_kolibri_lib_1_1point" prot="public">KolibriLib::point</innerclass>
    <innernamespace refid="namespace_kolibri_lib_1_1child_window">KolibriLib::childWindow</innernamespace>
    <innernamespace refid="namespace_kolibri_lib_1_1_color">KolibriLib::Color</innernamespace>
    <innernamespace refid="namespace_kolibri_lib_1_1filesystem">KolibriLib::filesystem</innernamespace>
    <innernamespace refid="namespace_kolibri_lib_1_1graphic">KolibriLib::graphic</innernamespace>
    <innernamespace refid="namespace_kolibri_lib_1_1mouse">KolibriLib::mouse</innernamespace>
    <innernamespace refid="namespace_kolibri_lib_1_1_network">KolibriLib::Network</innernamespace>
    <innernamespace refid="namespace_kolibri_lib_1_1_o_s">KolibriLib::OS</innernamespace>
    <innernamespace refid="namespace_kolibri_lib_1_1_thread">KolibriLib::Thread</innernamespace>
    <innernamespace refid="namespace_kolibri_lib_1_1_u_i">KolibriLib::UI</innernamespace>
    <innernamespace refid="namespace_kolibri_lib_1_1window">KolibriLib::window</innernamespace>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespace_kolibri_lib_1ac3fc0a4a923e29aa814420d285d1fa9c" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string KolibriLib::ConfigurationDir</definition>
        <argsstring></argsstring>
        <name>ConfigurationDir</name>
        <qualifiedname>KolibriLib::ConfigurationDir</qualifiedname>
        <initializer>= &quot;/kolibrios/etc/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/small.hpp" line="11" column="23" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/small.hpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_kolibri_lib_1ae42aab2f9795e3359fb723ff5820250c" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string KolibriLib::ImgDir</definition>
        <argsstring></argsstring>
        <name>ImgDir</name>
        <qualifiedname>KolibriLib::ImgDir</qualifiedname>
        <initializer>= ConfigurationDir + &quot;images/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/small.hpp" line="13" column="23" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/small.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_kolibri_lib_1ab1099de2131804416562ef820927ca2b" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string KolibriLib::DefaultImage</definition>
        <argsstring></argsstring>
        <name>DefaultImage</name>
        <qualifiedname>KolibriLib::DefaultImage</qualifiedname>
        <initializer>= ImgDir + &quot;default.png&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/small.hpp" line="15" column="23" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/small.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_kolibri_lib_1aa47d5ef524ec6197866199e1522047c6" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string KolibriLib::CursorsDir</definition>
        <argsstring></argsstring>
        <name>CursorsDir</name>
        <qualifiedname>KolibriLib::CursorsDir</qualifiedname>
        <initializer>= ConfigurationDir + &quot;cursors/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/small.hpp" line="17" column="23" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/small.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespace_kolibri_lib_1a79cea121a31a0a2da904f088c3484802" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <qualifiedname>KolibriLib::init</qualifiedname>
        <briefdescription>
<para>инициализация </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/base.hpp" line="21" column="10" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/base.hpp" bodystart="21" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1a56a5ef2333e7fe22f558aaa6c9276b7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::Wait</definition>
        <argsstring>(unsigned int time)</argsstring>
        <name>Wait</name>
        <qualifiedname>KolibriLib::Wait</qualifiedname>
        <param>
          <type>unsigned int</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Подождать </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>время задержки(в 1/100 секунды) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/os.hpp" line="92" column="17" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/os.hpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1a8ef3c016e993ed0a7c2d110d4adae88e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">point</ref>&lt; unsigned &gt;</type>
        <definition>point&lt; unsigned &gt; KolibriLib::GetScreenSize</definition>
        <argsstring>()</argsstring>
        <name>GetScreenSize</name>
        <qualifiedname>KolibriLib::GetScreenSize</qualifiedname>
        <briefdescription>
<para>Получить разрешение экрана </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>размер экрана </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/screen.hpp" line="14" column="11" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/screen.hpp" bodystart="14" bodyend="18"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Основное пространство имён </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Egor00f </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/base.hpp" line="17" column="1"/>
  </compounddef>
</doxygen>
