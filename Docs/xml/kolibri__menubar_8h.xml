<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="ru">
  <compounddef id="kolibri__menubar_8h" kind="file" language="C++">
    <compoundname>kolibri_menubar.h</compoundname>
    <includes refid="kos32sys_8h" local="no">kos32sys.h</includes>
    <includes refid="os_8hpp" local="no">kolibriLib/system/os.hpp</includes>
    <includedby refid="kolibri__gui__elements_8h" local="yes">C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui_elements.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_menubar.h</label>
        <link refid="kolibri__menubar_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kos32sys.h</label>
        <link refid="kos32sys_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>kolibriLib/color.hpp</label>
        <link refid="color_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>kolibriLib/system/filesystem.hpp</label>
        <link refid="filesystem_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>kolibriLib/system/os.hpp</label>
        <link refid="os_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdarg.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
      <node id="10">
        <label>sys/ksys.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui.h</label>
        <link refid="kolibri__gui_8h_source"/>
      </node>
      <node id="2">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui_elements.h</label>
        <link refid="kolibri__gui__elements_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_menubar.h</label>
        <link refid="kolibri__menubar_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structmenubar" prot="public">menubar</innerclass>
    <sectiondef kind="var">
      <memberdef kind="variable" id="kolibri__menubar_8h_1ae02cc8f979dde5a1f3f0469713cb9f9f" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* menu_bar_draw) (menubar *) __attribute__((__stdcall__))</definition>
        <argsstring>)(menubar *) __attribute__((__stdcall__))</argsstring>
        <name>menu_bar_draw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_menubar.h" line="112" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_menubar.h" declline="112" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__menubar_8h_1af576986ad2e0c1521fdc1119741c9d29" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* menu_bar_mouse) (menubar *) __attribute__((__stdcall__))</definition>
        <argsstring>)(menubar *) __attribute__((__stdcall__))</argsstring>
        <name>menu_bar_mouse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_menubar.h" line="113" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_menubar.h" declline="113" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__menubar_8h_1a1aaf364aa7db0a66ca79d81c1a919cf2" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* menu_bar_activate) (menubar *) __attribute__((__stdcall__))</definition>
        <argsstring>)(menubar *) __attribute__((__stdcall__))</argsstring>
        <name>menu_bar_activate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_menubar.h" line="114" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_menubar.h" declline="114" declcolumn="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="kolibri__menubar_8h_1a317da6e0bb85886fdaaf7306c0433965" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmenubar" kindref="compound">menubar</ref> *</type>
        <definition>static menubar * kolibri_menubar</definition>
        <argsstring>(menubar *bar, uint32_t x_w, uint32_t y_h, uint16_t sub_w, uint16_t sub_h, char **menutext, color_t sel_font, color_t unsel_font, color_t top_bg, color_t top_select, color_t sub_bg, color_t sub_select)</argsstring>
        <name>kolibri_menubar</name>
        <param>
          <type><ref refid="structmenubar" kindref="compound">menubar</ref> *</type>
          <declname>bar</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>x_w</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>y_h</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>sub_w</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>sub_h</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>menutext</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>sel_font</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>unsel_font</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>top_bg</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>top_select</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>sub_bg</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>sub_select</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_menubar.h" line="46" column="23" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_menubar.h" bodystart="46" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__menubar_8h_1a0d7727698a9958f35d69ee8ca5460fc0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmenubar" kindref="compound">menubar</ref> *</type>
        <definition>static menubar * kolibri_new_menubar</definition>
        <argsstring>(uint32_t x_w, uint32_t y_h, uint16_t sub_w, uint16_t sub_h, char **menutext, color_t sel_font, color_t unsel_font, color_t top_bg, color_t top_select, color_t sub_bg, color_t sub_select)</argsstring>
        <name>kolibri_new_menubar</name>
        <param>
          <type>uint32_t</type>
          <declname>x_w</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>y_h</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>sub_w</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>sub_h</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>menutext</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>sel_font</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>unsel_font</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>top_bg</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>top_select</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>sub_bg</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>sub_select</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_menubar.h" line="85" column="23" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_menubar.h" bodystart="85" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__menubar_8h_1a739e7e39bfd8ca9b33c9147ab72dc5b1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmenubar" kindref="compound">menubar</ref> *</type>
        <definition>static menubar * kolibri_menubar_def</definition>
        <argsstring>(menubar *bar, uint32_t x_w, uint32_t y_h, uint16_t sub_w, uint16_t sub_h, char **menutext)</argsstring>
        <name>kolibri_menubar_def</name>
        <param>
          <type><ref refid="structmenubar" kindref="compound">menubar</ref> *</type>
          <declname>bar</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>x_w</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>y_h</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>sub_w</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>sub_h</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>menutext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_menubar.h" line="92" column="23" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_menubar.h" bodystart="92" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__menubar_8h_1a3344f0e1ac3f101e5cb6136415176261" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmenubar" kindref="compound">menubar</ref> *</type>
        <definition>static menubar * kolibri_new_menubar_def</definition>
        <argsstring>(uint32_t x_w, uint32_t y_h, uint16_t sub_w, uint16_t sub_h, char **menutext)</argsstring>
        <name>kolibri_new_menubar_def</name>
        <param>
          <type>uint32_t</type>
          <declname>x_w</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>y_h</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>sub_w</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>sub_h</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>menutext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_menubar.h" line="99" column="23" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_menubar.h" bodystart="99" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__menubar_8h_1a9f2e10c3e659906e787a20732e1c7326" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gui_add_menubar</definition>
        <argsstring>(kolibri_window *wnd, menubar *bar)</argsstring>
        <name>gui_add_menubar</name>
        <param>
          <type><ref refid="structkolibri__window" kindref="compound">kolibri_window</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type><ref refid="structmenubar" kindref="compound">menubar</ref> *</type>
          <declname>bar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_menubar.h" line="106" column="20" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_menubar.h" bodystart="106" bodyend="109"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>KOLIBRI_MENUBAR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KOLIBRI_MENUBAR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kos32sys.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kolibriLib/system/os.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="structmenubar" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>type;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>����<sp/>���<sp/>�������,<sp/>������<sp/>�����</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>x_w;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>�������<sp/>�����</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>y_h;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_pointer;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>pos_pointer;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>text_end;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mouse_pos;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mouse_keys;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>x_w1;<sp/><sp/></highlight><highlight class="comment">//<sp/>�������</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>y_h1;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/>bckg_col;<sp/><sp/></highlight><highlight class="comment">//<sp/>���<sp/>��������<sp/>�����</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/>frnt_col;<sp/><sp/></highlight><highlight class="comment">//<sp/>���<sp/>����������<sp/>��������<sp/>������</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/>menu_col;<sp/><sp/></highlight><highlight class="comment">//<sp/>���<sp/>����������<sp/>�����<sp/>(��������)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>select;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>out_select;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf_adress;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>procinfo;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>click;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cursor;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cursor_old;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>interval;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cursor_max;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>extended_key;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/>menu_sel_col;<sp/><sp/></highlight><highlight class="comment">//<sp/>����<sp/>����<sp/>����������<sp/>���������</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/>bckg_text_col;<sp/></highlight><highlight class="comment">//<sp/>����<sp/>������<sp/>������������<sp/>������</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/>frnt_text_col;<sp/><sp/></highlight><highlight class="comment">//<sp/>����<sp/>������<sp/>����������<sp/>������</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mouse_keys_old;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>font_height;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cursor_out;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>get_mouse_flag;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}<sp/><ref refid="structmenubar" kindref="compound">menubar</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structmenubar" kindref="compound">menubar</ref>*<sp/>kolibri_menubar(<ref refid="structmenubar" kindref="compound">menubar</ref>*<sp/>bar,<sp/>uint32_t<sp/>x_w,<sp/>uint32_t<sp/>y_h,<sp/>uint16_t<sp/>sub_w,<sp/>uint16_t<sp/>sub_h,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**menutext,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color_t<sp/>sel_font,<sp/>color_t<sp/>unsel_font,<sp/>color_t<sp/>top_bg,<sp/>color_t<sp/>top_select,<sp/>color_t<sp/>sub_bg,<sp/>color_t<sp/>sub_select)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>procinfo[1024];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(bar,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmenubar" kindref="compound">menubar</ref>));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>bar-&gt;type<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>bar-&gt;x_w<sp/>=<sp/>x_w;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>bar-&gt;y_h<sp/>=<sp/>y_h;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>count<sp/>summary<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pc,<sp/>**mitem;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(mitem<sp/>=<sp/>menutext;<sp/>*mitem;<sp/>mitem++)<sp/>len<sp/>+=<sp/>strlen(*mitem)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>menu<sp/>items<sp/>in<sp/>needed<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>bar-&gt;text_pointer<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>malloc(len<sp/>+<sp/>1);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>be<sp/>freed<sp/>manual<sp/>at<sp/>closing<sp/>secondary<sp/>windows<sp/>with<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(pc<sp/>=<sp/>bar-&gt;text_pointer,<sp/>mitem<sp/>=<sp/>menutext;<sp/>*mitem;<sp/>pc<sp/>+=<sp/>strlen(*mitem++)<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(pc,<sp/>*mitem);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>*pc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>bar-&gt;text_end<sp/>=<sp/>pc;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>bar-&gt;pos_pointer<sp/>=<sp/>strchr(bar-&gt;text_pointer,<sp/>0)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>bar-&gt;x_w1<sp/>=<sp/>X_Y(x_w<sp/>&gt;&gt;<sp/>16,<sp/>sub_w);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>bar-&gt;y_h1<sp/>=<sp/>X_Y((y_h<sp/>&gt;&gt;<sp/>16)<sp/>+<sp/>(y_h<sp/>&amp;<sp/>0xFFFF),<sp/>sub_h);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>bar-&gt;interval<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>bar-&gt;font_height<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>bar-&gt;bckg_col<sp/>=<sp/>top_bg;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>bar-&gt;frnt_col<sp/>=<sp/>top_select;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>bar-&gt;menu_col<sp/>=<sp/>sub_bg;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>bar-&gt;menu_sel_col<sp/>=<sp/>sub_select;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>bar-&gt;bckg_text_col<sp/>=<sp/>unsel_font;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>bar-&gt;frnt_text_col<sp/>=<sp/>sel_font;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>bar-&gt;procinfo<sp/>=<sp/>procinfo;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bar;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structmenubar" kindref="compound">menubar</ref>*<sp/>kolibri_new_menubar(uint32_t<sp/>x_w,<sp/>uint32_t<sp/>y_h,<sp/>uint16_t<sp/>sub_w,<sp/>uint16_t<sp/>sub_h,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**menutext,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color_t<sp/>sel_font,<sp/>color_t<sp/>unsel_font,<sp/>color_t<sp/>top_bg,<sp/>color_t<sp/>top_select,<sp/>color_t<sp/>sub_bg,<sp/>color_t<sp/>sub_select)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmenubar" kindref="compound">menubar</ref><sp/>*new_bar<sp/>=<sp/>(<ref refid="structmenubar" kindref="compound">menubar</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmenubar" kindref="compound">menubar</ref>));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kolibri_menubar(new_bar,<sp/>x_w,<sp/>y_h,<sp/>sub_w,<sp/>sub_h,<sp/>menutext,<sp/>sel_font,<sp/>unsel_font,<sp/>top_bg,<sp/>top_select,<sp/>sub_bg,<sp/>sub_select);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structmenubar" kindref="compound">menubar</ref>*<sp/>kolibri_menubar_def(<ref refid="structmenubar" kindref="compound">menubar</ref>*<sp/>bar,<sp/>uint32_t<sp/>x_w,<sp/>uint32_t<sp/>y_h,<sp/>uint16_t<sp/>sub_w,<sp/>uint16_t<sp/>sub_h,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**menutext)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kolibri_menubar(bar,<sp/>x_w,<sp/>y_h,<sp/>sub_w,<sp/>sub_h,<sp/>menutext,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().work_button_text,<sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().work_text,<sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().work_area,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().work_button,<sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().grab_bar_button,<sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().work_button);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structmenubar" kindref="compound">menubar</ref>*<sp/>kolibri_new_menubar_def(uint32_t<sp/>x_w,<sp/>uint32_t<sp/>y_h,<sp/>uint16_t<sp/>sub_w,<sp/>uint16_t<sp/>sub_h,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**menutext)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kolibri_new_menubar(x_w,<sp/>y_h,<sp/>sub_w,<sp/>sub_h,<sp/>menutext,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().work_button_text,<sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().work_text,<sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().work_area,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().work_button,<sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().grab_bar_button,<sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().work_button);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gui_add_menubar(<ref refid="structkolibri__window" kindref="compound">kolibri_window</ref><sp/>*wnd,<sp/><ref refid="structmenubar" kindref="compound">menubar</ref>*<sp/>bar)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>kolibri_window_add_element(wnd,<sp/>KOLIBRI_MENU_BAR,<sp/>bar);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*menu_bar_draw)(<ref refid="structmenubar" kindref="compound">menubar</ref><sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*menu_bar_mouse)(<ref refid="structmenubar" kindref="compound">menubar</ref><sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*menu_bar_activate)(<ref refid="structmenubar" kindref="compound">menubar</ref><sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>KOLIBRI_MENUBAR_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_menubar.h"/>
  </compounddef>
</doxygen>
