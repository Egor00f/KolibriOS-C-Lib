<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="ru">
  <compounddef id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char" kind="class" language="C++" prot="public">
    <compoundname>KolibriLib::UI::text::Char</compoundname>
    <includes refid="text_8hpp" local="no">text.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1abe408b9a3246eb289318bb1e0eec3257" prot="public" static="no" strong="no">
        <type></type>
        <name>Type</name>
        <qualifiedname>KolibriLib::UI::text::Char::Type</qualifiedname>
        <enumvalue id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1abe408b9a3246eb289318bb1e0eec3257a2b75aae4f1b56ee1a2515c7849266684" prot="public">
          <name>None</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1abe408b9a3246eb289318bb1e0eec3257a40cb1175308bbc8eaf15bdba13ef6551" prot="public">
          <name>Image</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1abe408b9a3246eb289318bb1e0eec3257a9a12d4b110d223434e6113d89d1ca2e3" prot="public">
          <name>Text</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="201" column="17" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" bodystart="202" bodyend="206"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a4eb4207910135d0f1e86f79f9c87dfe8" prot="protected" static="no" mutable="no">
        <type><ref refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1img" kindref="compound">Images::img</ref> *</type>
        <definition>Images::img* KolibriLib::UI::text::Char::_img</definition>
        <argsstring></argsstring>
        <name>_img</name>
        <qualifiedname>KolibriLib::UI::text::Char::_img</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="288" column="33" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a37b7fe5eeac3a5e2c19bb27c9ebf36c6" prot="protected" static="no" mutable="no">
        <type>char *</type>
        <definition>char* KolibriLib::UI::text::Char::_c</definition>
        <argsstring></argsstring>
        <name>_c</name>
        <qualifiedname>KolibriLib::UI::text::Char::_c</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="289" column="26" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" bodystart="289" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a55521b4847e407f3bef281ef726339cb" prot="private" static="no" mutable="yes">
        <type><ref refid="struct_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1_1_font" kindref="compound">Fonts::Font</ref></type>
        <definition>Fonts::Font KolibriLib::UI::text::Char::_font</definition>
        <argsstring></argsstring>
        <name>_font</name>
        <qualifiedname>KolibriLib::UI::text::Char::_font</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="295" column="37" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1ad1f415095dba00d3c336d37291777994" prot="private" static="no" mutable="yes">
        <type><ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> *</type>
        <definition>Colors::Color* KolibriLib::UI::text::Char::_TextColor</definition>
        <argsstring></argsstring>
        <name>_TextColor</name>
        <qualifiedname>KolibriLib::UI::text::Char::_TextColor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="298" column="39" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a90514181d2f96ecf685087dda3276386" prot="private" static="no" mutable="yes">
        <type><ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> *</type>
        <definition>Colors::Color* KolibriLib::UI::text::Char::_BackgroundColor</definition>
        <argsstring></argsstring>
        <name>_BackgroundColor</name>
        <qualifiedname>KolibriLib::UI::text::Char::_BackgroundColor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="299" column="39" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a147f04639e1b666ec9c7425dec49b6f7" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned KolibriLib::UI::text::Char::_type</definition>
        <argsstring></argsstring>
        <name>_type</name>
        <qualifiedname>KolibriLib::UI::text::Char::_type</qualifiedname>
        <briefdescription>
<para>Тип </para>
        </briefdescription>
        <detaileddescription>
<sect4 id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1Хранит">
<title>значение из спика <ref refid="_1abe408b9a3246eb289318bb1e0eec3257" kindref="member">Char::Type</ref></title></sect4>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="304" column="26" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" bodystart="304" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a1b7d6d5d73d6661e87db922d1fd18cff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KolibriLib::UI::text::Char::Char</definition>
        <argsstring>(char c=&apos; &apos;, const Fonts::Font &amp;font=Fonts::DefaultFont, const Colors::Color &amp;TextColor=OS::sys_color_table.work_text, const Colors::Color &amp;BackgroundColor=OS::sys_color_table.work_area)</argsstring>
        <name>Char</name>
        <qualifiedname>KolibriLib::UI::text::Char::Char</qualifiedname>
        <param>
          <type>char</type>
          <declname>c</declname>
          <defval>&apos; &apos;</defval>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1_1_font" kindref="compound">Fonts::Font</ref> &amp;</type>
          <declname>font</declname>
          <defval><ref refid="namespace_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1abab58341d8cf9048d474cf45a2e00723" kindref="member">Fonts::DefaultFont</ref></defval>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>TextColor</declname>
          <defval>OS::sys_color_table.work_text</defval>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>BackgroundColor</declname>
          <defval>OS::sys_color_table.work_area</defval>
        </param>
        <briefdescription>
<para>Конструктор </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>символ </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>размеры символа </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>флаги </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TextColor</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет текста </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>BackgroundColor</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет фона </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="214" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1abc7672ace64c0020b3b814b1861a7d04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KolibriLib::UI::text::Char::Char</definition>
        <argsstring>(const Images::img &amp;img, const Fonts::Font &amp;font=Fonts::DefaultFont)</argsstring>
        <name>Char</name>
        <qualifiedname>KolibriLib::UI::text::Char::Char</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1img" kindref="compound">Images::img</ref> &amp;</type>
          <declname>img</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1_1_font" kindref="compound">Fonts::Font</ref> &amp;</type>
          <declname>font</declname>
          <defval><ref refid="namespace_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1abab58341d8cf9048d474cf45a2e00723" kindref="member">Fonts::DefaultFont</ref></defval>
        </param>
        <briefdescription>
<para>Конструктор </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>img</parametername>
</parameternamelist>
<parameterdescription>
<para>изображение </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="218" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1acd2b417f8107d5e7f7615c4ac009eb82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KolibriLib::UI::text::Char::~Char</definition>
        <argsstring>()</argsstring>
        <name>~Char</name>
        <qualifiedname>KolibriLib::UI::text::Char::~Char</qualifiedname>
        <briefdescription>
<para>Деструктор </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="221" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1ab58ef855da83e63793e8f1e20e0fbc90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>short</type>
        <definition>short KolibriLib::UI::text::Char::GetType</definition>
        <argsstring>() const</argsstring>
        <name>GetType</name>
        <qualifiedname>KolibriLib::UI::text::Char::GetType</qualifiedname>
        <briefdescription>
<para>Получить тип </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>значение из списка <ref refid="_1abe408b9a3246eb289318bb1e0eec3257" kindref="member">Type</ref></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="225" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a4b67c87fde0d21a2270c01cb24b1e3a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::text::Char::Set</definition>
        <argsstring>(const char c, const Fonts::Font &amp;font=Fonts::DefaultFont, const Colors::Color &amp;TextColor=OS::sys_color_table.work_text, const Colors::Color &amp;BackgroundColor=OS::sys_color_table.work_area)</argsstring>
        <name>Set</name>
        <qualifiedname>KolibriLib::UI::text::Char::Set</qualifiedname>
        <param>
          <type>const char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1_1_font" kindref="compound">Fonts::Font</ref> &amp;</type>
          <declname>font</declname>
          <defval><ref refid="namespace_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1abab58341d8cf9048d474cf45a2e00723" kindref="member">Fonts::DefaultFont</ref></defval>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>TextColor</declname>
          <defval>OS::sys_color_table.work_text</defval>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>BackgroundColor</declname>
          <defval>OS::sys_color_table.work_area</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Размер символа </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Флаги из списка <ref refid="namespace_kolibri_lib_1_1_u_i_1_1text_1a12e352aac49dd1e92e7f11605add7df5" kindref="member">TextColor  BackgroundColor </ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="233" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1ad55360e5bb0506c9a47de9ecc9d25e56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::text::Char::Set</definition>
        <argsstring>(const Images::Image &amp;img, const Fonts::Font &amp;size=Fonts::DefaultFont)</argsstring>
        <name>Set</name>
        <qualifiedname>KolibriLib::UI::text::Char::Set</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image" kindref="compound">Images::Image</ref> &amp;</type>
          <declname>img</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1_1_font" kindref="compound">Fonts::Font</ref> &amp;</type>
          <declname>size</declname>
          <defval><ref refid="namespace_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1abab58341d8cf9048d474cf45a2e00723" kindref="member">Fonts::DefaultFont</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>img</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="237" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1ac743c5288a82d3195a5382249c392a15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::text::Char::SetFlags</definition>
        <argsstring>(unsigned flags)</argsstring>
        <name>SetFlags</name>
        <qualifiedname>KolibriLib::UI::text::Char::SetFlags</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Изменить флаги </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para><linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="241" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a770620d0825f952bccc42c46362e3671" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::text::Char::SetTextColor</definition>
        <argsstring>(const Colors::Color &amp;NewColor)</argsstring>
        <name>SetTextColor</name>
        <qualifiedname>KolibriLib::UI::text::Char::SetTextColor</qualifiedname>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>NewColor</declname>
        </param>
        <briefdescription>
<para>Изменить цвет текста </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewColor</parametername>
</parameternamelist>
<parameterdescription>
<para><linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="245" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a9528b9d25c3e102cb6979e0667b40883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::text::Char::SetBackgroundColor</definition>
        <argsstring>(const Colors::Color &amp;NewColor)</argsstring>
        <name>SetBackgroundColor</name>
        <qualifiedname>KolibriLib::UI::text::Char::SetBackgroundColor</qualifiedname>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>NewColor</declname>
        </param>
        <briefdescription>
<para>Изменить цвет фона текста </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NewColor</parametername>
</parameternamelist>
<parameterdescription>
<para><linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="249" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a0ff41be7d15e6bf10e372fc61a435ca2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::text::Char::SetFont</definition>
        <argsstring>(const Fonts::Font &amp;size) const</argsstring>
        <name>SetFont</name>
        <qualifiedname>KolibriLib::UI::text::Char::SetFont</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1_1_font" kindref="compound">Fonts::Font</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Измерить размеры символа </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para><linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="253" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a3d266c7b420b1000b1e7207519b2bcb3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char KolibriLib::UI::text::Char::GetChar</definition>
        <argsstring>() const</argsstring>
        <name>GetChar</name>
        <qualifiedname>KolibriLib::UI::text::Char::GetChar</qualifiedname>
        <briefdescription>
<para>Получить ASCII символ </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="257" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a9c9f6445dfcb26ebf296cb9d512714c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1img" kindref="compound">Images::img</ref> &amp;</type>
        <definition>const Images::img &amp; KolibriLib::UI::text::Char::GetImg</definition>
        <argsstring>() const</argsstring>
        <name>GetImg</name>
        <qualifiedname>KolibriLib::UI::text::Char::GetImg</qualifiedname>
        <briefdescription>
<para>Получить <ref refid="" kindref="compound">_img.</ref></para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="261" column="35"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a6044f2f7c6b34e70d013e624a74ec8e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="struct_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1_1_font" kindref="compound">Fonts::Font</ref> &amp;</type>
        <definition>const Fonts::Font &amp; KolibriLib::UI::text::Char::GetFont</definition>
        <argsstring>() const</argsstring>
        <name>GetFont</name>
        <qualifiedname>KolibriLib::UI::text::Char::GetFont</qualifiedname>
        <briefdescription>
<para>получить размеры символа </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="265" column="35"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a7d4fa44f1b27b4a97811d8213e089362" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned KolibriLib::UI::text::Char::GetFlags</definition>
        <argsstring>() const</argsstring>
        <name>GetFlags</name>
        <qualifiedname>KolibriLib::UI::text::Char::GetFlags</qualifiedname>
        <briefdescription>
<para>Получить флаги </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="269" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a7c9cbafb0d22201dcdd88d78b22c9ea0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::text::Char::Print</definition>
        <argsstring>(const UI::Coord &amp;coord) const</argsstring>
        <name>Print</name>
        <qualifiedname>KolibriLib::UI::text::Char::Print</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Отрисовать </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Координаты </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="273" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1aa0ad9f68afe978662e23d7215faec6b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char" kindref="compound">Char</ref> &amp;</type>
        <definition>Char &amp; KolibriLib::UI::text::Char::operator=</definition>
        <argsstring>(char c)</argsstring>
        <name>operator=</name>
        <qualifiedname>KolibriLib::UI::text::Char::operator=</qualifiedname>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="275" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1af0cdfb5702c6c16be15891a2b3c5b61e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char" kindref="compound">Char</ref> &amp;</type>
        <definition>Char &amp; KolibriLib::UI::text::Char::operator=</definition>
        <argsstring>(const Images::img &amp;img)</argsstring>
        <name>operator=</name>
        <qualifiedname>KolibriLib::UI::text::Char::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1img" kindref="compound">Images::img</ref> &amp;</type>
          <declname>img</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="276" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1aa19faaf661f86609b83308ae1145ebf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char" kindref="compound">Char</ref> &amp;</type>
        <definition>Char &amp; KolibriLib::UI::text::Char::operator=</definition>
        <argsstring>(const Char &amp;c)</argsstring>
        <name>operator=</name>
        <qualifiedname>KolibriLib::UI::text::Char::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char" kindref="compound">Char</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="277" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1aa35833c1d1d3f7d0fea7329535c02200" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KolibriLib::UI::text::Char::operator==</definition>
        <argsstring>(char c) const</argsstring>
        <name>operator==</name>
        <qualifiedname>KolibriLib::UI::text::Char::operator==</qualifiedname>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="279" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1abdfec8a3abb4ef64938e245564eaea53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KolibriLib::UI::text::Char::operator==</definition>
        <argsstring>(const Images::img &amp;img) const</argsstring>
        <name>operator==</name>
        <qualifiedname>KolibriLib::UI::text::Char::operator==</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1img" kindref="compound">Images::img</ref> &amp;</type>
          <declname>img</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="280" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1ab23e250ea7d6be8c7c56a88be8cc2a59" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KolibriLib::UI::text::Char::operator==</definition>
        <argsstring>(const Char &amp;img) const</argsstring>
        <name>operator==</name>
        <qualifiedname>KolibriLib::UI::text::Char::operator==</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char" kindref="compound">Char</ref> &amp;</type>
          <declname>img</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="281" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a4b58255325d6cf29c0bd1a8d3f9a6efb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KolibriLib::UI::text::Char::operator!=</definition>
        <argsstring>(char c) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>KolibriLib::UI::text::Char::operator!=</qualifiedname>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="282" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a1a4ceb5382ecb91c556f52a49f408fee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KolibriLib::UI::text::Char::operator!=</definition>
        <argsstring>(const Images::img &amp;img) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>KolibriLib::UI::text::Char::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1img" kindref="compound">Images::img</ref> &amp;</type>
          <declname>img</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="283" column="22"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1af4d2cf8e4b4991373dc61c19e41d89d9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::text::Char::Free</definition>
        <argsstring>()</argsstring>
        <name>Free</name>
        <qualifiedname>KolibriLib::UI::text::Char::Free</qualifiedname>
        <briefdescription>
<para>Освободить все переменные </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="293" column="22"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Символ </para>
    </briefdescription>
    <detaileddescription>
<sect4 id="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1Символ">
<title>который может содержать как текст, так и картинку(например смайлик)</title></sect4>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>KolibriLib::UI::Images::img</label>
        <link refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1img"/>
      </node>
      <node id="1">
        <label>KolibriLib::UI::text::Char</label>
        <link refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char"/>
        <childnode refid="2" relation="usage">
          <edgelabel>_img</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="198" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" bodystart="199" bodyend="305"/>
    <listofallmembers>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a90514181d2f96ecf685087dda3276386" prot="private" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>_BackgroundColor</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a37b7fe5eeac3a5e2c19bb27c9ebf36c6" prot="protected" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>_c</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a55521b4847e407f3bef281ef726339cb" prot="private" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>_font</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a4eb4207910135d0f1e86f79f9c87dfe8" prot="protected" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>_img</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1ad1f415095dba00d3c336d37291777994" prot="private" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>_TextColor</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a147f04639e1b666ec9c7425dec49b6f7" prot="private" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>_type</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a1b7d6d5d73d6661e87db922d1fd18cff" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>Char</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1abc7672ace64c0020b3b814b1861a7d04" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>Char</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1af4d2cf8e4b4991373dc61c19e41d89d9" prot="private" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>Free</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a3d266c7b420b1000b1e7207519b2bcb3" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>GetChar</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a7d4fa44f1b27b4a97811d8213e089362" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>GetFlags</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a6044f2f7c6b34e70d013e624a74ec8e3" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>GetFont</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a9c9f6445dfcb26ebf296cb9d512714c2" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>GetImg</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1ab58ef855da83e63793e8f1e20e0fbc90" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>GetType</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1abe408b9a3246eb289318bb1e0eec3257a40cb1175308bbc8eaf15bdba13ef6551" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>Image</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1abe408b9a3246eb289318bb1e0eec3257a2b75aae4f1b56ee1a2515c7849266684" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>None</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a4b58255325d6cf29c0bd1a8d3f9a6efb" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>operator!=</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a1a4ceb5382ecb91c556f52a49f408fee" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>operator!=</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1aa0ad9f68afe978662e23d7215faec6b9" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>operator=</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1af0cdfb5702c6c16be15891a2b3c5b61e" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>operator=</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1aa19faaf661f86609b83308ae1145ebf8" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>operator=</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1aa35833c1d1d3f7d0fea7329535c02200" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>operator==</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1abdfec8a3abb4ef64938e245564eaea53" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>operator==</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1ab23e250ea7d6be8c7c56a88be8cc2a59" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>operator==</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a7c9cbafb0d22201dcdd88d78b22c9ea0" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>Print</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a4b67c87fde0d21a2270c01cb24b1e3a7" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>Set</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1ad55360e5bb0506c9a47de9ecc9d25e56" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>Set</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a9528b9d25c3e102cb6979e0667b40883" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>SetBackgroundColor</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1ac743c5288a82d3195a5382249c392a15" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>SetFlags</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a0ff41be7d15e6bf10e372fc61a435ca2" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>SetFont</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1a770620d0825f952bccc42c46362e3671" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>SetTextColor</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1abe408b9a3246eb289318bb1e0eec3257a9a12d4b110d223434e6113d89d1ca2e3" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>Text</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1abe408b9a3246eb289318bb1e0eec3257" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>Type</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char_1acd2b417f8107d5e7f7615c4ac009eb82" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Char</scope><name>~Char</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
