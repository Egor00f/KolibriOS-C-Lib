<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="ru">
  <compounddef id="kolibri__libimg_8h" kind="file" language="C++">
    <compoundname>kolibri_libimg.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includedby refid="img_8hpp" local="no">C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/img.hpp</includedby>
    <includedby refid="init_8hpp" local="no">C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/init.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h</label>
        <link refid="kolibri__libimg_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="5">
        <label>stdio.h</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h</label>
        <link refid="kolibri__libimg_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/KolibriLib.hpp</label>
        <link refid="_kolibri_lib_8hpp_source"/>
      </node>
      <node id="4">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/UI.hpp</label>
        <link refid="_u_i_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/UI/button.hpp</label>
        <link refid="button_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/UI/checkbox.hpp</label>
        <link refid="checkbox_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/UI/form.hpp</label>
        <link refid="form_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/UI/frame.hpp</label>
        <link refid="frame_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/UI/image.hpp</label>
        <link refid="image_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/UI/menu.hpp</label>
        <link refid="menu_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp</label>
        <link refid="text_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/UI/textBase.hpp</label>
        <link refid="text_base_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/childWindow.hpp</label>
        <link refid="child_window_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp</label>
        <link refid="background_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/img.hpp</label>
        <link refid="img_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/init.hpp</label>
        <link refid="init_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp</label>
        <link refid="window_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_image__t" prot="public">Image_t</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="kolibri__libimg_8h_1a3107b1d0ca10d4ae4575d9107d4cbffe" prot="public" static="no">
        <name>_stdcall</name>
        <initializer>__attribute__((__stdcall__))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="17" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" bodystart="17" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="kolibri__libimg_8h_1ae932abe1baf2fc58d0433104a97afa46" prot="public" static="no" strong="no">
        <type></type>
        <name>BPP</name>
        <enumvalue id="kolibri__libimg_8h_1ae932abe1baf2fc58d0433104a97afa46abfde050d0f623912f4104bb9b9bd031c" prot="public">
          <name>IMAGE_BPP8i</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>indexed </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1ae932abe1baf2fc58d0433104a97afa46a5a7cc115f5c798015bb49e582b4a1aa4" prot="public">
          <name>IMAGE_BPP24</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>&quot;True color&quot; 24bit </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1ae932abe1baf2fc58d0433104a97afa46afc1f7da9bb85078e43dad49072b4effe" prot="public">
          <name>IMAGE_BPP32</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>32bit </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1ae932abe1baf2fc58d0433104a97afa46ae664ce6a4b7f05e8506e0e921ee3ade5" prot="public">
          <name>IMAGE_BPP15</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1ae932abe1baf2fc58d0433104a97afa46a255d9625d4f4167fd23003c22b752b72" prot="public">
          <name>IMAGE_BPP16</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>16bit </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1ae932abe1baf2fc58d0433104a97afa46a2491ff267248b2a7eebfeffcbcd0d617" prot="public">
          <name>IMAGE_BPP1</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1ae932abe1baf2fc58d0433104a97afa46a1c1897b0acdf20ebe4a1b1a6480e3761" prot="public">
          <name>IMAGE_BPP8g</name>
          <initializer>= 7</initializer>
          <briefdescription>
<para>grayscale </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1ae932abe1baf2fc58d0433104a97afa46a4fe09d4a387979c9de5c2da61d9c8311" prot="public">
          <name>IMAGE_BPP2i</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1ae932abe1baf2fc58d0433104a97afa46adc0155a14e4f44cf7a8a238a88999b6c" prot="public">
          <name>IMAGE_BPP4i</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1ae932abe1baf2fc58d0433104a97afa46ab48d3c4bf928e17b49b02452552f0ffc" prot="public">
          <name>IMAGE_BPP8a</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>List of bppN. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="59" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" bodystart="60" bodyend="76"/>
      </memberdef>
      <memberdef kind="enum" id="kolibri__libimg_8h_1a20f606f0ef9377a0de98c641cc7375d4" prot="public" static="no" strong="no">
        <type></type>
        <name>Formats</name>
        <enumvalue id="kolibri__libimg_8h_1a20f606f0ef9377a0de98c641cc7375d4aaeea81c6731815dfea013dc23b17cf69" prot="public">
          <name>LIBIMG_FORMAT_BMP</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>bmp format </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a20f606f0ef9377a0de98c641cc7375d4af5c5549c847eb837c62b96c118ebd22b" prot="public">
          <name>LIBIMG_FORMAT_ICO</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>ico format </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a20f606f0ef9377a0de98c641cc7375d4a2aeb4df9f20ea9983bd48753420dd2e7" prot="public">
          <name>LIBIMG_FORMAT_CUR</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>cur format </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a20f606f0ef9377a0de98c641cc7375d4a0ca775641df7e4e08b472b03f7b39be1" prot="public">
          <name>LIBIMG_FORMAT_GIF</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>gif format </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a20f606f0ef9377a0de98c641cc7375d4a769a08b6b77196581ca75ab165ce67ef" prot="public">
          <name>LIBIMG_FORMAT_PNG</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>png format </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a20f606f0ef9377a0de98c641cc7375d4a30bec63b25899b8c4df45277a936282d" prot="public">
          <name>LIBIMG_FORMAT_JPEG</name>
          <initializer>= 6</initializer>
          <briefdescription>
<para>jpeg format </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a20f606f0ef9377a0de98c641cc7375d4a9677e0a08dc65133745e34badcb53a36" prot="public">
          <name>LIBIMG_FORMAT_TGA</name>
          <initializer>= 7</initializer>
          <briefdescription>
<para>tga format </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a20f606f0ef9377a0de98c641cc7375d4a87dd2b39162649135a30ccb964c728d5" prot="public">
          <name>LIBIMG_FORMAT_PCX</name>
          <initializer>= 8</initializer>
          <briefdescription>
<para>pcx format </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a20f606f0ef9377a0de98c641cc7375d4a16315d2cb26f6113b876c522accdbe92" prot="public">
          <name>LIBIMG_FORMAT_XCF</name>
          <initializer>= 9</initializer>
          <briefdescription>
<para>xcf format </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a20f606f0ef9377a0de98c641cc7375d4ab5989a7a3967b41e97ebb18dd708356e" prot="public">
          <name>LIBIMG_FORMAT_TIFF</name>
          <initializer>= 10</initializer>
          <briefdescription>
<para>tiff format </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a20f606f0ef9377a0de98c641cc7375d4a0a8fb8f1b2ce08d4aa605f93d6445faf" prot="public">
          <name>LIBIMG_FORMAT_PNM</name>
          <initializer>= 11</initializer>
          <briefdescription>
<para>Portable anymap format. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a20f606f0ef9377a0de98c641cc7375d4a0c146677fc4d31505d10d30386d9876c" prot="public">
          <name>LIBIMG_FORMAT_WBMP</name>
          <initializer>= 12</initializer>
          <briefdescription>
<para>Wireless Application Protocol Bitmap format. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a20f606f0ef9377a0de98c641cc7375d4a057d50c7bc8feee0a37d5afd3766315f" prot="public">
          <name>LIBIMG_FORMAT_XBM</name>
          <initializer>= 13</initializer>
          <briefdescription>
<para>X BitMap format. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a20f606f0ef9377a0de98c641cc7375d4adb6557b6bc2960b1fe2e6522d6017104" prot="public">
          <name>LIBIMG_FORMAT_Z80</name>
          <initializer>= 14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>List of format id&apos;s. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="79" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" bodystart="80" bodyend="109"/>
      </memberdef>
      <memberdef kind="enum" id="kolibri__libimg_8h_1a8e8d3da3ac3510ba6f5aa1a4c8c82eae" prot="public" static="no" strong="no">
        <type></type>
        <name>Scale</name>
        <enumvalue id="kolibri__libimg_8h_1a8e8d3da3ac3510ba6f5aa1a4c8c82eaea7ba64db7075c4295ed00c79a86f37951" prot="public">
          <name>LIBIMG_SCALE_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a8e8d3da3ac3510ba6f5aa1a4c8c82eaea32e4903d84eb4e5dd67a916b570c1ad9" prot="public">
          <name>LIBIMG_SCALE_INTEGER</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a8e8d3da3ac3510ba6f5aa1a4c8c82eaeab3cb62121258ac4478d1dd9b0caf7f64" prot="public">
          <name>LIBIMG_SCALE_TILE</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a8e8d3da3ac3510ba6f5aa1a4c8c82eaea7ae43e08fdacda6ab9a9efafa37f92d4" prot="public">
          <name>LIBIMG_SCALE_STRETCH</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a8e8d3da3ac3510ba6f5aa1a4c8c82eaea2597c852a6e41d4fee75f0736d9ac39e" prot="public">
          <name>LIBIMG_SCALE_FIT_BOTH</name>
          <initializer>= LIBIMG_SCALE_STRETCH</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a8e8d3da3ac3510ba6f5aa1a4c8c82eaea4993cf86d87d4debf481bed042f76716" prot="public">
          <name>LIBIMG_SCALE_FIT_MIN</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a8e8d3da3ac3510ba6f5aa1a4c8c82eaea59585404a7a4a0c4e565d4f2681362d2" prot="public">
          <name>LIBIMG_SCALE_FIT_RECT</name>
          <initializer>= LIBIMG_SCALE_FIT_MIN</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a8e8d3da3ac3510ba6f5aa1a4c8c82eaeae7f4c372de9c4c22423e1bec7d72285f" prot="public">
          <name>LIBIMG_SCALE_FIT_WIDTH</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a8e8d3da3ac3510ba6f5aa1a4c8c82eaeab616ffbfe7f488f41518a31894456e12" prot="public">
          <name>LIBIMG_SCALE_FIT_HEIGHT</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a8e8d3da3ac3510ba6f5aa1a4c8c82eaeae2fe5bb8736226aee456547ca0c310db" prot="public">
          <name>LIBIMG_SCALE_FIT_MAX</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>List of scale type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="112" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" bodystart="113" bodyend="124"/>
      </memberdef>
      <memberdef kind="enum" id="kolibri__libimg_8h_1a100905ea9409684ebb4c0fd0422ab79b" prot="public" static="no" strong="no">
        <type></type>
        <name>Inter</name>
        <enumvalue id="kolibri__libimg_8h_1a100905ea9409684ebb4c0fd0422ab79ba2d6d0d4cd1081ce37cef0fc3ec129efc" prot="public">
          <name>LIBIMG_INTER_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para><simplesect kind="note"><para>use it with LIBIMG_SCALE_INTEGER, LIBIMG_SCALE_TILE, etc </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a100905ea9409684ebb4c0fd0422ab79bae12cfeb29047350fa07610f232743b3f" prot="public">
          <name>LIBIMG_INTER_BILINEAR</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Bilinear algorithm. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a100905ea9409684ebb4c0fd0422ab79bab5145291915a25f01332692aa50f9723" prot="public">
          <name>LIBIMG_INTER_BICUBIC</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Bicubic algorithm. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a100905ea9409684ebb4c0fd0422ab79ba4a774dcbad2ea0745688d51b74ad5876" prot="public">
          <name>LIBIMG_INTER_LANCZOS</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Lanczos algorithm. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a100905ea9409684ebb4c0fd0422ab79ba11d07fcb870c435216b393ca7f94596b" prot="public">
          <name>LIBIMG_INTER_DEFAULT</name>
          <initializer>= LIBIMG_INTER_BILINEAR</initializer>
          <briefdescription>
<para>Default algorithm. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>List of interpolation algorithms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="127" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" bodystart="128" bodyend="139"/>
      </memberdef>
      <memberdef kind="enum" id="kolibri__libimg_8h_1a8fb872c72e116bbd3eba31f48d78e76b" prot="public" static="no" strong="no">
        <type></type>
        <name>Errors</name>
        <enumvalue id="kolibri__libimg_8h_1a8fb872c72e116bbd3eba31f48d78e76baa56da0eb1c541574e37524446f112184" prot="public">
          <name>LIBIMG_ERROR_OUT_OF_MEMORY</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a8fb872c72e116bbd3eba31f48d78e76ba0408c1d376cba129d290abb3124d9a70" prot="public">
          <name>LIBIMG_ERROR_FORMAT</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a8fb872c72e116bbd3eba31f48d78e76ba2e6db7bcaaa5a0fc2448027974ee07f5" prot="public">
          <name>LIBIMG_ERROR_CONDITIONS</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a8fb872c72e116bbd3eba31f48d78e76ba42c7184ee0ba286d636ecc4c6741e2ac" prot="public">
          <name>LIBIMG_ERROR_BIT_DEPTH</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a8fb872c72e116bbd3eba31f48d78e76ba633b2b2143a39bcd441bbc8a2de467b7" prot="public">
          <name>LIBIMG_ERROR_ENCODER</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a8fb872c72e116bbd3eba31f48d78e76baa766236df43e4200437f41f6cd81e0b8" prot="public">
          <name>LIBIMG_ERROR_SRC_TYPE</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a8fb872c72e116bbd3eba31f48d78e76ba0ddffaaabcd8b3ec5e2d56033732a3d1" prot="public">
          <name>LIBIMG_ERROR_SCALE</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a8fb872c72e116bbd3eba31f48d78e76ba1362a0c53c194c8ecd39fb8e70a3fdcd" prot="public">
          <name>LIBIMG_ERROR_INTER</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a8fb872c72e116bbd3eba31f48d78e76ba11751a5af418288b5c9e47327cb95939" prot="public">
          <name>LIBIMG_ERROR_NOT_INPLEMENTED</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a8fb872c72e116bbd3eba31f48d78e76ba005cb5a8f0dc06589b77ae35f5a314f0" prot="public">
          <name>LIBIMG_ERROR_INVALID_INPUT</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>error codes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="142" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" bodystart="143" bodyend="154"/>
      </memberdef>
      <memberdef kind="enum" id="kolibri__libimg_8h_1a21c09c92fac30e859a06c55cba5a1801" prot="public" static="no" strong="no">
        <type></type>
        <name>Encode</name>
        <enumvalue id="kolibri__libimg_8h_1a21c09c92fac30e859a06c55cba5a1801ae3e337f17ff474ea0d2f750f309ba53a" prot="public">
          <name>LIBIMG_ENCODE_STRICT_SPECIFIC</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a21c09c92fac30e859a06c55cba5a1801a96d67a8c79972804e17c2fb402c7c902" prot="public">
          <name>LIBIMG_ENCODE_STRICT_BIT_DEPTH</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a21c09c92fac30e859a06c55cba5a1801af23e9ed06e914312332e8c0d86e558a3" prot="public">
          <name>LIBIMG_ENCODE_DELETE_ALPHA</name>
          <initializer>= 0x08</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1a21c09c92fac30e859a06c55cba5a1801a8af035969c74c3f3422c921a18ae6b39" prot="public">
          <name>LIBIMG_ENCODE_FLUSH_ALPHA</name>
          <initializer>= 0x10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>encode flags (byte 0x02 of _common option) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="157" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" bodystart="158" bodyend="163"/>
      </memberdef>
      <memberdef kind="enum" id="kolibri__libimg_8h_1aeec074415633aaca7db1ea5b150cd2fa" prot="public" static="no" strong="no">
        <type></type>
        <name>Flip</name>
        <enumvalue id="kolibri__libimg_8h_1aeec074415633aaca7db1ea5b150cd2faab9463eeeb8c3a955fd8e453082e9e3c4" prot="public">
          <name>FLIP_VERTICAL</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1aeec074415633aaca7db1ea5b150cd2faa608fab443d799216e7b3ea896d8cea76" prot="public">
          <name>FLIP_HORIZONTAL</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="165" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="enum" id="kolibri__libimg_8h_1aabe6019d3de9522cbe8bdcbe111bd11f" prot="public" static="no" strong="no">
        <type></type>
        <name>Rotate</name>
        <enumvalue id="kolibri__libimg_8h_1aabe6019d3de9522cbe8bdcbe111bd11fa784258fef84e19cb22449963d5086cb3" prot="public">
          <name>ROTATE_90_CW</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1aabe6019d3de9522cbe8bdcbe111bd11fa186263164422bb8f0eb5f7b7d195a3d1" prot="public">
          <name>ROTATE_180</name>
          <initializer>= 0x03</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1aabe6019d3de9522cbe8bdcbe111bd11fa50ad5d3572df812fdbf82db67a96c769" prot="public">
          <name>ROTATE_270_CW</name>
          <initializer>= 0x03</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1aabe6019d3de9522cbe8bdcbe111bd11fa8798f4467d63dc90750fc0bc948777ea" prot="public">
          <name>ROTATE_90_CCW</name>
          <initializer>= ROTATE_270_CW</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__libimg_8h_1aabe6019d3de9522cbe8bdcbe111bd11fad06908a79729bd1b5c8572a0c7a22fcb" prot="public">
          <name>ROTATE_270_CCW</name>
          <initializer>= ROTATE_90_CW</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="171" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" bodystart="172" bodyend="179"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="kolibri__libimg_8h_1a4767d60a72b67bcf273d376ecf97589b" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="struct_image__t" kindref="compound">Image_t</ref> *(*</type>
        <definition>Image_t *(* img_decode) (void *file_data, uint32_t size, uint32_t b_color) _stdcall</definition>
        <argsstring>)(void *file_data, uint32_t size, uint32_t b_color) _stdcall</argsstring>
        <name>img_decode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="181" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" declline="181" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__libimg_8h_1a7e500703b6b7e2127f71b84000d038aa" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="struct_image__t" kindref="compound">Image_t</ref> *(*</type>
        <definition>Image_t *(* img_encode) (Image_t *img, uint32_t length, uint32_t option) _stdcall</definition>
        <argsstring>)(Image_t *img, uint32_t length, uint32_t option) _stdcall</argsstring>
        <name>img_encode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="182" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" declline="182" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__libimg_8h_1a9f3d09c580504f0944412a46904c8007" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="struct_image__t" kindref="compound">Image_t</ref> *(*</type>
        <definition>Image_t *(* img_create) (uint32_t width, uint32_t height, uint32_t type) _stdcall</definition>
        <argsstring>)(uint32_t width, uint32_t height, uint32_t type) _stdcall</argsstring>
        <name>img_create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="183" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" declline="183" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__libimg_8h_1a4a79e024160b6d0af414a3a1a6a85717" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* img_to_rgb2) (Image_t *img, void *rgb_data) _stdcall</definition>
        <argsstring>)(Image_t *img, void *rgb_data) _stdcall</argsstring>
        <name>img_to_rgb2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="184" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" declline="184" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__libimg_8h_1a27ea1d4bcc21684cced9f1a22ae8c7f4" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="struct_image__t" kindref="compound">Image_t</ref> *(*</type>
        <definition>Image_t *(* img_to_rgb) (Image_t *img) _stdcall</definition>
        <argsstring>)(Image_t *img) _stdcall</argsstring>
        <name>img_to_rgb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="185" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" declline="185" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__libimg_8h_1a5923c039c7d9dce42445257cb50f017c" prot="public" static="no" extern="yes" mutable="no">
        <type>bool(*</type>
        <definition>bool(* img_flip) (Image_t *img, uint32_t flip) _stdcall</definition>
        <argsstring>)(Image_t *img, uint32_t flip) _stdcall</argsstring>
        <name>img_flip</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="186" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" declline="186" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__libimg_8h_1aa3830a87993fc651fbc736a2c96725ef" prot="public" static="no" extern="yes" mutable="no">
        <type>bool(*</type>
        <definition>bool(* img_flip_layer) (Image_t *img, uint32_t flip) _stdcall</definition>
        <argsstring>)(Image_t *img, uint32_t flip) _stdcall</argsstring>
        <name>img_flip_layer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="187" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" declline="187" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__libimg_8h_1a142fa68a03f6e18f90f2fdc226e8f0ed" prot="public" static="no" extern="yes" mutable="no">
        <type>bool(*</type>
        <definition>bool(* img_rotate) (Image_t *img, uint32_t rotate) _stdcall</definition>
        <argsstring>)(Image_t *img, uint32_t rotate) _stdcall</argsstring>
        <name>img_rotate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="188" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" declline="188" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__libimg_8h_1aa0b1adf825e7549d34fe0d29fb356789" prot="public" static="no" extern="yes" mutable="no">
        <type>bool(*</type>
        <definition>bool(* img_rotate_layer) (Image_t *data, uint32_t rotate) _stdcall</definition>
        <argsstring>)(Image_t *data, uint32_t rotate) _stdcall</argsstring>
        <name>img_rotate_layer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="189" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" declline="189" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__libimg_8h_1ad5057231659f7f8172d923c5659ff1e0" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* img_draw) (Image_t *img, uint32_t x, uint32_t y, uint32_t w, uint32_t h, uint32_t xoff, uint32_t yoff) _stdcall</definition>
        <argsstring>)(Image_t *img, uint32_t x, uint32_t y, uint32_t w, uint32_t h, uint32_t xoff, uint32_t yoff) _stdcall</argsstring>
        <name>img_draw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="190" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" declline="190" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__libimg_8h_1a9ce68507206856086da1950f6a148ff1" prot="public" static="no" extern="yes" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t(* img_count) (Image_t *img) _stdcall</definition>
        <argsstring>)(Image_t *img) _stdcall</argsstring>
        <name>img_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="191" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" declline="191" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__libimg_8h_1a7a18f98484f1c970c5517525ad1c56c4" prot="public" static="no" extern="yes" mutable="no">
        <type>bool(*</type>
        <definition>bool(* img_destroy) (Image_t *img) _stdcall</definition>
        <argsstring>)(Image_t *img) _stdcall</argsstring>
        <name>img_destroy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="192" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" declline="192" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__libimg_8h_1a1005c254024e8e95121b08b19c72bb66" prot="public" static="no" extern="yes" mutable="no">
        <type>bool(*</type>
        <definition>bool(* img_destroy_layer) (Image_t *img) _stdcall</definition>
        <argsstring>)(Image_t *img) _stdcall</argsstring>
        <name>img_destroy_layer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="193" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" declline="193" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__libimg_8h_1ae1adb38ac33a26c86660453e4547e64a" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="struct_image__t" kindref="compound">Image_t</ref> *(*</type>
        <definition>Image_t *(* img_blend) (Image_t *dst, Image_t *src, uint32_t out_x, uint32_t out_y, uint32_t in_x, uint32_t in_y, uint32_t width, uint32_t height) _stdcall</definition>
        <argsstring>)(Image_t *dst, Image_t *src, uint32_t out_x, uint32_t out_y, uint32_t in_x, uint32_t in_y, uint32_t width, uint32_t height) _stdcall</argsstring>
        <name>img_blend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="194" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" declline="194" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__libimg_8h_1a55a79b098eaf3e0ec94118f856eba19d" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="struct_image__t" kindref="compound">Image_t</ref> *(*</type>
        <definition>Image_t *(* img_convert) (Image_t *src, Image_t *dst, uint32_t dst_type, uint32_t, uint32_t) _stdcall</definition>
        <argsstring>)(Image_t *src, Image_t *dst, uint32_t dst_type, uint32_t, uint32_t) _stdcall</argsstring>
        <name>img_convert</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="195" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" declline="195" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__libimg_8h_1a6fe818bdfec2a1017403bef87e1b9ddd" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="struct_image__t" kindref="compound">Image_t</ref> *(*</type>
        <definition>Image_t *(* img_resize_data) (Image_t *src, uint32_t width, uint32_t height) _stdcall</definition>
        <argsstring>)(Image_t *src, uint32_t width, uint32_t height) _stdcall</argsstring>
        <name>img_resize_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="196" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" declline="196" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__libimg_8h_1a8419ce517d0f031bb83e3e0929157857" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="struct_image__t" kindref="compound">Image_t</ref> *(*</type>
        <definition>Image_t *(* img_scale) (Image_t *src, uint32_t crop_x, uint32_t crop_y, uint32_t crop_width, uint32_t crop_height, Image_t *dst, uint32_t scale_type, uint32_t inter, uint32_t new_width, uint32_t new_height) _stdcall</definition>
        <argsstring>)(Image_t *src, uint32_t crop_x, uint32_t crop_y, uint32_t crop_width, uint32_t crop_height, Image_t *dst, uint32_t scale_type, uint32_t inter, uint32_t new_width, uint32_t new_height) _stdcall</argsstring>
        <name>img_scale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="197" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" declline="197" declcolumn="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="kolibri__libimg_8h_1a48d1fa50e5dd5ae820b4a05b4a59b939" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int kolibri_libimg_init</definition>
        <argsstring>(void)</argsstring>
        <name>kolibri_libimg_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="15" column="12" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" declline="15" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__libimg_8h_1a206a3632a0b5571df4978cdd42636c7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void img_fill_color</definition>
        <argsstring>(Image_t *img, uint32_t width, uint32_t height, uint32_t color)</argsstring>
        <name>img_fill_color</name>
        <param>
          <type><ref refid="struct_image__t" kindref="compound">Image_t</ref> *</type>
          <declname>img</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="267" column="13" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" bodystart="267" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__libimg_8h_1a5dbc983fcb1c3fb2a018d6d639c28ae4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void img_fill_color</definition>
        <argsstring>(Image_t *img, uint32_t color)</argsstring>
        <name>img_fill_color</name>
        <param>
          <type><ref refid="struct_image__t" kindref="compound">Image_t</ref> *</type>
          <declname>img</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para>Fill the image with color. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>img</parametername>
</parameternamelist>
<parameterdescription>
<para>image </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Сolor </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" line="277" column="13" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h" bodystart="277" bodyend="283"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Written<sp/>by<sp/>turbocat2001<sp/>(Logaev<sp/>Maxim)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>KOLIBRI_LIBIMG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KOLIBRI_LIBIMG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kolibri_libimg_init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_stdcall<sp/>__attribute__((__stdcall__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)</highlight></codeline>
<codeline lineno="22" refid="struct_image__t" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26" refid="struct_image__t_1ab6ccd0a0070bcf1df847d66d7e1745e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_image__t_1ab6ccd0a0070bcf1df847d66d7e1745e8" kindref="member">Checksum</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="struct_image__t_1a7f65cc0a1bf3b4f78aec1f3bf2ea9707" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_image__t_1a7f65cc0a1bf3b4f78aec1f3bf2ea9707" kindref="member">Width</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="struct_image__t_1a724c6884766f30652ad3d5e8ce2cd524" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_image__t_1a724c6884766f30652ad3d5e8ce2cd524" kindref="member">Height</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>Next;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>Previous;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="struct_image__t_1a57f990e156530b7b0229add1a6feb7d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_image__t_1a57f990e156530b7b0229add1a6feb7d5" kindref="member">Type</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="struct_image__t_1a925d0700ce7381dcd4a5f1d07d79bf8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>*<ref refid="struct_image__t_1a925d0700ce7381dcd4a5f1d07d79bf8b" kindref="member">Data</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="struct_image__t_1a676b08001731600b122e88980dba76dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_image__t_1a676b08001731600b122e88980dba76dd" kindref="member">Palette</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>Extended;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="struct_image__t_1a7febbffbc146c6f9e3c83fae7a2cc87a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_image__t_1a7febbffbc146c6f9e3c83fae7a2cc87a" kindref="member">Flags</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="struct_image__t_1ab5d965e72d7aa50923145bc5d2f7e62b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_image__t_1ab5d965e72d7aa50923145bc5d2f7e62b" kindref="member">Delay</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_image__t" kindref="compound">Image_t</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>BPP</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>IMAGE_BPP8i<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>IMAGE_BPP24<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>IMAGE_BPP32<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>IMAGE_BPP15<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>IMAGE_BPP16<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>IMAGE_BPP1<sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>IMAGE_BPP8g<sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>IMAGE_BPP2i<sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>IMAGE_BPP4i<sp/>=<sp/>9,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>IMAGE_BPP8a<sp/>=<sp/>10</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>Formats</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_FORMAT_BMP<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_FORMAT_ICO<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_FORMAT_CUR<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_FORMAT_GIF<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_FORMAT_PNG<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_FORMAT_JPEG<sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_FORMAT_TGA<sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_FORMAT_PCX<sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_FORMAT_XCF<sp/>=<sp/>9,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_FORMAT_TIFF<sp/>=<sp/>10,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_FORMAT_PNM<sp/>=<sp/>11,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_FORMAT_WBMP<sp/>=<sp/>12,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_FORMAT_XBM<sp/>=<sp/>13,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_FORMAT_Z80<sp/>=<sp/>14</highlight></codeline>
<codeline lineno="109"><highlight class="normal">};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>Scale</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_SCALE_NONE<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_SCALE_INTEGER<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_SCALE_TILE<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_SCALE_STRETCH<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_SCALE_FIT_BOTH<sp/>=<sp/>LIBIMG_SCALE_STRETCH,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_SCALE_FIT_MIN<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_SCALE_FIT_RECT<sp/>=<sp/>LIBIMG_SCALE_FIT_MIN,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_SCALE_FIT_WIDTH<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_SCALE_FIT_HEIGHT<sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_SCALE_FIT_MAX<sp/>=<sp/>7</highlight></codeline>
<codeline lineno="124"><highlight class="normal">};<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>Inter</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_INTER_NONE<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_INTER_BILINEAR<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_INTER_BICUBIC<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_INTER_LANCZOS<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_INTER_DEFAULT<sp/>=<sp/>LIBIMG_INTER_BILINEAR</highlight></codeline>
<codeline lineno="139"><highlight class="normal">};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>Errors</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_ERROR_OUT_OF_MEMORY<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_ERROR_FORMAT<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_ERROR_CONDITIONS<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_ERROR_BIT_DEPTH<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_ERROR_ENCODER<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_ERROR_SRC_TYPE<sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_ERROR_SCALE<sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_ERROR_INTER<sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_ERROR_NOT_INPLEMENTED<sp/>=<sp/>9,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_ERROR_INVALID_INPUT<sp/>=<sp/>10</highlight></codeline>
<codeline lineno="154"><highlight class="normal">};</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>Encode</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_ENCODE_STRICT_SPECIFIC<sp/>=<sp/>0x01,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_ENCODE_STRICT_BIT_DEPTH<sp/>=<sp/>0x02,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_ENCODE_DELETE_ALPHA<sp/>=<sp/>0x08,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>LIBIMG_ENCODE_FLUSH_ALPHA<sp/>=<sp/>0x10</highlight></codeline>
<codeline lineno="163"><highlight class="normal">};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>Flip</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>FLIP_VERTICAL<sp/>=<sp/>0x01,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>FLIP_HORIZONTAL<sp/>=<sp/>0x02</highlight></codeline>
<codeline lineno="169"><highlight class="normal">};</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>Rotate</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>ROTATE_90_CW<sp/>=<sp/>0x01,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>ROTATE_180<sp/>=<sp/>0x03,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>ROTATE_270_CW<sp/>=<sp/>0x03,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>ROTATE_90_CCW<sp/>=<sp/>ROTATE_270_CW,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>ROTATE_270_CCW<sp/>=<sp/>ROTATE_90_CW</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_image__t" kindref="compound">Image_t</ref>*<sp/><sp/><sp/>(*img_decode)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>file_data,<sp/>uint32_t<sp/>size,<sp/>uint32_t<sp/>b_color)<sp/>_stdcall;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_image__t" kindref="compound">Image_t</ref>*<sp/><sp/><sp/>(*img_encode)(<ref refid="struct_image__t" kindref="compound">Image_t</ref>*<sp/>img,<sp/>uint32_t<sp/>length,<sp/>uint32_t<sp/>option)<sp/>_stdcall;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_image__t" kindref="compound">Image_t</ref>*<sp/><sp/><sp/>(*img_create)(uint32_t<sp/>width,<sp/>uint32_t<sp/>height,<sp/>uint32_t<sp/>type)<sp/>_stdcall;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/><sp/><sp/><sp/><sp/>(*img_to_rgb2)(<ref refid="struct_image__t" kindref="compound">Image_t</ref>*<sp/>img,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*rgb_data)<sp/>_stdcall;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_image__t" kindref="compound">Image_t</ref>*<sp/><sp/><sp/>(*img_to_rgb)(<ref refid="struct_image__t" kindref="compound">Image_t</ref>*<sp/>img)<sp/>_stdcall;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>bool<sp/><sp/><sp/><sp/><sp/>(*img_flip)(<ref refid="struct_image__t" kindref="compound">Image_t</ref>*<sp/>img,<sp/>uint32_t<sp/>flip)<sp/>_stdcall;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>bool<sp/><sp/><sp/><sp/><sp/>(*img_flip_layer)(<ref refid="struct_image__t" kindref="compound">Image_t</ref><sp/>*img,<sp/>uint32_t<sp/>flip)<sp/>_stdcall;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>bool<sp/><sp/><sp/><sp/><sp/>(*img_rotate)(<ref refid="struct_image__t" kindref="compound">Image_t</ref><sp/>*img,<sp/>uint32_t<sp/>rotate)<sp/>_stdcall;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>bool<sp/><sp/><sp/><sp/><sp/>(*img_rotate_layer)(<ref refid="struct_image__t" kindref="compound">Image_t</ref>*<sp/>data,<sp/>uint32_t<sp/>rotate)<sp/>_stdcall;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/><sp/><sp/><sp/><sp/>(*img_draw)(<ref refid="struct_image__t" kindref="compound">Image_t</ref><sp/>*img,<sp/>uint32_t<sp/>x,<sp/>uint32_t<sp/>y,<sp/>uint32_t<sp/>w,<sp/>uint32_t<sp/>h,<sp/>uint32_t<sp/>xoff,<sp/><sp/>uint32_t<sp/>yoff)<sp/>_stdcall;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int32_t<sp/><sp/>(*img_count)(<ref refid="struct_image__t" kindref="compound">Image_t</ref><sp/>*img)<sp/>_stdcall;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>bool<sp/><sp/><sp/><sp/><sp/>(*img_destroy)(<ref refid="struct_image__t" kindref="compound">Image_t</ref><sp/>*img)<sp/>_stdcall;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>bool<sp/><sp/><sp/><sp/><sp/>(*img_destroy_layer)(<ref refid="struct_image__t" kindref="compound">Image_t</ref>*<sp/>img)<sp/>_stdcall;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_image__t" kindref="compound">Image_t</ref>*<sp/><sp/><sp/>(*img_blend)(<ref refid="struct_image__t" kindref="compound">Image_t</ref>*<sp/>dst,<sp/><ref refid="struct_image__t" kindref="compound">Image_t</ref>*<sp/>src,<sp/>uint32_t<sp/>out_x,<sp/>uint32_t<sp/>out_y,<sp/>uint32_t<sp/>in_x,<sp/>uint32_t<sp/>in_y,<sp/>uint32_t<sp/>width,<sp/>uint32_t<sp/>height)<sp/>_stdcall;<sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_image__t" kindref="compound">Image_t</ref>*<sp/><sp/><sp/>(*img_convert)(<ref refid="struct_image__t" kindref="compound">Image_t</ref><sp/>*src,<sp/><ref refid="struct_image__t" kindref="compound">Image_t</ref><sp/>*dst,<sp/>uint32_t<sp/>dst_type,<sp/>uint32_t,<sp/>uint32_t)<sp/>_stdcall;<sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_image__t" kindref="compound">Image_t</ref>*<sp/><sp/><sp/>(*img_resize_data)(<ref refid="struct_image__t" kindref="compound">Image_t</ref><sp/>*src,<sp/>uint32_t<sp/>width,<sp/>uint32_t<sp/>height)<sp/>_stdcall;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="struct_image__t" kindref="compound">Image_t</ref>*<sp/><sp/><sp/>(*img_scale)(<ref refid="struct_image__t" kindref="compound">Image_t</ref>*<sp/>src,<sp/>uint32_t<sp/>crop_x,<sp/>uint32_t<sp/>crop_y,<sp/>uint32_t<sp/>crop_width,<sp/>uint32_t<sp/>crop_height,<sp/><ref refid="struct_image__t" kindref="compound">Image_t</ref>*<sp/>dst,<sp/>uint32_t<sp/>scale_type,<sp/>uint32_t<sp/>inter,<sp/>uint32_t<sp/>new_width,<sp/>uint32_t<sp/>new_height)<sp/>_stdcall;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>extern<sp/>&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__MakeStaticLib__</highlight></codeline>
<codeline lineno="205"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_image__t" kindref="compound">Image_t</ref>*<sp/>LoadImageFromFile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>Path)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>img_size;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*f<sp/>=<sp/>fopen(Path,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Этот<sp/>код<sp/>взят<sp/>из<sp/>примера<sp/>из<sp/>/contrib/C_Layer/EXAMPLE/img_example/main.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;LoadImage:<sp/>Can&apos;t<sp/>open<sp/>file:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*b;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(b,<sp/>a);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(b,<sp/>Path);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(b,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\n<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ksys_debug_puts(b);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fseek(f,<sp/>0,<sp/>SEEK_END))</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>SEEK_END<sp/>file:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*b;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(b,<sp/>a);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(b,<sp/>Path);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(b,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\n<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ksys_debug_puts(b);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>filesize<sp/>=<sp/>ftell(f);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>rewind(f);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fdata<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc(filesize);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fdata)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>memory<sp/>for<sp/>file:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*b;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(b,<sp/>a);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(b,<sp/>Path);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(b,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(b,<sp/></highlight><highlight class="stringliteral">&quot;malloc<sp/>not<sp/>return<sp/>ptr\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ksys_debug_puts(b);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>img_size<sp/>=<sp/>(int32_t)fread(fdata,<sp/>1,<sp/>filesize,<sp/>f);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ferror(f))</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*a<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>reading<sp/>file<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*b;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(b,<sp/>a);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(b,<sp/>Path);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(b,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\n<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ksys_debug_puts(b);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_image__t" kindref="compound">Image_t</ref><sp/>*buff<sp/>=<sp/>img_decode((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)fdata,<sp/>img_size,<sp/>0);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>free(fdata);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buff;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>img_fill_color(<ref refid="struct_image__t" kindref="compound">Image_t</ref>*<sp/>img,<sp/>uint32_t<sp/>width,<sp/>uint32_t<sp/>height,<sp/>uint32_t<sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>width*height;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>img-&gt;<ref refid="struct_image__t_1a925d0700ce7381dcd4a5f1d07d79bf8b" kindref="member">Data</ref>[i]<sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>img_fill_color(<ref refid="struct_image__t" kindref="compound">Image_t</ref><sp/>*img,<sp/>uint32_t<sp/>color)</highlight></codeline>
<codeline lineno="278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>img-&gt;<ref refid="struct_image__t_1a7f65cc0a1bf3b4f78aec1f3bf2ea9707" kindref="member">Width</ref><sp/>*<sp/>img-&gt;<ref refid="struct_image__t_1a724c6884766f30652ad3d5e8ce2cd524" kindref="member">Height</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>img-&gt;<ref refid="struct_image__t_1a925d0700ce7381dcd4a5f1d07d79bf8b" kindref="member">Data</ref>[i]<sp/>=<sp/>color;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>KOLIBRI_LIBIMG_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_libimg.h"/>
  </compounddef>
</doxygen>
