<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="ru">
  <compounddef id="kolibri__network_8h" kind="file" language="C++">
    <compoundname>kolibri_network.h</compoundname>
    <includes local="no">sys/socket.h</includes>
    <incdepgraph>
      <node id="1">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h</label>
        <link refid="kolibri__network_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>sys/socket.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_a_r_p__entry" prot="public">ARP_entry</innerclass>
    <innerclass refid="structaddrinfo" prot="public">addrinfo</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="kolibri__network_8h_1aac746f03bb5099da0a427a99ecf1e36a" prot="public" static="no">
        <name>EAI_ADDRFAMILY</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="6" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kolibri__network_8h_1a7a0f2f10f8778fe201a68932d18434e5" prot="public" static="no">
        <name>EAI_AGAIN</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="7" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kolibri__network_8h_1a3f3b38f2ac6688612a0fd20f3e6210be" prot="public" static="no">
        <name>EAI_BADFLAGS</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="8" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kolibri__network_8h_1acfc712115bf29357d33472da2209dc15" prot="public" static="no">
        <name>EAI_FAIL</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="9" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kolibri__network_8h_1a1d195add54c14a8903441848fb2f7da6" prot="public" static="no">
        <name>EAI_FAMILY</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="10" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kolibri__network_8h_1a33d8eb0c89167f95dcdaf23386631174" prot="public" static="no">
        <name>EAI_MEMORY</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="11" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kolibri__network_8h_1a0bb00f48d6ba1e8c55b7d85c8e3a19a7" prot="public" static="no">
        <name>EAI_NONAME</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="12" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kolibri__network_8h_1ac7f08e3ee3c38f7c869beb5a44c9f651" prot="public" static="no">
        <name>EAI_SERVICE</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="13" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kolibri__network_8h_1a110777c2c99dab32101324b3b1dd1df5" prot="public" static="no">
        <name>EAI_SOCKTYPE</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="14" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kolibri__network_8h_1a06480e6a72c58c6649d2ad19c98bff27" prot="public" static="no">
        <name>EAI_BADHINTS</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="15" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kolibri__network_8h_1ac22bd096438839c946a37c0619c6eabf" prot="public" static="no">
        <name>EAI_PROTOCOL</name>
        <initializer>13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="16" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kolibri__network_8h_1a01d6798d308152b919a0b9f998bbd336" prot="public" static="no">
        <name>EAI_OVERFLOW</name>
        <initializer>14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="17" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kolibri__network_8h_1aec9e92ed53442d64cbc9b68d92ad970b" prot="public" static="no">
        <name>AI_PASSIVE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="20" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kolibri__network_8h_1ab2912e6cffeb2353df550f10bbe64cf4" prot="public" static="no">
        <name>AI_CANONNAME</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="21" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kolibri__network_8h_1a2a7070b38894743c536630b2ab25dcef" prot="public" static="no">
        <name>AI_NUMERICHOST</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="22" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kolibri__network_8h_1a8739abe7bcb9470bcdb021e869b2a76f" prot="public" static="no">
        <name>AI_NUMERICSERV</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="23" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kolibri__network_8h_1abe581892df09df05b21fee09e1584659" prot="public" static="no">
        <name>AI_ADDRCONFIG</name>
        <initializer>0x400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="24" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" bodystart="24" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="kolibri__network_8h_1a3bea66ceb438d6a340fb7c5894841fb1" prot="public" static="no" extern="yes" mutable="no">
        <type>int(*</type>
        <definition>int(* inet_addr) (const char *hostname) __attribute__((stdcall))</definition>
        <argsstring>)(const char *hostname) __attribute__((stdcall))</argsstring>
        <name>inet_addr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="49" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" declline="49" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__network_8h_1a4cd30c69a90e06ed1f2efab4c2264f29" prot="public" static="no" extern="yes" mutable="no">
        <type>char *(*</type>
        <definition>char *(* inet_ntoa) (int ip_addr) __attribute__((stdcall))</definition>
        <argsstring>)(int ip_addr) __attribute__((stdcall))</argsstring>
        <name>inet_ntoa</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="50" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" declline="50" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__network_8h_1aadfd3232f735831646fb5cfa102bb712" prot="public" static="no" extern="yes" mutable="no">
        <type>int(*</type>
        <definition>int(* getaddrinfo) (char *hostname, char *servname, struct addrinfo *hints, struct addrinfo **res) __attribute__((stdcall))</definition>
        <argsstring>)(char *hostname, char *servname, struct addrinfo *hints, struct addrinfo **res) __attribute__((stdcall))</argsstring>
        <name>getaddrinfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="51" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" declline="51" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__network_8h_1a28bd9ac6d2dc1cf1e64b738a91d60cf0" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* freeaddrinfo) (struct addrinfo *ai) __attribute__((stdcall))</definition>
        <argsstring>)(struct addrinfo *ai) __attribute__((stdcall))</argsstring>
        <name>freeaddrinfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="52" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" declline="52" declcolumn="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="kolibri__network_8h_1a1b3f00e699b6934789568abb4db4ba88" prot="public" static="no" extern="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int networklib_init</definition>
        <argsstring>()</argsstring>
        <name>networklib_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" line="48" column="12" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h" declline="48" declcolumn="12"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>__NETWORK_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__NETWORK_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/socket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_ADDRFAMILY<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_AGAIN<sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_BADFLAGS<sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_FAIL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_FAMILY<sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_MEMORY<sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_NONAME<sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_SERVICE<sp/><sp/><sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_SOCKTYPE<sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_BADHINTS<sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_PROTOCOL<sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EAI_OVERFLOW<sp/><sp/><sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Flags<sp/>for<sp/>addrinfo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_PASSIVE<sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_CANONNAME<sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_NUMERICHOST<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_NUMERICSERV<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_ADDRCONFIG<sp/><sp/>0x400</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="struct_a_r_p__entry" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_r_p__entry" kindref="compound">ARP_entry</ref>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IP;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>MAC[6];</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>TTL;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structaddrinfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structaddrinfo" kindref="compound">addrinfo</ref>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ai_flags;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ai_family;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ai_socktype;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ai_protocol;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>ai_addrlen;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>*ai_canonname;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr<sp/>*ai_addr;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structaddrinfo" kindref="compound">addrinfo</ref><sp/>*ai_next;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">};<sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>networklib_init<sp/>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int<sp/>(*inet_addr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>hostname)<sp/>__attribute__<sp/>((stdcall));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>(*inet_ntoa)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ip_addr)<sp/>__attribute__<sp/>((stdcall));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int<sp/>(*getaddrinfo)(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>hostname,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*servname,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structaddrinfo" kindref="compound">addrinfo</ref>*<sp/>hints,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structaddrinfo" kindref="compound">addrinfo</ref>**<sp/>res)<sp/>__attribute__<sp/>((stdcall));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*freeaddrinfo)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structaddrinfo" kindref="compound">addrinfo</ref>*<sp/>ai)<sp/>__attribute__<sp/>((stdcall));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_network.h"/>
  </compounddef>
</doxygen>
