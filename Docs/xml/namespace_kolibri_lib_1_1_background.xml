<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="ru">
  <compounddef id="namespace_kolibri_lib_1_1_background" kind="namespace" language="C++">
    <compoundname>KolibriLib::Background</compoundname>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespace_kolibri_lib_1_1_background_1a7041f0639a28ce1ef4111cd0e5128194" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KolibriLib::Background::f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <qualifiedname>KolibriLib::Background::f</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" line="19" column="6" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespace_kolibri_lib_1_1_background_1a776c9ccf7667bba240cb767f51703736" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb" kindref="member">Size</ref></type>
        <definition>Size KolibriLib::Background::GetSize</definition>
        <argsstring>()</argsstring>
        <name>GetSize</name>
        <qualifiedname>KolibriLib::Background::GetSize</qualifiedname>
        <briefdescription>
<para>Получить размеры фонового изображения </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" line="23" column="13" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" bodystart="23" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1_background_1ae55e239046bde105467372aba4a7cd44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref></type>
        <definition>Colors::Color KolibriLib::Background::ReadPoint</definition>
        <argsstring>(const Coord &amp;Point)</argsstring>
        <name>ReadPoint</name>
        <qualifiedname>KolibriLib::Background::ReadPoint</qualifiedname>
        <param>
          <type>const <ref refid="namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff" kindref="member">Coord</ref> &amp;</type>
          <declname>Point</declname>
        </param>
        <briefdescription>
<para>Прочитать точку на фоне </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>читаема точка </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" line="37" column="22" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" bodystart="37" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1_background_1a49a4b0d2ddebbe46dffa031b6b43cd46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::Background::RedrawBackground</definition>
        <argsstring>()</argsstring>
        <name>RedrawBackground</name>
        <qualifiedname>KolibriLib::Background::RedrawBackground</qualifiedname>
        <briefdescription>
<para>Перерисовать фон </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" line="53" column="13" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1_background_1ab3fe2058b7a0a22640d91ee55f4a2ce0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::Background::RedrawBackground</definition>
        <argsstring>(const Coord &amp;coord, const Size &amp;size)</argsstring>
        <name>RedrawBackground</name>
        <qualifiedname>KolibriLib::Background::RedrawBackground</qualifiedname>
        <param>
          <type>const <ref refid="namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff" kindref="member">Coord</ref> &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb" kindref="member">Size</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Перересовать область фона </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>координаты верхненго левого угла области </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>размеры <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" line="61" column="13" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" bodystart="61" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1_background_1a3687537658469d97662c56c6d337b99f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::Background::SetSize</definition>
        <argsstring>(const Size &amp;size)</argsstring>
        <name>SetSize</name>
        <qualifiedname>KolibriLib::Background::SetSize</qualifiedname>
        <param>
          <type>const <ref refid="namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb" kindref="member">Size</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" line="70" column="13" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1_background_1a72585aa28e7e33f28d8409973f62d4de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::Background::DrawPoint</definition>
        <argsstring>(const Coord coord, const Colors::Color &amp;color)</argsstring>
        <name>DrawPoint</name>
        <qualifiedname>KolibriLib::Background::DrawPoint</qualifiedname>
        <param>
          <type>const <ref refid="namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff" kindref="member">Coord</ref></type>
          <declname>coord</declname>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" line="76" column="13" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" bodystart="76" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1_background_1aba8e36651d4a9157a8009428a4fffa7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void KolibriLib::Background::DrawImage</definition>
        <argsstring>(const Coord coord, rgb_t(&amp;rgb)[N])</argsstring>
        <name>DrawImage</name>
        <qualifiedname>KolibriLib::Background::DrawImage</qualifiedname>
        <param>
          <type>const <ref refid="namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff" kindref="member">Coord</ref></type>
          <declname>coord</declname>
        </param>
        <param>
          <type>rgb_t(&amp;)</type>
          <declname>rgb</declname>
          <array>[N]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" line="86" column="13" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" bodystart="86" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1_background_1a9504a1faa71e915725cb3c5553e477af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::Background::DrawImage</definition>
        <argsstring>(const Coord &amp;coord, rgb_t *rgb, std::size_t N)</argsstring>
        <name>DrawImage</name>
        <qualifiedname>KolibriLib::Background::DrawImage</qualifiedname>
        <param>
          <type>const <ref refid="namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff" kindref="member">Coord</ref> &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>rgb_t *</type>
          <declname>rgb</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" line="95" column="13" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" bodystart="95" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1_background_1a023d840ad0755b7f682f973136a8ec3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::Background::DrawLine</definition>
        <argsstring>(const Coord &amp;p1, const Coord &amp;p2, const Colors::Color &amp;color=OS::GetSystemColors().work_graph)</argsstring>
        <name>DrawLine</name>
        <qualifiedname>KolibriLib::Background::DrawLine</qualifiedname>
        <param>
          <type>const <ref refid="namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff" kindref="member">Coord</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff" kindref="member">Coord</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>color</declname>
          <defval><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">OS::GetSystemColors</ref>().work_graph</defval>
        </param>
        <briefdescription>
<para>Нарисовать линию на фоне </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p1</parametername>
</parameternamelist>
<parameterdescription>
<para>точка перавая </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p2</parametername>
</parameternamelist>
<parameterdescription>
<para>точка вторая </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>цвет линии </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" line="108" column="13" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" bodystart="108" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1_background_1af7ead0ddbaa80b35e8d82c32d41e762a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::Background::DrawText</definition>
        <argsstring>(const std::string &amp;text, const Coord &amp;coord, const UI::text::Fonts::Font &amp;font=UI::text::Fonts::DefaultFont, unsigned margin=UI::DefaultMargin, const Colors::Color &amp;colorText=OS::GetSystemColors().work_text, const Colors::Color &amp;BackgroundColor=OS::GetSystemColors().work_area)</argsstring>
        <name>DrawText</name>
        <qualifiedname>KolibriLib::Background::DrawText</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff" kindref="member">Coord</ref> &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1_1_font" kindref="compound">UI::text::Fonts::Font</ref> &amp;</type>
          <declname>font</declname>
          <defval><ref refid="namespace_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1abab58341d8cf9048d474cf45a2e00723" kindref="member">UI::text::Fonts::DefaultFont</ref></defval>
        </param>
        <param>
          <type>unsigned</type>
          <declname>margin</declname>
          <defval>UI::DefaultMargin</defval>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>colorText</declname>
          <defval><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">OS::GetSystemColors</ref>().work_text</defval>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>BackgroundColor</declname>
          <defval><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">OS::GetSystemColors</ref>().work_area</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" line="119" column="6" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" bodystart="119" bodyend="133"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Работа с фоном </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/background.hpp" line="17" column="1"/>
  </compounddef>
</doxygen>
