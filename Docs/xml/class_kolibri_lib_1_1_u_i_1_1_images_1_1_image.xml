<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="ru">
  <compounddef id="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image" kind="class" language="C++" prot="public">
    <compoundname>KolibriLib::UI::Images::Image</compoundname>
    <basecompoundref refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element" prot="public" virt="non-virtual">KolibriLib::UI::UIElement</basecompoundref>
    <basecompoundref refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1img" prot="public" virt="non-virtual">KolibriLib::UI::Images::img</basecompoundref>
    <includes refid="image_8hpp" local="no">image.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1a0a1195770835be1f5513910bf8eb21d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KolibriLib::UI::Images::Image::Image</definition>
        <argsstring>(const Coord &amp;coord={0, 0}, const Size &amp;size={100, 100})</argsstring>
        <name>Image</name>
        <qualifiedname>KolibriLib::UI::Images::Image::Image</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">Coord</ref> &amp;</type>
          <declname>coord</declname>
          <defval>{0, 0}</defval>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">Size</ref> &amp;</type>
          <declname>size</declname>
          <defval>{100, 100}</defval>
        </param>
        <briefdescription>
<para>Конструктор </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Координаты </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Размер </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Path</parametername>
</parameternamelist>
<parameterdescription>
<para>Путь до картинки </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Margin</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/image.hpp" line="56" column="1" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/image.hpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1ad63223057a3cea18f027074d68ff2ecc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KolibriLib::UI::Images::Image::~Image</definition>
        <argsstring>()</argsstring>
        <name>~Image</name>
        <qualifiedname>KolibriLib::UI::Images::Image::~Image</qualifiedname>
        <briefdescription>
<para>Деструктор </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/image.hpp" line="59" column="1" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/image.hpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1a0cafdef164e76cea219923deb39b9f2c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::Images::Image::Render</definition>
        <argsstring>() const</argsstring>
        <name>Render</name>
        <qualifiedname>KolibriLib::UI::Images::Image::Render</qualifiedname>
        <briefdescription>
<para>Вывести изображение в окно </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Размер выводимого изображения </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
<sect4 id="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1Можно">
<title>растянуть/сжать выводимое изображение введя новые размеры в переменную size, само изображение при этом не изменяется</title></sect4>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/image.hpp" line="66" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/image.hpp" bodystart="188" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1ae00f970794772662ac7d8db0fc135771" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image" kindref="compound">Image</ref> &amp;</type>
        <definition>Images::Image &amp; KolibriLib::UI::Images::Image::operator=</definition>
        <argsstring>(const Image &amp;a)</argsstring>
        <name>operator=</name>
        <qualifiedname>KolibriLib::UI::Images::Image::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image" kindref="compound">Image</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/image.hpp" line="71" column="7" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/image.hpp" bodystart="193" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1abdbd06975b0b6cb2f6fbbec1383276dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::Images::Image::init</definition>
        <argsstring>(const Coord &amp;coord={0, 0}, const Size &amp;size={100, 100}, const filesystem::Path &amp;Path=DefaultImage)</argsstring>
        <name>init</name>
        <qualifiedname>KolibriLib::UI::Images::Image::init</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">Coord</ref> &amp;</type>
          <declname>coord</declname>
          <defval>{0, 0}</defval>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">Size</ref> &amp;</type>
          <declname>size</declname>
          <defval>{100, 100}</defval>
        </param>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1filesystem_1_1_path" kindref="compound">filesystem::Path</ref> &amp;</type>
          <declname>Path</declname>
          <defval>DefaultImage</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/image.hpp" line="74" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/image.hpp" bodystart="176" bodyend="181"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Картинка как элемент интерфейса </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KolibriLib::UI::Images::Image</label>
        <link refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>KolibriLib::UI::Images::img</label>
        <link refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1img"/>
      </node>
      <node id="2">
        <label>KolibriLib::UI::UIElement</label>
        <link refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>KolibriLib::Colors::Color</label>
        <link refid="union_kolibri_lib_1_1_colors_1_1_color"/>
      </node>
      <node id="1">
        <label>KolibriLib::UI::Images::Image</label>
        <link refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>KolibriLib::UI::Images::img</label>
        <link refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1img"/>
      </node>
      <node id="2">
        <label>KolibriLib::UI::UIElement</label>
        <link refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element"/>
        <childnode refid="3" relation="usage">
          <edgelabel>_coord</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>_size</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>_MainColor</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>KolibriLib::point&lt; int &gt;</label>
        <link refid="struct_kolibri_lib_1_1point"/>
      </node>
      <node id="4">
        <label>KolibriLib::point&lt; unsigned &gt;</label>
        <link refid="struct_kolibri_lib_1_1point"/>
      </node>
    </collaborationgraph>
    <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/image.hpp" line="46" column="1" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/image.hpp" bodystart="47" bodyend="77"/>
    <listofallmembers>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1ab5290f9d9259a6402581a74ca3699a37" prot="protected" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>_angle</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a6a32e2b61ba20d655583fcfe6da82668" prot="protected" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>_coord</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1img_1af4a03f4296e6014c80ab7eca91e5dcb5" prot="protected" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>_img</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a9b06ab1ff3ebbfd4fad7c34b9d1ea322" prot="protected" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>_MainColor</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a1f504101c3f76fb890f4dc1bf38c637b" prot="protected" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>_Margin</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a6f6b023df1a1a5737819c6c50e72c5c3" prot="protected" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>_relative</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a4094c4e31f3891565dbbbcc5b8de8e3f" prot="protected" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>_size</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a69995a90b6e010f467ab766edfa782d4" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>GetColor</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a3f2f4016ffe8414c55cc13c665b0a3a8" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>GetCoord</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a452197bd6d4f5aebf9c432a9a3a088e2" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>GetMargin</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a91df2001fe6967e760d343e42f5d870c" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>GetRotate</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a7411f3ff0db5a7453f0d23c5ead9ce9e" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>GetSize</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1acb1303729c55ba615af2562823dd2c8e" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>Hover</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1a0a1195770835be1f5513910bf8eb21d7" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>Image</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1img_1a2dccdd775e2b113ff5d6c8660fcd2854" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>img</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1abdbd06975b0b6cb2f6fbbec1383276dc" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>init</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1img_1a4035876f0222a7ccdc175b595428732f" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>LoadImage</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a47f5a94da324198946c6567244620f86" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>operator!=</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1ae00f970794772662ac7d8db0fc135771" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>operator=</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a55bc7a13f3d7f444e2004adde9b45700" prot="public" virt="non-virtual" ambiguityscope="KolibriLib::UI::UIElement::"><scope>KolibriLib::UI::Images::Image</scope><name>operator=</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1aadb7dd820e6edfb96007bb83743bee3c" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>operator==</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1a0cafdef164e76cea219923deb39b9f2c" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>Render</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1img_1af06cc442287b5f60f10a32d7e9f471c0" prot="public" virt="virtual" ambiguityscope="KolibriLib::UI::Images::img::"><scope>KolibriLib::UI::Images::Image</scope><name>Render</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a983464b962931621091affaa11f0472a" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>Rotate</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a969186d6406bb6c11a024e5a91749336" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>SetColor</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a16b029a7f35ee44656c2eb2af211873d" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>SetCoord</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1img_1af29a0e50b662f1eabd18c8cfdff392a5" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>SetImg</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a3b3eb7370243281576ff27c489db913d" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>SetSize</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a0e8520d7b6e47e5b307b00449702e737" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>UIElement</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1ad63223057a3cea18f027074d68ff2ecc" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>~Image</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1img_1aba85758fe9684e82adb0e4bb8535822b" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>~img</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
