<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image" kind="class" language="C++" prot="public">
    <compoundname>KolibriLib::UI::Images::Image</compoundname>
    <basecompoundref refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element" prot="public" virt="non-virtual">KolibriLib::UI::UIElement</basecompoundref>
    <includes refid="image_8hpp" local="no">image.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1adc4bdf3c50d5382118ec87eadf84563e" prot="private" static="no" mutable="no">
        <type>Image_t *</type>
        <definition>Image_t* KolibriLib::UI::Images::Image::_img</definition>
        <argsstring></argsstring>
        <name>_img</name>
        <qualifiedname>KolibriLib::UI::Images::Image::_img</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" line="30" column="9" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1a0a1195770835be1f5513910bf8eb21d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KolibriLib::UI::Images::Image::Image</definition>
        <argsstring>(const Coord &amp;coord={0, 0}, const Size &amp;size={100, 100})</argsstring>
        <name>Image</name>
        <qualifiedname>KolibriLib::UI::Images::Image::Image</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">Coord</ref> &amp;</type>
          <declname>coord</declname>
          <defval>{0, 0}</defval>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">Size</ref> &amp;</type>
          <declname>size</declname>
          <defval>{100, 100}</defval>
        </param>
        <briefdescription>
<para>Конструктор </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Координаты </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Размер </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Path</parametername>
</parameternamelist>
<parameterdescription>
<para>Путь до картинки </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Margin</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" line="37" column="1" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" bodystart="86" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1ad63223057a3cea18f027074d68ff2ecc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KolibriLib::UI::Images::Image::~Image</definition>
        <argsstring>()</argsstring>
        <name>~Image</name>
        <qualifiedname>KolibriLib::UI::Images::Image::~Image</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" line="38" column="1" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1a5e4287d71c6240729aa1076a3a27e5a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::Images::Image::LoadImage</definition>
        <argsstring>(const std::string &amp;Path=DefaultImage)</argsstring>
        <name>LoadImage</name>
        <qualifiedname>KolibriLib::UI::Images::Image::LoadImage</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>Path</declname>
          <defval>DefaultImage</defval>
        </param>
        <briefdescription>
<para>Загрузить изображение </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Path</parametername>
</parameternamelist>
<parameterdescription>
<para>путь до файла </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" line="42" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" bodystart="98" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1a0929780fad7588710f4bb738170e6327" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::Images::Image::Render</definition>
        <argsstring>(Size size={0, 0})</argsstring>
        <name>Render</name>
        <qualifiedname>KolibriLib::UI::Images::Image::Render</qualifiedname>
        <param>
          <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">Size</ref></type>
          <declname>size</declname>
          <defval>{0, 0}</defval>
        </param>
        <briefdescription>
<para>Вывести изображение в окно </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Размер выводимого изображения </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
<sect4 id="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1Можно">
<title>растянуть/сжать выводимое изображение введя новые размеры в переменную size, само изображение при этом не изменяется</title></sect4>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" line="47" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" bodystart="157" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1addb25acc0eacb0fc9fba97652da09366" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image" kindref="compound">Image</ref> &amp;</type>
        <definition>Image &amp; KolibriLib::UI::Images::Image::operator=</definition>
        <argsstring>(const Image &amp;a)</argsstring>
        <name>operator=</name>
        <qualifiedname>KolibriLib::UI::Images::Image::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image" kindref="compound">Image</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" line="49" column="7" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" bodystart="49" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1aeb681037d2dec389260d1b010c16b154" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::Images::Image::init</definition>
        <argsstring>(const Coord &amp;coord={0, 0}, const Size &amp;size={100, 100}, const std::string &amp;Path=DefaultImage)</argsstring>
        <name>init</name>
        <qualifiedname>KolibriLib::UI::Images::Image::init</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">Coord</ref> &amp;</type>
          <declname>coord</declname>
          <defval>{0, 0}</defval>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">Size</ref> &amp;</type>
          <declname>size</declname>
          <defval>{100, 100}</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>Path</declname>
          <defval>DefaultImage</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" line="60" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" bodystart="170" bodyend="175"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Картинка как элемент интерфейса </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KolibriLib::UI::Images::Image</label>
        <link refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KolibriLib::UI::UIElement</label>
        <link refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>KolibriLib::Color::Color</label>
        <link refid="union_kolibri_lib_1_1_color_1_1_color"/>
      </node>
      <node id="1">
        <label>KolibriLib::UI::Images::Image</label>
        <link refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KolibriLib::UI::UIElement</label>
        <link refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element"/>
        <childnode refid="3" relation="usage">
          <edgelabel>_coord</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>_size</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>_MainColor</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>KolibriLib::point&lt; int &gt;</label>
        <link refid="struct_kolibri_lib_1_1point"/>
      </node>
      <node id="4">
        <label>KolibriLib::point&lt; unsigned &gt;</label>
        <link refid="struct_kolibri_lib_1_1point"/>
      </node>
    </collaborationgraph>
    <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" line="27" column="1" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" bodystart="28" bodyend="61"/>
    <listofallmembers>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1ab5290f9d9259a6402581a74ca3699a37" prot="protected" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>_angle</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a6a32e2b61ba20d655583fcfe6da82668" prot="protected" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>_coord</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1adc4bdf3c50d5382118ec87eadf84563e" prot="private" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>_img</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a6dfc8327d6b3038cae0e85c0efc01b68" prot="protected" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>_MainColor</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a1f504101c3f76fb890f4dc1bf38c637b" prot="protected" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>_Margin</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a6f6b023df1a1a5737819c6c50e72c5c3" prot="protected" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>_relative</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a4094c4e31f3891565dbbbcc5b8de8e3f" prot="protected" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>_size</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a79e0daa11205956c3ad4b64424597aea" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>GetColor</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1adad4d5b75d97484323f46834dbe574c8" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>GetCoord</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a452197bd6d4f5aebf9c432a9a3a088e2" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>GetMargin</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a91df2001fe6967e760d343e42f5d870c" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>GetRotate</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1ab591105fdaaaece609203d9088948847" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>GetSize</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a56465e500c5b8e95d57c09549da98342" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>Hover</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1a0a1195770835be1f5513910bf8eb21d7" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>Image</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1aeb681037d2dec389260d1b010c16b154" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>init</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1a5e4287d71c6240729aa1076a3a27e5a5" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>LoadImage</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a47f5a94da324198946c6567244620f86" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>operator!=</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1addb25acc0eacb0fc9fba97652da09366" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>operator=</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a55bc7a13f3d7f444e2004adde9b45700" prot="public" virt="non-virtual" ambiguityscope="KolibriLib::UI::UIElement::"><scope>KolibriLib::UI::Images::Image</scope><name>operator=</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1aadb7dd820e6edfb96007bb83743bee3c" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>operator==</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1a0929780fad7588710f4bb738170e6327" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>Render</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a983464b962931621091affaa11f0472a" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>Rotate</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a6f871026573aee83d1fe859b3320625d" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>SetColor</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1ae0b96d011b65b628af2dcc0b6dc45fe3" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>SetCoord</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1ad299cc03e0b4fb659186d770a63f9a2b" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>SetSize</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a311aecf3edea3bce6cc3c46038d7a1e0" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>UIElement</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1ad63223057a3cea18f027074d68ff2ecc" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::Image</scope><name>~Image</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
