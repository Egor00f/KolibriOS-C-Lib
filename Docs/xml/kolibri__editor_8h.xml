<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="ru">
  <compounddef id="kolibri__editor_8h" kind="file" language="C++">
    <compoundname>kolibri_editor.h</compoundname>
    <includes refid="kos32sys_8h" local="no">kos32sys.h</includes>
    <includedby refid="kolibri__gui__elements_8h" local="yes">C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui_elements.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h</label>
        <link refid="kolibri__editor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kos32sys.h</label>
        <link refid="kos32sys_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdarg.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h</label>
        <link refid="kolibri__editor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui.h</label>
        <link refid="kolibri__gui_8h_source"/>
      </node>
      <node id="2">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui_elements.h</label>
        <link refid="kolibri__gui__elements_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structeditor__syntax__file" prot="public">editor_syntax_file</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="kolibri__editor_8h_1a523a4b69daffe346a5504b2df09626dd" prot="public" static="no">
        <name>TE_MAXCHARS</name>
        <initializer>100002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="9" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kolibri__editor_8h_1a5b903f1f964a36e1ee9ddf8bdfcacba8" prot="public" static="no">
        <name>TE_MAX_SYNTAX_FILESIZE</name>
        <initializer>410000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="11" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="kolibri__editor_8h_1a7647b959c0ac872a19a7f16d295f1675" prot="public" static="no">
        <name>TE_BUF_SIZE</name>
        <initializer>4096</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="13" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="13" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="kolibri__editor_8h_1adcce573f618083899b3ff2c0ffa79d22" prot="public" static="no" strong="no">
        <type></type>
        <name>control_keys</name>
        <enumvalue id="kolibri__editor_8h_1adcce573f618083899b3ff2c0ffa79d22ae3ebadcec5438afffbd2526178a1cd77" prot="public">
          <name>KM_SHIFT</name>
          <initializer>= 0x00010000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__editor_8h_1adcce573f618083899b3ff2c0ffa79d22a09b794afb7bc438e2ef5cfe6838ec087" prot="public">
          <name>KM_CTRL</name>
          <initializer>= 0x00020000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__editor_8h_1adcce573f618083899b3ff2c0ffa79d22a2423b3215e75234b6e550abb0c7f2048" prot="public">
          <name>KM_ALT</name>
          <initializer>= 0x00040000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__editor_8h_1adcce573f618083899b3ff2c0ffa79d22a971c568d6884b059c0f8b277f908be42" prot="public">
          <name>KM_NUMLOCK</name>
          <initializer>= 0x00080000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="194" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="195" bodyend="200"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="kolibri__editor_8h_1afa456dcf6593dd28ba855cb1778b4f25" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* editor_callback) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>editor_callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="14" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="14" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="kolibri__editor_8h_1a017f88c6e085eda98f9d3e0f2aebb68e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>editor</definition>
        <argsstring></argsstring>
        <name>editor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="100" column="2" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1ab02fba6ac96baba4d8ecb3048c823006" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structeditor__syntax__file" kindref="compound">editor_syntax_file</ref></type>
        <definition>struct editor_syntax_file default_syntax</definition>
        <argsstring></argsstring>
        <name>default_syntax</name>
        <initializer>= {
    10,       
    1,        
    0xf1fcd0, 
    0x080808, 
    0x1C1C1C, 
    0xc0c0c0, 
    0x3E3D32, 
    0x808080, 
    {0xD0D0D0, 0xffff00, 0x00ff00, 0x00ffff, 0x808080, 0xff40ff, 0x4080ff, 0xff0000, 0x8080ff, 0x00ccff}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="126" column="32" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="126" bodyend="135"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a7d7a6e54276c698df3a446ff5238ee02" prot="public" static="yes" mutable="no">
        <type>struct editor_color_item</type>
        <definition>struct editor_color_item word1</definition>
        <argsstring></argsstring>
        <name>word1</name>
        <initializer>= {
    &quot;siemargl&quot;, 1, 0, 0, 1 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="137" column="31" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1aac218cd4987cc22f7239414fb7beeeb7" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char f1_table[]</definition>
        <argsstring>[]</argsstring>
        <name>f1_table</name>
        <initializer>= {
    &quot;\0&quot;
    &quot;First\0&quot;
    &quot;Last\0&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="141" column="13" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a041924ab4686a31fd876bf9100bad4d5" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_draw) (editor *) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *) __attribute__((__stdcall__))</argsstring>
        <name>ted_draw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="146" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="146" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a285907cf8b5cb0159c27b562afa9618f" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_init_scroll_bars) (editor *, int opt) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *, int opt) __attribute__((__stdcall__))</argsstring>
        <name>ted_init_scroll_bars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="147" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="147" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1aeee2c959edc65d01804623a8c551f5c3" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_init_syntax_file) (editor *) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *) __attribute__((__stdcall__))</argsstring>
        <name>ted_init_syntax_file</name>
        <briefdescription>
<para>opt bits = 1 - ìåíÿòü öâåò ñêðîëëèíãîâ, 2 - èçìåíèëèñü ðàçìåðû îêíà, 4 - èçìåíèëèñü ðàçìåðû äîêóìåíòà </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="149" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="149" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1aad765d1a0ff1cf42093932a8f5d28e6f" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_mouse) (editor *) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *) __attribute__((__stdcall__))</argsstring>
        <name>ted_mouse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="150" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="150" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a66193bc1d27d40b501ab30c24483a19a" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_text_add) (editor *, char *text, int textlen, int opt) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *, char *text, int textlen, int opt) __attribute__((__stdcall__))</argsstring>
        <name>ted_text_add</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="151" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="151" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a0668e8bffe8b953924d85fe50d263a7f" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_but_select_word) (editor *) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *) __attribute__((__stdcall__))</argsstring>
        <name>ted_but_select_word</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>add text to cursor pos opt == ted_opt_ed_change_time, ted_opt_ed_move_cursor ted_opt_ed_move_cursor equ 1 ;äâèãàòü êóðñîð ïîñëå äîáàâëåíèÿ òåêñòà ted_opt_ed_change_time equ 2 ;äîáàâëÿòü èçìåíåíèÿ ïðè ðåäàêòèðîâàíèè òåêñòà </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="156" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="156" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a5a81198d64a32ac931fd836ed4c94ff3" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_but_copy) (editor *) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *) __attribute__((__stdcall__))</argsstring>
        <name>ted_but_copy</name>
        <briefdescription>
<para>select word under cursor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="158" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="158" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a1a970c5a522582c5e41268b6caa77809" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_but_paste) (editor *) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *) __attribute__((__stdcall__))</argsstring>
        <name>ted_but_paste</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="159" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="159" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a1180f85f73b2f7a27b3966208b11c3fe" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_but_find) (editor *) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *) __attribute__((__stdcall__))</argsstring>
        <name>ted_but_find</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="161" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="161" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1ad2a0dbcb698ea3e41167b2fc7b38b51a" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_but_replace) (editor *) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *) __attribute__((__stdcall__))</argsstring>
        <name>ted_but_replace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="162" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="162" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1ac6f15e304ecb580ea0676da5df48bd6a" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_but_sumb_upper) (editor *) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *) __attribute__((__stdcall__))</argsstring>
        <name>ted_but_sumb_upper</name>
        <briefdescription>
<para>move cursor to &lt;ed_buffer_find&gt;, calls ted_fun_find_err() if exist </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="165" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="165" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1acede7bbae3ce72d46953844f0f8326bc" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_but_sumb_lover) (editor *) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *) __attribute__((__stdcall__))</argsstring>
        <name>ted_but_sumb_lover</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="167" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="167" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1af1a57fc8c019d3d4be2ef61af7f328e3" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_but_convert_by_table) (editor *, char *table) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *, char *table) __attribute__((__stdcall__))</argsstring>
        <name>ted_but_convert_by_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="169" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="169" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a49df9060f150bbeaf86237e685927de8" prot="public" static="no" extern="yes" mutable="no">
        <type>int(*</type>
        <definition>int(* ted_can_save) (editor *) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *) __attribute__((__stdcall__))</argsstring>
        <name>ted_can_save</name>
        <briefdescription>
<para>return 1 if need to be saved (has changes), 0 otherwise </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="172" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="172" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a4301aa02eaaebe3874fa557d4eadf0f9" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_clear) (editor *, int all) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *, int all) __attribute__((__stdcall__))</argsstring>
        <name>ted_clear</name>
        <briefdescription>
<para>all==1 - clear all memory </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="175" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="175" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1aee78c7d2de972c036e594b9a06a53e90" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_delete) (editor *) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *) __attribute__((__stdcall__))</argsstring>
        <name>ted_delete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="177" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="177" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a5104f7895388a8eb71c4a5620d3c3a1a" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_init) (editor *) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *) __attribute__((__stdcall__))</argsstring>
        <name>ted_init</name>
        <briefdescription>
<para>allocate memory </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="189" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="189" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a1b069888f9e888351c21657d89cf800b" prot="public" static="no" extern="yes" mutable="no">
        <type>int(*</type>
        <definition>int(* ted_is_select) (editor *) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *) __attribute__((__stdcall__))</argsstring>
        <name>ted_is_select</name>
        <briefdescription>
<para>return 1 if have selection </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="192" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="192" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a93b0ea87f3abc097e5b3bd7a5da7aadd" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_key_asm) (editor *, char *table, int control) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *, char *table, int control) __attribute__((__stdcall__))</argsstring>
        <name>ted_key_asm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="202" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="202" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1abc4810aa7718733bfc48b1973f4c92f8" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* table</definition>
        <argsstring></argsstring>
        <name>table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="203" column="37" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a9a1ca3d6ca586d76b7eceec89b6d37cb" prot="public" static="no" mutable="no">
        <type>char enum control_keys control int</type>
        <definition>char enum control_keys control int ch</definition>
        <argsstring></argsstring>
        <name>ch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>control is KM_SHIFT, KM_ALT, KM_CTRL, KM_NUMLOCK, ch = GET_KEY table = SF_SYSTEM_GET,SSF_KEYBOARD_LAYOUT </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="203" column="42" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="207" bodyend="219"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a249af1326ea5faac464b5b178d8262ff" prot="public" static="no" mutable="no">
        <type>char enum control_keys control int ch void(*</type>
        <definition>char enum control_keys control int ch void(* ted_open_file_asm) (editor *, struct fs_dirinfo *, char *fname) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *, struct fs_dirinfo *, char *fname) __attribute__((__stdcall__))</argsstring>
        <name>ted_open_file_asm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="203" column="60" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="221" bodyend="219"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a69f16f17ffd7fd5472c440b456380f81" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_save_file_asm) (editor *, struct fs_dirinfo *, char *fname) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *, struct fs_dirinfo *, char *fname) __attribute__((__stdcall__))</argsstring>
        <name>ted_save_file_asm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="237" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="237" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1ab57436ee1d0f07d1aa9832174b6a1ae2" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_but_cut) (editor *) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *) __attribute__((__stdcall__))</argsstring>
        <name>ted_but_cut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="248" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="248" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a0b9a508a1e4a45bdc3b21d1f824e4ed3" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_but_undo) (editor *) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *) __attribute__((__stdcall__))</argsstring>
        <name>ted_but_undo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="250" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="250" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a68b0cc142a3010b3f0673d0988582a07" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_but_redo) (editor *) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *) __attribute__((__stdcall__))</argsstring>
        <name>ted_but_redo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="252" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="252" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a582fbd2a070c2e7ce3481a7d310bf001" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_but_reverse) (editor *) __attribute__((__stdcall__))</definition>
        <argsstring>)(editor *) __attribute__((__stdcall__))</argsstring>
        <name>ted_but_reverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="254" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="254" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a698643e35dee3d18b955c3daa83562f5" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* ted_text_colored_asm) () __attribute__((__stdcall__))</definition>
        <argsstring>)() __attribute__((__stdcall__))</argsstring>
        <name>ted_text_colored_asm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="256" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="256" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a6efc9555d65f172040066b7da1e3d2a0" prot="public" static="no" mutable="no">
        <type>oskey_t</type>
        <definition>oskey_t key</definition>
        <argsstring></argsstring>
        <name>key</name>
        <initializer>{
    

    uint32_t control = get_control_keys()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="289" column="27" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1a2007cf21266ed8245cd049a9e046c92a" prot="public" static="no" mutable="no">
        <type>enum control_keys</type>
        <definition>enum control_keys ed_ctrl</definition>
        <argsstring></argsstring>
        <name>ed_ctrl</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="295" column="22" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1ada2ecf1c363349486782f5ab76abaad6" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ly_opt</definition>
        <argsstring></argsstring>
        <name>ly_opt</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="296" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__editor_8h_1add05a783ed3f2a39e0040b8fd1fb82b8" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char conv_table[128]</definition>
        <argsstring>[128]</argsstring>
        <name>conv_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="312" column="10" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="312" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="kolibri__editor_8h_1ad09246453a4dabd919c7541484046a87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>struct __attribute__</definition>
        <argsstring>((__packed__))</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(__packed__)</type>
        </param>
        <briefdescription>
<para>ñòðóêòóðà òåêñòîâîãî ðåäàêòîðà </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="14" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="16" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__editor_8h_1a4000e5b64a72f4073f35be8ff2f72380" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void editor_delete</definition>
        <argsstring>(editor *ed)</argsstring>
        <name>editor_delete</name>
        <param>
          <type>editor *</type>
          <declname>ed</declname>
        </param>
        <briefdescription>
<para>frees all memory (destroy) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="178" column="20" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="178" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__editor_8h_1a6933c4ce8155a696f2cb9fdb037fed34" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static __attribute__</definition>
        <argsstring>((__stdcall__)) void editor_keyboard(editor *ed</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(__stdcall__)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="203" column="15"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__editor_8h_1a5528b32d0534d365b8df31974c7efdab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__asm__</type>
        <definition>__asm__ __volatile__</definition>
        <argsstring>(&quot;push %4\n\t&quot; &quot;push %3\n\t&quot; &quot;push %2\n\t&quot; &quot;call *%1 \n\t&quot; ::&quot;a&quot;(ch), &quot;m&quot;(ted_key_asm), &quot;m&quot;(ed), &quot;m&quot;(table), &quot;m&quot;(control) :)</argsstring>
        <name>__volatile__</name>
        <param>
          <type>&quot;push %4\n\t&quot; &quot;push %3\n\t&quot; &quot;push %2\n\t&quot; &quot;call *%1 \n\t&quot; ::&quot;a&quot;</type>
          <array>ch</array>
        </param>
        <param>
          <type>&quot;m&quot;</type>
          <array>ted_key_asm</array>
        </param>
        <param>
          <type>&quot;m&quot;</type>
          <array>ed</array>
        </param>
        <param>
          <type>&quot;m&quot;</type>
          <array>table</array>
        </param>
        <param>
          <type>&quot;m&quot;(control) :</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="208" column="13" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="208" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__editor_8h_1aebd9b957def88a663f6adbfadae1ff37" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int editor_openfile</definition>
        <argsstring>(editor *ed, char *fname, int *readbytes)</argsstring>
        <name>editor_openfile</name>
        <param>
          <type>editor *</type>
          <declname>ed</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>readbytes</declname>
        </param>
        <briefdescription>
<para>returns errcode as SysFn70 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="222" column="19" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="222" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__editor_8h_1a229a4f15452217202faddd3d68f9f96a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int editor_savefile</definition>
        <argsstring>(editor *ed, char *fname)</argsstring>
        <name>editor_savefile</name>
        <param>
          <type>editor *</type>
          <declname>ed</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
<para>returns errcode, calls fun_save_err() if exists </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="238" column="19" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="238" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__editor_8h_1ac5a886c9c6377b5677d1727684c60dfc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void editor_text_colored</definition>
        <argsstring>(editor *ed)</argsstring>
        <name>editor_text_colored</name>
        <param>
          <type>editor *</type>
          <declname>ed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="257" column="20" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="257" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__editor_8h_1a8bb92d3583262598763eebb3e6023e02" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t get_control_keys</definition>
        <argsstring>(void)</argsstring>
        <name>get_control_keys</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="263" column="24" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="263" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__editor_8h_1ab197fa33aa4e849b1ecfeb5383258a73" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int get_keyboard_layout</definition>
        <argsstring>(int opt, char *buf)</argsstring>
        <name>get_keyboard_layout</name>
        <param>
          <type>int</type>
          <declname>opt</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>128 byte buffer opt: 1 - normal, 2 - shifted, 3 - alted, or 9 - return language </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="275" column="19" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="275" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__editor_8h_1a43106dea236936cfc574e84b95074981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>if</definition>
        <argsstring>(control &amp;3)</argsstring>
        <name>if</name>
        <param>
          <type>control &amp;</type>
          <declname>3</declname>
        </param>
        <initializer>= KM_CTRL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="297" column="5" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="297" bodyend="301" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="309" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__editor_8h_1af0dfce1f8ceb41f6acb0e2b660ae4bf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>get_keyboard_layout</definition>
        <argsstring>(ly_opt, conv_table)</argsstring>
        <name>get_keyboard_layout</name>
        <param>
          <type>ly_opt</type>
        </param>
        <param>
          <type>conv_table</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="313" column="5" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="313" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__editor_8h_1a532baff1c7d05a30c4d11be8250dc372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>editor_keyboard</definition>
        <argsstring>(ed, conv_table, ed_ctrl, key.val)</argsstring>
        <name>editor_keyboard</name>
        <param>
          <type>ed</type>
        </param>
        <param>
          <type>conv_table</type>
        </param>
        <param>
          <type>ed_ctrl</type>
        </param>
        <param>
          <type>key.</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="315" column="5" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" declline="315" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__editor_8h_1ad1eef779f2bbdb0ebb2496ed26491332" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gui_add_editor</definition>
        <argsstring>(kolibri_window *wnd, editor *e)</argsstring>
        <name>gui_add_editor</name>
        <param>
          <type><ref refid="structkolibri__window" kindref="compound">kolibri_window</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type>editor *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="318" column="20" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="318" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__editor_8h_1a664f10072a21dfe0731fcfe98032bc2b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>editor *</type>
        <definition>static editor * kolibri_new_editor</definition>
        <argsstring>(uint32_t x_w, uint32_t y_h, uint32_t font, uint32_t max_chars, void *editor_interlock)</argsstring>
        <name>kolibri_new_editor</name>
        <param>
          <type>uint32_t</type>
          <declname>x_w</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>y_h</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>font</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_chars</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>editor_interlock</declname>
        </param>
        <briefdescription>
<para>font - 0b10SSS 8x16 size multiply (SSS+1), 0xSSS - 6x9 multiply (SSS+1) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="323" column="22" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="323" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__editor_8h_1a91ca7312fd1d47e341df7013a121a91f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int editor_symbol_not_vis</definition>
        <argsstring>(editor *ed, struct editor_symbol *sym)</argsstring>
        <name>editor_symbol_not_vis</name>
        <param>
          <type>editor *</type>
          <declname>ed</declname>
        </param>
        <param>
          <type>struct editor_symbol *</type>
          <declname>sym</declname>
        </param>
        <briefdescription>
<para>return 1 if symbol is not visible (deleted or undo-ed) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="388" column="19" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="388" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__editor_8h_1a0636a38c1ce3835edae1777f3ad8476a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t editor_iterat_next</definition>
        <argsstring>(editor *ed, uint32_t idx)</argsstring>
        <name>editor_iterat_next</name>
        <param>
          <type>editor *</type>
          <declname>ed</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>returns next good symbol by index </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="394" column="24" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="394" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__editor_8h_1a17474f2ae788b2711ac2777845d1dc47" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>static char * editor_get_text</definition>
        <argsstring>(editor *ed)</argsstring>
        <name>editor_get_text</name>
        <param>
          <type>editor *</type>
          <declname>ed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" line="411" column="20" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h" bodystart="411" bodyend="424"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>KOLIBRI_EDITOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KOLIBRI_EDITOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kos32sys.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(êîëè÷åñòâî<sp/>ñèìâîëîâ<sp/>â<sp/>íîâîì<sp/>äîêóìåíòå<sp/>+<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TE_MAXCHARS<sp/>100002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ìàêñèìàëüíûé<sp/>ðàçìåð<sp/>ôàéëà<sp/>ñèíòàêñèñà</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TE_MAX_SYNTAX_FILESIZE<sp/>410000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>buffer<sp/>for<sp/>copy|paste</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TE_BUF_SIZE<sp/>4096</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*editor_callback)(void);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__attribute__((__packed__))<sp/>editor_symbol</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>c;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>+0<sp/>ñèìâîë</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>col;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>+1<sp/>öâåò</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>prev;<sp/></highlight><highlight class="comment">//<sp/><sp/>+2<sp/>èíäåêñ<sp/>ïðåäûäóùåãî</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>next;<sp/></highlight><highlight class="comment">//<sp/><sp/>+6<sp/>óêàçàòåëè<sp/>(èíäåêñ<sp/>ñëåäóþùåãî)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tc;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>+10<sp/>âðåì.<sp/>ñîçäàíèÿ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>td;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+14<sp/>âðåì.<sp/>óäàëåíèÿ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">};</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__attribute__((__packed__))</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>x_pos;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>y_pos;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>width;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>440</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>hight;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>150</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>w_pane;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>30<sp/>øèðèíà<sp/>ïàíåëè<sp/>â<sp/>îêíå,<sp/>width<sp/>of<sp/>left<sp/>pane<sp/>with<sp/>line<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>h_pane;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>25<sp/>âûñîòà<sp/>ïàíåëè<sp/>â<sp/>îêíå,<sp/>hight<sp/>of<sp/>top<sp/>pane<sp/>with<sp/>Rows,<sp/>Cols<sp/>Undo<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>width_sym;<sp/></highlight><highlight class="comment">//<sp/>9<sp/>øèðèíà<sp/>ñèìâîëà<sp/>(çíàêîìåñòà)<sp/>â<sp/>îêíå</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>hight_sym;<sp/></highlight><highlight class="comment">//<sp/>16<sp/>âûñîòà<sp/>ñèìâîëà<sp/>(çíàêîìåñòà)<sp/>â<sp/>îêíå</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>drag_m;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>âûäåëåíèå<sp/>îò<sp/>ìûøè</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>drag_k;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>âûäåëåíèå<sp/>îò<sp/>êëàâèàòóðû</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sel_x0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ñòðóêòóðà<sp/>âûäåëåíèÿ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sel_y0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sel_x1;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>sel_y1;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>seln_x0;<sp/></highlight><highlight class="comment">//<sp/>äîïîëíèòåëüíàÿ<sp/>ñòðóêòóðà<sp/>âûäåëåíèÿ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>seln_y0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>seln_x1;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>seln_y1;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">editor_symbol<sp/>*tex;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>memory<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">editor_symbol<sp/>*tex_1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>óêàçàòåëü<sp/>çà<sp/>ïîñëåäíèì<sp/>ñóùåñòâóþùèì<sp/>ñèìâîëîì<sp/>(êîíåö<sp/>ôàéëà)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">editor_symbol<sp/>*tex_end;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>end<sp/>memory<sp/>pointer<sp/>(óêàçàòåëü<sp/>çà<sp/>êîíöîì<sp/>âûäåëåííîãî<sp/>áóôåðà<sp/>äëÿ<sp/>òåêñòà)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cur_x;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>êîîðäèíàòà<sp/>x<sp/>êóðñîðà</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cur_y;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>êîîðäèíàòà<sp/>y<sp/>êóðñîðà</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>max_chars;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TE_MAXCHARS<sp/>;+86<sp/>ìàêñèìàëüíîå<sp/>÷èñëî<sp/>ñèìâîëîâ<sp/>â<sp/>îäíîì<sp/>äîêóìåíòå</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>count_colors_text;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>;+90<sp/>êîëè÷åñòâî<sp/>öâåòîâ<sp/>òåêñòà</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>count_key_words;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//+94<sp/>êîëëè÷åñòâî<sp/>êëþ÷åâûõ<sp/>ñëîâ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/>color_cursor;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0x808080<sp/>;+98<sp/>öâåò<sp/>êóðñîðà</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/>color_wnd_capt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0x80<sp/>;+102<sp/>öâåò<sp/>ïîëåé<sp/>âîêðóã<sp/>îêíà</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/>color_wnd_work;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0x0<sp/>;+106<sp/>öâåò<sp/>ôîíà<sp/>îêíà</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/>color_wnd_bord;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0xd0d0d0<sp/>;+110<sp/>öâåò<sp/>òåêñòà<sp/>íà<sp/>ïîëÿõ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/>color_select;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0x208080<sp/>;+114<sp/>öâåò<sp/>âûäåëåíèÿ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/>color_cur_text;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0xff0000<sp/>;+118<sp/>öâåò<sp/>ñèìâîëà<sp/>ïîä<sp/>êóðñîðîì</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/>color_wnd_text;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0xffff00<sp/>;+122<sp/>öâåò<sp/>òåêñòà<sp/>â<sp/>îêíå</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*syntax_file;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>óêàçàòåëü<sp/>íà<sp/>íà÷àëî<sp/>ôàéëà<sp/>ñèíòàêñèñà</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>syntax_file_size;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TE_MAX_SYNTAX_FILESIZE<sp/>;+130<sp/>ìàêñèìàëüíûé<sp/>ðàçìåð<sp/>ôàéëà<sp/>ñèíòàêñèñà</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*text_colors;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>óêàçàòåëü<sp/>íà<sp/>ìàññèâ<sp/>öâåòîâ<sp/>òåêñòà</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*help_text_f1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>óêàçàòåëü<sp/>íà<sp/>òåêñò<sp/>ñïðàâêè<sp/>(ïî<sp/>íàæàòèè<sp/>F1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>help_id;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-1<sp/>;+142<sp/>èäåíòèôèêàòîð<sp/>äëÿ<sp/>ñïðàâêè</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*key_words_data;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>óêàçàòåëü<sp/>íà<sp/>ñòðóêòóðû<sp/>êëþ÷åâûõ<sp/>ñëîâ<sp/>TexColViv</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tim_ch;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>êîëè÷åñòâî<sp/>èçìåíåíèé<sp/>â<sp/>ôàéëå</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tim_undo;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>êîëè÷åñòâî<sp/>îòìåíåííûõ<sp/>äåéñòâèé</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tim_ls;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>âðåìÿ<sp/>ïîñëåäíåãî<sp/>ñîõðàíåíèÿ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tim_co;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>âðåìÿ<sp/>ïîñëåäíåé<sp/>öâåòîâîé<sp/>ðàçìåòêè</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*el_focus;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>óêàçàòåëü<sp/>íà<sp/>ïåðåìåííóþ<sp/>ýëåìåíòà<sp/>â<sp/>ôîêóñå<sp/>pointer<sp/>to<sp/>pointer**</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>err_save;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>îøèáêà<sp/>ñîõðàíåíèÿ<sp/>ôàéëà</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>panel_id;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>íîìåð<sp/>îòêðûòîé<sp/>ïàíåëè</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>key_new;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ñèìâîë,<sp/>êîòîðûé<sp/>áóäåò<sp/>äîáàâëÿòñÿ<sp/>ñ<sp/>êëàâèàòóðû</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>symbol_new_line;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ascii<sp/>20<sp/>ñèìâîë<sp/>çàâåðøåíèÿ<sp/>ñòðîêè</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>scrollbar<sp/>*scr_w;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>âåðòèêàëüíûé<sp/>ñêðîëëèíã<sp/>!=<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>scrollbar<sp/>*scr_h;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ãîðèçîíòàëüíûé<sp/>ñêðîëëèíã<sp/>!=<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*arr_key_pos;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>óêàçàòåëü<sp/>íà<sp/>ìàññèâ<sp/>ïîçèöèé<sp/>êëþ÷åâûõ<sp/>ñëîâ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>óêàçàòåëü<sp/>íà<sp/>áóôåð<sp/>êîïèðîâàíèÿ/âñòàâêè<sp/>!=<sp/>NULL,<sp/>also<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer_find;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>óêàçàòåëü<sp/>íà<sp/>áóôåð<sp/>äëÿ<sp/>ïîèñêà<sp/>(sized<sp/>302)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>cur_ins;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>ðåæèì<sp/>ðàáîòû<sp/>êóðñîðà<sp/>(îáû÷íûé<sp/>èëè<sp/>çàìåíà)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>mode_color;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>ðåæèì<sp/>âûäåëåíèÿ<sp/>ñëîâ<sp/>öâåòîì<sp/>(0-âûêë.<sp/>1-âêë.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>mode_invis;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>ðåæèì<sp/>ïîêàçà<sp/>íåïå÷àòàåìûõ<sp/>ñèìâîëîâ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>gp_opt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>îïöèè<sp/>âîçâðàùàåìûå<sp/>ôóíêöèåé<sp/>ted_get_pos_by_cursor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>editor_callback<sp/>fun_on_key_ctrl_all;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>óêàçàòåëü<sp/>íà<sp/>ôóíêöèþ<sp/>âûçûâàåìóþ<sp/>ïðè<sp/>íàæàòèè<sp/>Ctrl+N,O,S,F,G,H,<sp/>can<sp/>be<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reserved_1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reserved_2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reserved_3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>buffer_size;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BUF_SIZE<sp/>ðàçìåð<sp/>áóôåðà<sp/>êîïèðîâàíèÿ/âñòàâêè</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>editor_callback<sp/>fun_find_err;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>óêàçàòåëü<sp/>íà<sp/>ôóíêöèþ<sp/>âûçûâàåìóþ<sp/>åñëè<sp/>ïîèñê<sp/>çàêîí÷èëñÿ<sp/>íåóäà÷íî</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>editor_callback<sp/>fun_init_synt_err;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unused<sp/>óêàçàòåëü<sp/>íà<sp/>ôóíêöèþ<sp/>âûçûâàåìóþ<sp/>ïðè<sp/>îøèáî÷íîì<sp/>îòêðûòèè<sp/>ôàéëà<sp/>ñèíòàêñèñà</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>editor_callback<sp/>fun_draw_panel_buttons;<sp/></highlight><highlight class="comment">//<sp/>óêàçàòåëü<sp/>íà<sp/>ôóíêöèþ<sp/>ðèñîâàíèÿ<sp/>ïàíåëè<sp/>ñ<sp/>êíîïêàìè</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>editor_callback<sp/>fun_draw_panels;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>óêàçàòåëü<sp/>íà<sp/>ôóíêöèþ<sp/>ðèñîâàíèÿ<sp/>ïàíåëè<sp/>ïîèñêà|çàìåíû|ïåðåõîäà|ñèíòàêñèñà</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>reserved_4;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>editor_callback<sp/>fun_save_err;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>óêàçàòåëü<sp/>íà<sp/>ôóíêöèþ<sp/>âûçûâàåìóþ<sp/>åñëè<sp/>ñîõðàíåíèå<sp/>ôàéëà<sp/>çàêîí÷èëîñü<sp/>íåóäà÷íî</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>increase_size;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>200<sp/>÷èñëî<sp/>ñèìâîëîâ<sp/>íà<sp/>êîòîðûå<sp/>áóäåò<sp/>óâå÷èâàòüñÿ<sp/>ïàìÿòü<sp/>ïðè<sp/>íåõâàòêå</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr_free_symb;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>èñïîëüçóåòñÿ<sp/>âíóòðè<sp/>ýëåìåíòà<sp/>äëÿ<sp/>óñêîðåíèÿ<sp/>âñòàâêè<sp/>òåêñòà</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>font_size;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>;+250<sp/>ìíîæèòåëü<sp/>äëÿ<sp/>ðàçìåðà<sp/>øðèôòà<sp/>//<sp/>binary<sp/>OR<sp/>mask<sp/>for<sp/>ECX<sp/>SysFn4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">}<sp/>editor;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">__attribute__((__packed__))<sp/>editor_color_item</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>word[40];<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ñëîâî<sp/>äëÿ<sp/>ïîäñâåòêè</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>f1_offset;<sp/></highlight><highlight class="comment">//<sp/>ñìåùåíèå<sp/>â<sp/>òàáëèöå<sp/>F1<sp/>ïîäñêàçîê</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>flags;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ôëàãè<sp/>èñïîëüçóåìûå<sp/>ïðè<sp/>âûäåëåíèè</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>endc;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ñèìâîë<sp/>êîíöà<sp/>âûäåëåíèÿ<sp/>(èñïîëüçóåòñÿ<sp/>ïðè<sp/>flags&amp;4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>escc;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ýêðàíèðóþùèé<sp/>ñèìâîë<sp/>(èñïîëüçóåòñÿ<sp/>ïðè<sp/>flags&amp;4)<sp/><sp/>ascii(34)<sp/>ïðèìåðû<sp/>ýêðàíèðîâàíèÿ<sp/>\r<sp/>\n<sp/>\t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>color;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>öâåò<sp/>ïî<sp/>òàáëèöå<sp/>öâåòîâ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="structeditor__syntax__file" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structeditor__syntax__file" kindref="compound">editor_syntax_file</ref></highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>count_colors_text;<sp/></highlight><highlight class="comment">//<sp/>êîë-âî<sp/>öâåòîâ<sp/>òåêñòà<sp/>dd<sp/>(text-color_wnd_text)/4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>count_key_words;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>êîë-âî<sp/>êëþ÷åâûõ<sp/>ñëîâ<sp/>dd<sp/>(f1-text)/48</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/>color_cursor;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dd<sp/>0xf1fcd0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/>color_wnd_capt;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dd<sp/>0x080808</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/>color_wnd_work;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dd<sp/>0x1C1C1C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/>color_wnd_bord;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dd<sp/>0xc0c0c0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/>color_select;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dd<sp/>0x3E3D32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/>color_cur_text;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dd<sp/>0x808080</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>color_t<sp/>color_wnd_text[];<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>òàáëèöà<sp/>öâåòîâ<sp/>ðàçìåðîì<sp/>count_colors_text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>editor_color_item[];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>òàáëèöà<sp/>êëþ÷åâûõ<sp/>ïîäñâå÷åííûõ<sp/>ñëîâ<sp/>ðàçìåðîì<sp/>count_key_words</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">};</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structeditor__syntax__file" kindref="compound">editor_syntax_file</ref><sp/>default_syntax<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>10,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>count_colors_text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>count_key_words<sp/>dd<sp/>(f1-text)/48,<sp/>minimum<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>0xf1fcd0,<sp/></highlight><highlight class="comment">//<sp/>color_cursor<sp/>dd<sp/>0xf1fcd0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>0x080808,<sp/></highlight><highlight class="comment">//<sp/>color_wnd_capt<sp/>dd<sp/>0x080808</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>0x1C1C1C,<sp/></highlight><highlight class="comment">//<sp/>color_wnd_work<sp/>dd<sp/>0x1C1C1C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>0xc0c0c0,<sp/></highlight><highlight class="comment">//<sp/>color_wnd_bord<sp/>dd<sp/>0xc0c0c0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>0x3E3D32,<sp/></highlight><highlight class="comment">//<sp/>color_select<sp/>dd<sp/>0x3E3D32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>0x808080,<sp/></highlight><highlight class="comment">//<sp/>color_cur_text<sp/>dd<sp/>0x808080</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{0xD0D0D0,<sp/>0xffff00,<sp/>0x00ff00,<sp/>0x00ffff,<sp/>0x808080,<sp/>0xff40ff,<sp/>0x4080ff,<sp/>0xff0000,<sp/>0x8080ff,<sp/>0x00ccff}};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>next<sp/>structure<sp/>must<sp/>follow<sp/>syntax<sp/>definition,<sp/>at<sp/>least<sp/>has<sp/>1<sp/>element<sp/>!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">editor_color_item<sp/>word1<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;siemargl&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>0,<sp/>0,<sp/>1<sp/></highlight><highlight class="comment">//<sp/>test<sp/>word<sp/>colored<sp/>as<sp/>1st<sp/>in<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>next<sp/>structure<sp/>preferably<sp/>follow<sp/>syntax<sp/>definition,<sp/>at<sp/>least<sp/>has<sp/>1<sp/>element<sp/>!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>f1_table[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;First\0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Last\0&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_draw)(editor<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_init_scroll_bars)(editor<sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="149"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_init_syntax_file)(editor<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_mouse)(editor<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_text_add)(editor<sp/>*,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>textlen,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="156"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_but_select_word)(editor<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="158"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_but_copy)(editor<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_but_paste)(editor<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_but_find)(editor<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_but_replace)(editor<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_but_sumb_upper)(editor<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_but_sumb_lover)(editor<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_but_convert_by_table)(editor<sp/>*,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*table)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int<sp/>(*ted_can_save)(editor<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_clear)(editor<sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>all)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_delete)(editor<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>editor_delete(editor<sp/>*ed)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>(*ted_delete)(ed);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>free(ed-&gt;scr_w);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>free(ed-&gt;scr_h);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>free(ed-&gt;buffer);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>free(ed-&gt;buffer_find);</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_init)(editor<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int<sp/>(*ted_is_select)(editor<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>control_keys</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>KM_SHIFT<sp/>=<sp/>0x00010000,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>KM_CTRL<sp/>=<sp/>0x00020000,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>KM_ALT<sp/>=<sp/>0x00040000,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>KM_NUMLOCK<sp/>=<sp/>0x00080000</highlight></codeline>
<codeline lineno="200"><highlight class="normal">};</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_key_asm)(editor<sp/>*,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*table,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>control)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((__stdcall__))<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>editor_keyboard(editor<sp/>*ed,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*table,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>control_keys<sp/>control,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__(</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;push<sp/>%4\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;push<sp/>%3\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;push<sp/>%2\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;call<sp/>*%1<sp/>\n\t&quot;</highlight><highlight class="normal"><sp/>::</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">(ch),</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">(ted_key_asm),<sp/></highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">(ed),<sp/></highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">(table),<sp/></highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">(control)<sp/>:);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__<sp/>(</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;nop<sp/>\n\t&quot;::&quot;a&quot;(ch):);</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ted_key_asm)(ed,<sp/>table,<sp/>control);</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_open_file_asm)(editor<sp/>*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fs_dirinfo<sp/>*,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fname)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>editor_openfile(editor<sp/>*ed,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*readbytes)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fs_dirinfo<sp/>di;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__(</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;push<sp/>%%edi<sp/>\n\t&quot;</highlight><highlight class="normal"><sp/>:::);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>(*ted_open_file_asm)(ed,<sp/>&amp;di,<sp/>fname);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__(</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;pop<sp/>%%edi<sp/>\n\t&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;=b&quot;</highlight><highlight class="normal">(*readbytes),<sp/></highlight><highlight class="stringliteral">&quot;=a&quot;</highlight><highlight class="normal">(ret)::);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_save_file_asm)(editor<sp/>*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fs_dirinfo<sp/>*,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fname)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>editor_savefile(editor<sp/>*ed,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fname)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">fs_dirinfo<sp/>di;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>(*ted_save_file_asm)(ed,<sp/>&amp;di,<sp/>fname);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ed-&gt;err_save;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_but_cut)(editor<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_but_undo)(editor<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_but_redo)(editor<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_but_reverse)(editor<sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*ted_text_colored_asm)()<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>editor_text_colored(editor<sp/>*ed)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__(</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;call<sp/>*%0<sp/>\n\t&quot;</highlight><highlight class="normal"><sp/>::</highlight><highlight class="stringliteral">&quot;m&quot;</highlight><highlight class="normal">(ted_text_colored_asm),<sp/></highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">(ed)<sp/>:);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/>get_control_keys(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>ctrl;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__(</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int<sp/>$0x40<sp/>\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;=a&quot;</highlight><highlight class="normal">(ctrl)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">(66),<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">(3));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctrl;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">};</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_keyboard_layout(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf)</highlight></codeline>
<codeline lineno="278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1ad74e24145535693721b73b3d7f315c45" kindref="member">lang</ref>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__(</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int<sp/>$0x40<sp/>\n\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;=a&quot;</highlight><highlight class="normal">(<ref refid="namespace_kolibri_lib_1_1_o_s_1ad74e24145535693721b73b3d7f315c45" kindref="member">lang</ref>)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">(26),<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">(2),<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">(opt),<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">(buf));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1ad74e24145535693721b73b3d7f315c45" kindref="member">lang</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">};</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal">__attribute__((__stdcall__))<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>editor_key(editor<sp/>*ed,<sp/>oskey_t<sp/>key)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/>callback<sp/>for<sp/>gui</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if(ed-&gt;el_focus<sp/>!=<sp/>ed)<sp/>return;<sp/><sp/>//<sp/>need<sp/>to<sp/>check<sp/>not<sp/>to<sp/>lose<sp/>keyb<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>control<sp/>=<sp/>get_control_keys();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>control_keys<sp/>ed_ctrl<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ly_opt<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(control<sp/>&amp;<sp/>3)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed_ctrl<sp/>|=<sp/>KM_SHIFT;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ly_opt<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(control<sp/>&amp;<sp/>0xC)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed_ctrl<sp/>|=<sp/>KM_CTRL;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(control<sp/>&amp;<sp/>0x30)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed_ctrl<sp/>|=<sp/>KM_ALT;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ly_opt<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(control<sp/>&amp;<sp/>0x80)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed_ctrl<sp/>|=<sp/>KM_NUMLOCK;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>conv_table[128];</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>get_keyboard_layout(ly_opt,<sp/>conv_table);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>editor_keyboard(ed,<sp/>conv_table,<sp/>ed_ctrl,<sp/>key.val);</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gui_add_editor(<ref refid="structkolibri__window" kindref="compound">kolibri_window</ref><sp/>*wnd,<sp/>editor<sp/>*e)</highlight></codeline>
<codeline lineno="319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>kolibri_window_add_element(wnd,<sp/>KOLIBRI_EDITOR,<sp/>e);</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>editor<sp/>*kolibri_new_editor(uint32_t<sp/>x_w,<sp/>uint32_t<sp/>y_h,<sp/>uint32_t<sp/>font,<sp/>uint32_t<sp/>max_chars,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*editor_interlock)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>editor<sp/>*ed<sp/>=<sp/>(editor<sp/>*)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(editor));</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;x_pos<sp/>=<sp/>x_w<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;width<sp/>=<sp/>x_w<sp/>&amp;<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;y_pos<sp/>=<sp/>y_h<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;hight<sp/>=<sp/>y_h<sp/>&amp;<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;w_pane<sp/>=<sp/>30;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;h_pane<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font<sp/>=<sp/>0x10;<sp/></highlight><highlight class="comment">//<sp/>default<sp/>16<sp/>=<sp/>8x16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_multipl<sp/>=<sp/>(font<sp/>&amp;<sp/>7)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;font_size<sp/>=<sp/>font<sp/>&lt;&lt;<sp/>24;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font<sp/>&amp;<sp/>0x10)<sp/></highlight><highlight class="comment">//<sp/>8x16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed-&gt;width_sym<sp/>=<sp/>8<sp/>*<sp/>font_multipl;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed-&gt;hight_sym<sp/>=<sp/>16<sp/>*<sp/>font_multipl;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>6x9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed-&gt;width_sym<sp/>=<sp/>6<sp/>*<sp/>font_multipl;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed-&gt;hight_sym<sp/>=<sp/>9<sp/>*<sp/>font_multipl;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>memory<sp/>sizing<sp/>for<sp/>text<sp/>&amp;<sp/>syntax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;max_chars<sp/>=<sp/>max_chars;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;increase_size<sp/>=<sp/>max_chars<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;syntax_file_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(default_syntax);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>//<sp/>loaded<sp/>auto<sp/>from<sp/>syntax</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed-&gt;color_cursor<sp/>=<sp/>0x808080;</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed-&gt;color_wnd_capt<sp/>=<sp/>0x80;</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed-&gt;color_wnd_bord<sp/>=<sp/>0xd0d0d0;</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed-&gt;color_select<sp/>=<sp/>0x208080;</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed-&gt;color_cur_text<sp/>=<sp/>0xff0000;</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed-&gt;color_wnd_text<sp/>=<sp/>0xffff00;</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;symbol_new_line<sp/>=<sp/>20;<sp/></highlight><highlight class="comment">//<sp/>ascii(20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;scr_w<sp/>=<sp/>kolibri_new_scrollbar_def(X_Y(0,<sp/>16),<sp/>X_Y(0,<sp/>0),<sp/>100,<sp/>30,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>cur_area<sp/>will<sp/>be<sp/>inited<sp/>ltr,<sp/>max<sp/>&amp;<sp/>pos<sp/>undef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;scr_h<sp/>=<sp/>kolibri_new_scrollbar_def(X_Y(0,<sp/>0),<sp/>X_Y(0,<sp/>16),<sp/>100,<sp/>30,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>cur_area<sp/>will<sp/>be<sp/>inited<sp/>ltr,<sp/>max<sp/>&amp;<sp/>pos<sp/>undef</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;buffer_size<sp/>=<sp/>TE_BUF_SIZE;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;buffer<sp/>=<sp/>malloc(TE_BUF_SIZE);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;buffer_find<sp/>=<sp/>malloc(TE_BUF_SIZE<sp/>/<sp/>8);<sp/></highlight><highlight class="comment">//<sp/>where<sp/>to<sp/>store<sp/>text<sp/>to<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;cur_ins<sp/>=<sp/>1;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>mode<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;mode_color<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>can<sp/>select<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;mode_invis<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>show<sp/>nonprinted<sp/>symbols</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;el_focus<sp/>=<sp/>editor_interlock;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>(*ted_init)(ed);<sp/></highlight><highlight class="comment">//<sp/>memory<sp/>allocation,<sp/>cleaning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;syntax_file<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)&amp;default_syntax;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>(*ted_init_syntax_file)(ed);<sp/></highlight><highlight class="comment">//<sp/>load<sp/>colors<sp/>and<sp/>syntax<sp/>highlight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;help_text_f1<sp/>=<sp/>f1_table;<sp/></highlight><highlight class="comment">//<sp/>override<sp/>if<sp/>not<sp/>aligned<sp/>immediately<sp/>after<sp/>syntax<sp/>words</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>ed-&gt;key_words_data<sp/>=<sp/>&amp;word1;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ed;</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>editor_symbol_not_vis(editor<sp/>*ed,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>editor_symbol<sp/>*sym)</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(sym-&gt;td<sp/>&amp;&amp;<sp/>sym-&gt;td<sp/>+<sp/>ed-&gt;tim_undo<sp/>&lt;=<sp/>ed-&gt;tim_ch)<sp/>||<sp/>(sym-&gt;tc<sp/>&gt;<sp/>ed-&gt;tim_ch<sp/>-<sp/>ed-&gt;tim_undo);</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/>editor_iterat_next(editor<sp/>*ed,<sp/>uint32_t<sp/>idx)</highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ed-&gt;tim_undo)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>ed-&gt;tex[idx].next;<sp/>i<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>(ed-&gt;tex[i].c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>||<sp/>editor_symbol_not_vis(ed,<sp/>ed-&gt;tex<sp/>+<sp/>i));<sp/>i<sp/>=<sp/>ed-&gt;tex[i].next)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>ed-&gt;tex[idx].next;<sp/>i<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>(ed-&gt;tex[i].c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>||<sp/>ed-&gt;tex[i].td);<sp/>i<sp/>=<sp/>ed-&gt;tex[i].next)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>malloc&apos;ed<sp/>mem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*editor_get_text(editor<sp/>*ed)</highlight></codeline>
<codeline lineno="412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf<sp/>=<sp/>malloc(ed-&gt;max_chars),<sp/>*pc<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pc)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>*pc++<sp/>=<sp/>ed-&gt;tex[0].c;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>ed-&gt;tex[0].next;<sp/>i;<sp/>i<sp/>=<sp/>editor_iterat_next(ed,<sp/>i))</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pc++<sp/>=<sp/>ed-&gt;tex[i].c;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>*pc++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf;</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="427"><highlight class="comment">char*<sp/><sp/>editor_get_text20(editor*<sp/>ed)</highlight></codeline>
<codeline lineno="428"><highlight class="comment">{</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/><sp/><sp/><sp/>char<sp/><sp/><sp/><sp/>*buf<sp/>=<sp/>malloc(ed-&gt;max_chars),<sp/>*pc<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(!pc)<sp/>return<sp/>NULL;</highlight></codeline>
<codeline lineno="431"><highlight class="comment"></highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/><sp/>i<sp/>=<sp/>ed-&gt;tex[0].next,<sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(;<sp/>i<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>c<sp/>&lt;<sp/>30;<sp/>c++,<sp/>i<sp/>=<sp/>ed-&gt;tex[i].next)<sp/>*pc++<sp/>=<sp/>ed-&gt;tex[i].c;</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/><sp/><sp/><sp/>*pc++<sp/>=<sp/>&apos;\0&apos;;</highlight></codeline>
<codeline lineno="435"><highlight class="comment"></highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>buf;</highlight></codeline>
<codeline lineno="437"><highlight class="comment">}</highlight></codeline>
<codeline lineno="438"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>KOLIBRI_EDITOR_H</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_editor.h"/>
  </compounddef>
</doxygen>
