<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="ru">
  <compounddef id="namespace_kolibri_lib_1_1graphic" kind="namespace" language="C++">
    <compoundname>KolibriLib::graphic</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="graphic_8hpp_1a072f0ceff502887dbd4524b26fa5bee6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::graphic::DrawLine</definition>
        <argsstring>(const UI::Coord &amp;coord, const UI::Coord &amp;b, const Colors::Color &amp;color=OS::sys_color_table.work_graph)</argsstring>
        <name>DrawLine</name>
        <qualifiedname>KolibriLib::graphic::DrawLine</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>color</declname>
          <defval>OS::sys_color_table.work_graph</defval>
        </param>
        <briefdescription>
<para>Нарисовать линию </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>точка первая </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>точка вторая </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет линии </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" line="25" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="graphic_8hpp_1a857e44c86497a336a228613c89032c0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::graphic::DrawLine</definition>
        <argsstring>(const UI::Coord &amp;coord, unsigned lenght, unsigned short angle, const Colors::Color &amp;color=OS::sys_color_table.work_graph)</argsstring>
        <name>DrawLine</name>
        <qualifiedname>KolibriLib::graphic::DrawLine</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>lenght</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>color</declname>
          <defval>OS::sys_color_table.work_graph</defval>
        </param>
        <briefdescription>
<para>Нарисовать линию </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Координата от которой рисуется линия </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lenght</parametername>
</parameternamelist>
<parameterdescription>
<para>Длина линии </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>Угол </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет линии </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" line="35" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="graphic_8hpp_1ae8851911137b9ea5f8f0cf523c1f26f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::graphic::DrawPixel</definition>
        <argsstring>(const UI::Coord &amp;position, const Colors::Color &amp;color=OS::sys_color_table.work_graph)</argsstring>
        <name>DrawPixel</name>
        <qualifiedname>KolibriLib::graphic::DrawPixel</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>color</declname>
          <defval>OS::sys_color_table.work_graph</defval>
        </param>
        <briefdescription>
<para>Закрасить пиксель точку </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>координаты </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" line="43" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="graphic_8hpp_1a1604311e0402bb0a3e0701bfb3d3ff85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::graphic::DrawCircle</definition>
        <argsstring>(const UI::Coord &amp;coord, const unsigned &amp;Radius, const unsigned &amp;detalization=36, const Colors::Color &amp;color=OS::sys_color_table.work_graph)</argsstring>
        <name>DrawCircle</name>
        <qualifiedname>KolibriLib::graphic::DrawCircle</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>const unsigned &amp;</type>
          <declname>Radius</declname>
        </param>
        <param>
          <type>const unsigned &amp;</type>
          <declname>detalization</declname>
          <defval>36</defval>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>color</declname>
          <defval>OS::sys_color_table.work_graph</defval>
        </param>
        <briefdescription>
<para>Нарисовать окружность </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Координаты центра </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Radius</parametername>
</parameternamelist>
<parameterdescription>
<para>радиус окружности </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>detalization</parametername>
</parameternamelist>
<parameterdescription>
<para>Детализация прорисовки окружности (то на сколько круг круглый) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
<sect4 id="graphic_8hpp_1Круг">
<title>рисуется по detalization линий. Да-да если Детализация = 4, то круг это квадрат.</title></sect4>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" line="54" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" bodystart="140" bodyend="156" declfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" declline="54" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="graphic_8hpp_1a2ce90be8f834ed720bfeadaa63b1b54e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::graphic::DrawRectangleFill</definition>
        <argsstring>(UI::Coord position, UI::Size size, Colors::Color color=OS::sys_color_table.work_graph)</argsstring>
        <name>DrawRectangleFill</name>
        <qualifiedname>KolibriLib::graphic::DrawRectangleFill</qualifiedname>
        <param>
          <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Size</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref></type>
          <declname>color</declname>
          <defval>OS::sys_color_table.work_graph</defval>
        </param>
        <briefdescription>
<para>Нарисовать закрашенный прямоугольник </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>позиция левого верхнего угла </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Размеры </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" line="60" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" bodystart="60" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="graphic_8hpp_1a7a149c3232da07b64885a7fed802dfa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::graphic::DrawCircleFill</definition>
        <argsstring>(const UI::Coord &amp;coord, const unsigned &amp;Radius, const unsigned &amp;detalization=36, const Colors::Color &amp;color=OS::sys_color_table.work_graph)</argsstring>
        <name>DrawCircleFill</name>
        <qualifiedname>KolibriLib::graphic::DrawCircleFill</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>const unsigned &amp;</type>
          <declname>Radius</declname>
        </param>
        <param>
          <type>const unsigned &amp;</type>
          <declname>detalization</declname>
          <defval>36</defval>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>color</declname>
          <defval>OS::sys_color_table.work_graph</defval>
        </param>
        <briefdescription>
<para>Нарисовать круг(закрашенный) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Координаты центра </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Radius</parametername>
</parameternamelist>
<parameterdescription>
<para>Радиус круга </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>detalization</parametername>
</parameternamelist>
<parameterdescription>
<para>Детализация круга(то на сколько круг круглый) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" line="77" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" bodystart="158" bodyend="172" declfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" declline="77" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="graphic_8hpp_1a5d38c0cc28f1182217c9f4ede59fbb90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::graphic::DrawPoint</definition>
        <argsstring>(const UI::Coord &amp;position, const unsigned &amp;size, const Colors::Color &amp;color=OS::sys_color_table.work_graph, bool fill=false)</argsstring>
        <name>DrawPoint</name>
        <qualifiedname>KolibriLib::graphic::DrawPoint</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const unsigned &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>color</declname>
          <defval>OS::sys_color_table.work_graph</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>fill</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Нарисовать точку </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>Координаты </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Радиус точки в рx </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fill</parametername>
</parameternamelist>
<parameterdescription>
<para>Закрашенная/Выколотая точка </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" line="84" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" bodystart="174" bodyend="188" declfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" declline="84" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="graphic_8hpp_1acb633ad2966876f9f469f43521965c96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::graphic::DrawRectangleLines</definition>
        <argsstring>(const UI::Coord &amp;a, const UI::Coord &amp;b, const Colors::Color &amp;color=OS::sys_color_table.work_graph)</argsstring>
        <name>DrawRectangleLines</name>
        <qualifiedname>KolibriLib::graphic::DrawRectangleLines</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>color</declname>
          <defval>OS::sys_color_table.work_graph</defval>
        </param>
        <briefdescription>
<para>Нарисовать прямоугольник </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Точка в левом верхнем углу </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Точка в правом нижнем углу </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" line="90" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" bodystart="90" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="graphic_8hpp_1a6aee408b4ff8336b20e1561c36b46bd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::graphic::DrawTriangle</definition>
        <argsstring>(const UI::Coord &amp;a, const UI::Coord &amp;b, const UI::Coord &amp;c, const Colors::Color &amp;color=OS::sys_color_table.work_graph)</argsstring>
        <name>DrawTriangle</name>
        <qualifiedname>KolibriLib::graphic::DrawTriangle</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>color</declname>
          <defval>OS::sys_color_table.work_graph</defval>
        </param>
        <briefdescription>
<para>Нарисовать треугольник </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>первая точка </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>вторая точка </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>третья точка </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>цвет линий </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" line="103" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" bodystart="103" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="graphic_8hpp_1a9bf5496af608adf400343912916efdf2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref></type>
        <definition>Colors::Color KolibriLib::graphic::ReadPoint</definition>
        <argsstring>(const UI::Coord Point)</argsstring>
        <name>ReadPoint</name>
        <qualifiedname>KolibriLib::graphic::ReadPoint</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref></type>
          <declname>Point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" line="113" column="22" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" bodystart="113" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="graphic_8hpp_1a79b5fb3b3e4daec7e8479e200f905417" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>rgb_t *</type>
        <definition>rgb_t * KolibriLib::graphic::ReadArea</definition>
        <argsstring>(const UI::Coord &amp;coord, const UI::Size &amp;size)</argsstring>
        <name>ReadArea</name>
        <qualifiedname>KolibriLib::graphic::ReadArea</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Size</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" line="125" column="14" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" bodystart="125" bodyend="137"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp" line="19" column="1"/>
  </compounddef>
</doxygen>
