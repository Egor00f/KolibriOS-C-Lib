<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="namespace_kolibri_lib_1_1graphic" kind="namespace" language="C++">
    <compoundname>KolibriLib::graphic</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="graphic_8hpp_1a642f223d563b2d979d8ca05471bab251" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::graphic::DrawLine</definition>
        <argsstring>(const UI::Coord &amp;coord, const UI::Coord &amp;b, const Color::Color &amp;color=OS::sys_color_table.work_graph)</argsstring>
        <name>DrawLine</name>
        <qualifiedname>KolibriLib::graphic::DrawLine</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_color_1_1_color" kindref="compound">Color::Color</ref> &amp;</type>
          <declname>color</declname>
          <defval>OS::sys_color_table.work_graph</defval>
        </param>
        <briefdescription>
<para>Нарисовать линию </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>точка первая </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>точка вторая </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет линии </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" line="24" column="21" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" bodystart="80" bodyend="83" declfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" declline="24" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="graphic_8hpp_1afea505956dca3b42f29c2bc1409bda60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::graphic::DrawLine</definition>
        <argsstring>(const UI::Coord &amp;coord, unsigned lenght, unsigned short angle, const Color::Color &amp;color=OS::sys_color_table.work_graph)</argsstring>
        <name>DrawLine</name>
        <qualifiedname>KolibriLib::graphic::DrawLine</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>lenght</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_color_1_1_color" kindref="compound">Color::Color</ref> &amp;</type>
          <declname>color</declname>
          <defval>OS::sys_color_table.work_graph</defval>
        </param>
        <briefdescription>
<para>Нарисовать линию </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Координата от которой рисуется линия </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lenght</parametername>
</parameternamelist>
<parameterdescription>
<para>Длина линии </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>Угол </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет линии </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" line="32" column="21" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" bodystart="85" bodyend="88" declfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" declline="32" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="graphic_8hpp_1a3b3e6d95c0740101bcbef7f938c92d52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::graphic::DrawPixel</definition>
        <argsstring>(const UI::Coord &amp;position, const Color::Color &amp;color=OS::sys_color_table.work_graph)</argsstring>
        <name>DrawPixel</name>
        <qualifiedname>KolibriLib::graphic::DrawPixel</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_color_1_1_color" kindref="compound">Color::Color</ref> &amp;</type>
          <declname>color</declname>
          <defval>OS::sys_color_table.work_graph</defval>
        </param>
        <briefdescription>
<para>Закрасить пиксель точку </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>координаты </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" line="37" column="21" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" bodystart="90" bodyend="93" declfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" declline="37" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="graphic_8hpp_1ab77171dca8e5fd9adbde62d4cb0a8d8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::graphic::DrawCircle</definition>
        <argsstring>(const UI::Coord &amp;coord, unsigned Radius, unsigned detalization=36, const Color::Color &amp;color=OS::sys_color_table.work_graph)</argsstring>
        <name>DrawCircle</name>
        <qualifiedname>KolibriLib::graphic::DrawCircle</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>Radius</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>detalization</declname>
          <defval>36</defval>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_color_1_1_color" kindref="compound">Color::Color</ref> &amp;</type>
          <declname>color</declname>
          <defval>OS::sys_color_table.work_graph</defval>
        </param>
        <briefdescription>
<para>Нарисовать окружность </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Координаты центра </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Radius</parametername>
</parameternamelist>
<parameterdescription>
<para>радиус окружности </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>detalization</parametername>
</parameternamelist>
<parameterdescription>
<para>Детализация прорисовки окружности (то на сколько круг круглый) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
<sect4 id="graphic_8hpp_1Круг">
<title>рисуется по detalization линий. Да-да если Детализация = 4, то круг это квадрат.</title></sect4>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" line="45" column="14" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" bodystart="95" bodyend="111" declfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" declline="45" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="graphic_8hpp_1a496ee10b600a88273d178bf7a2e5d526" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::graphic::DrawRectangleFill</definition>
        <argsstring>(UI::Coord position, UI::Size size, Color::Color color=OS::sys_color_table.work_graph)</argsstring>
        <name>DrawRectangleFill</name>
        <qualifiedname>KolibriLib::graphic::DrawRectangleFill</qualifiedname>
        <param>
          <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref></type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Size</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="union_kolibri_lib_1_1_color_1_1_color" kindref="compound">Color::Color</ref></type>
          <declname>color</declname>
          <defval>OS::sys_color_table.work_graph</defval>
        </param>
        <briefdescription>
<para>Нарисовать закрашенный прямоугольник </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>позиция левого верхнего угла </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Размеры </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" line="51" column="14" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" bodystart="129" bodyend="135" declfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" declline="51" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="graphic_8hpp_1a9b5b954d46002e5d01e007dc866e98b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::graphic::DrawCircleFill</definition>
        <argsstring>(const UI::Coord &amp;coord, unsigned Radius, unsigned detalization=36, const Color::Color &amp;color=OS::sys_color_table.work_graph)</argsstring>
        <name>DrawCircleFill</name>
        <qualifiedname>KolibriLib::graphic::DrawCircleFill</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>Radius</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>detalization</declname>
          <defval>36</defval>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_color_1_1_color" kindref="compound">Color::Color</ref> &amp;</type>
          <declname>color</declname>
          <defval>OS::sys_color_table.work_graph</defval>
        </param>
        <briefdescription>
<para>Нарисовать круг(закрашенный) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Координаты центра </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Radius</parametername>
</parameternamelist>
<parameterdescription>
<para>Радиус круга </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>detalization</parametername>
</parameternamelist>
<parameterdescription>
<para>Детализация круга(то на сколько круг круглый) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" line="58" column="14" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" bodystart="113" bodyend="127" declfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" declline="58" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="graphic_8hpp_1a9992f2c0889eb59fcc9caa6a37845592" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::graphic::DrawPoint</definition>
        <argsstring>(const UI::Coord &amp;position, const unsigned &amp;size, const Color::Color &amp;color=OS::sys_color_table.work_graph, bool fill=false)</argsstring>
        <name>DrawPoint</name>
        <qualifiedname>KolibriLib::graphic::DrawPoint</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const unsigned &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_color_1_1_color" kindref="compound">Color::Color</ref> &amp;</type>
          <declname>color</declname>
          <defval>OS::sys_color_table.work_graph</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>fill</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Нарисовать точку </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>Координаты </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Радиус точки в рx </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fill</parametername>
</parameternamelist>
<parameterdescription>
<para>Закрашенная/Выколотая точка </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" line="65" column="14" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" bodystart="137" bodyend="151" declfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" declline="65" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="graphic_8hpp_1ae13845caa3ef095c2c28ffe77dc33493" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::graphic::DrawRectangleLines</definition>
        <argsstring>(const UI::Coord &amp;a, const UI::Coord &amp;b, const Color::Color &amp;color=OS::sys_color_table.work_graph)</argsstring>
        <name>DrawRectangleLines</name>
        <qualifiedname>KolibriLib::graphic::DrawRectangleLines</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_color_1_1_color" kindref="compound">Color::Color</ref> &amp;</type>
          <declname>color</declname>
          <defval>OS::sys_color_table.work_graph</defval>
        </param>
        <briefdescription>
<para>Нарисовать прямоугольник </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Точка в левом верхнем углу </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Точка в правом нижнем углу </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" line="71" column="21" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" bodystart="153" bodyend="159" declfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" declline="71" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="graphic_8hpp_1ac5d8e90de3c8ef37809f166a9bdbafb2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::graphic::DrawTriangle</definition>
        <argsstring>(const UI::Coord &amp;a, const UI::Coord &amp;b, const UI::Coord &amp;c, const Color::Color &amp;color=OS::sys_color_table.work_graph)</argsstring>
        <name>DrawTriangle</name>
        <qualifiedname>KolibriLib::graphic::DrawTriangle</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_color_1_1_color" kindref="compound">Color::Color</ref> &amp;</type>
          <declname>color</declname>
          <defval>OS::sys_color_table.work_graph</defval>
        </param>
        <briefdescription>
<para>Нарисовать треугольник </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>первая точка </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>вторая точка </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>третья точка </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>цвет линий </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" line="78" column="21" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" bodystart="161" bodyend="166" declfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" declline="78" declcolumn="21"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp" line="18" column="5"/>
  </compounddef>
</doxygen>
