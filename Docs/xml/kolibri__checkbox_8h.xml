<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="ru">
  <compounddef id="kolibri__checkbox_8h" kind="file" language="C++">
    <compoundname>kolibri_checkbox.h</compoundname>
    <includes refid="kos32sys_8h" local="no">kos32sys.h</includes>
    <includes refid="os_8hpp" local="no">kolibriLib/system/os.hpp</includes>
    <includedby refid="kolibri__gui__elements_8h" local="yes">C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui_elements.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_checkbox.h</label>
        <link refid="kolibri__checkbox_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kos32sys.h</label>
        <link refid="kos32sys_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>kolibriLib/color.hpp</label>
        <link refid="color_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>kolibriLib/system/filesystem.hpp</label>
        <link refid="filesystem_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>kolibriLib/system/os.hpp</label>
        <link refid="os_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdarg.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
      <node id="10">
        <label>sys/ksys.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_checkbox.h</label>
        <link refid="kolibri__checkbox_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui.h</label>
        <link refid="kolibri__gui_8h_source"/>
      </node>
      <node id="2">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui_elements.h</label>
        <link refid="kolibri__gui__elements_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structcheck__box" prot="public">check_box</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="kolibri__checkbox_8h_1a8b55ea2892ba576f85a1a061851ca723" prot="public" static="no" strong="no">
        <type></type>
        <name>CHECKBOX_FLAGS</name>
        <enumvalue id="kolibri__checkbox_8h_1a8b55ea2892ba576f85a1a061851ca723a69941a852d0b29f22ea158789a3ceb8a" prot="public">
          <name>CHECKBOX_IS_SET</name>
          <initializer>= 0x00000002</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_checkbox.h" line="17" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_checkbox.h" bodystart="17" bodyend="20"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="kolibri__checkbox_8h_1aeb6a268f36e9189cc25b437dd271c1b7" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* check_box_draw2) (check_box *) __attribute__((__stdcall__))</definition>
        <argsstring>)(check_box *) __attribute__((__stdcall__))</argsstring>
        <name>check_box_draw2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_checkbox.h" line="36" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_checkbox.h" declline="36" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__checkbox_8h_1a224d41e2fdf9654759808ba4eefd3db0" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* check_box_mouse2) (check_box *) __attribute__((__stdcall__))</definition>
        <argsstring>)(check_box *) __attribute__((__stdcall__))</argsstring>
        <name>check_box_mouse2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_checkbox.h" line="37" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_checkbox.h" declline="37" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__checkbox_8h_1aae5cf614e724a972918ac6a9d5a1f27e" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* init_checkbox2) (check_box *) __attribute__((__stdcall__))</definition>
        <argsstring>)(check_box *) __attribute__((__stdcall__))</argsstring>
        <name>init_checkbox2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_checkbox.h" line="38" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_checkbox.h" declline="38" declcolumn="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="kolibri__checkbox_8h_1ad161256539d1685ec2b5592157817a23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcheck__box" kindref="compound">check_box</ref> *</type>
        <definition>check_box * kolibri_new_check_box</definition>
        <argsstring>(unsigned int tlx, unsigned int tly, unsigned int sizex, unsigned int sizey, char *label_text)</argsstring>
        <name>kolibri_new_check_box</name>
        <param>
          <type>unsigned int</type>
          <declname>tlx</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>tly</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>sizex</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>sizey</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>label_text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_checkbox.h" line="40" column="11" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_checkbox.h" bodystart="40" bodyend="55"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>KOLIBRI_CHECKBOX_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KOLIBRI_CHECKBOX_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kos32sys.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kolibriLib/system/os.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="11"><highlight class="comment">ch_flag_en<sp/>-<sp/>����<sp/>��������������<sp/>���<sp/>�����</highlight></codeline>
<codeline lineno="12"><highlight class="comment">ch_flag_top<sp/>-<sp/>����<sp/>������������<sp/>������<sp/>������</highlight></codeline>
<codeline lineno="13"><highlight class="comment">ch_flag_middle<sp/>-<sp/>����<sp/>������������<sp/>������<sp/>�<sp/>������</highlight></codeline>
<codeline lineno="14"><highlight class="comment">ch_flag_bottom<sp/>-<sp/>����<sp/>������������<sp/>������<sp/>�<sp/>����<sp/>�.�.<sp/>��<sp/>���������<sp/>�����������<sp/>��������<sp/>�����</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>CHECKBOX_FLAGS<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>CHECKBOX_IS_SET<sp/>=<sp/>0x00000002</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>more<sp/>flags<sp/>later<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal">};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="structcheck__box" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_s;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_s;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch_text_margin;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>color;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>border_color;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>text_color;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Users<sp/>can<sp/>use<sp/>members<sp/>above<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size_of_str;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}<ref refid="structcheck__box" kindref="compound">check_box</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*check_box_draw2)(<ref refid="structcheck__box" kindref="compound">check_box</ref><sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*check_box_mouse2)(<ref refid="structcheck__box" kindref="compound">check_box</ref><sp/>*)__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*init_checkbox2)(<ref refid="structcheck__box" kindref="compound">check_box</ref><sp/>*)__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="structcheck__box" kindref="compound">check_box</ref>*<sp/>kolibri_new_check_box(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tlx,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tly,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizex,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizey,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*label_text)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="structcheck__box" kindref="compound">check_box</ref>*<sp/>new_checkbox<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="structcheck__box" kindref="compound">check_box</ref><sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structcheck__box" kindref="compound">check_box</ref>));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>new_checkbox<sp/>-&gt;<sp/>left_s<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(tlx<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>sizex;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>new_checkbox<sp/>-&gt;<sp/>top_s<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(tly<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>sizey;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>new_checkbox<sp/>-&gt;<sp/>ch_text_margin<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>new_checkbox<sp/>-&gt;<sp/>color<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().work_area<sp/>|<sp/>0x80000000;<sp/></highlight><highlight class="comment">//<sp/>0xFFFFFFFF;<sp/>//<sp/>0x80AABBCC,<sp/>31-bit<sp/>mus<sp/>be<sp/>set<sp/>asciiz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>new_checkbox<sp/>-&gt;<sp/>border_color<sp/><sp/><sp/>=<sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().work_graph;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>new_checkbox-&gt;text_color<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().work_text;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>new_checkbox<sp/>-&gt;<sp/>text<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>label_text;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>new_checkbox<sp/>-&gt;<sp/>flags<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x00000008;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>(*init_checkbox2)(new_checkbox);<sp/></highlight><highlight class="comment">//<sp/>count<sp/>text<sp/>width<sp/>for<sp/>mouse<sp/>action<sp/>and<sp/>set<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_checkbox;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>KOLIBRI_CHECKBOX_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_checkbox.h"/>
  </compounddef>
</doxygen>
