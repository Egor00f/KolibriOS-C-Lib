<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="screen_8cpp" kind="file" language="C++">
    <compoundname>screen.cpp</compoundname>
    <includes refid="screen_8hpp" local="yes">screen.hpp</includes>
    <incdepgraph>
      <node id="5">
        <label>color.hpp</label>
        <link refid="color_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/screen.cpp</label>
        <link refid="screen_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>screen.hpp</label>
        <link refid="screen_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>thread.hpp</label>
        <link refid="thread_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>types.hpp</label>
        <link refid="types_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="3">
        <label>sys/ksys.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;screen.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_kolibri_lib" kindref="compound">KolibriLib</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><ref refid="struct_kolibri_lib_1_1point" kindref="compound">point&lt;unsigned&gt;</ref><sp/><ref refid="namespace_kolibri_lib_1a8ef3c016e993ed0a7c2d110d4adae88e" kindref="member">KolibriLib::GetScreenSize</ref>()</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>ksys_pos_t<sp/>a<sp/>=<sp/>_ksys_screen_size();</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct_kolibri_lib_1_1point" kindref="compound">point&lt;unsigned&gt;</ref>){a.x,<sp/>a.y};</highlight></codeline>
<codeline lineno="9"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="namespace_kolibri_lib_1_1_thread_1ac583b7a88e5bddeab393a41bf9929c51" kindref="member">Thread::Slot</ref><sp/><ref refid="namespace_kolibri_lib_1a5e62483a2a86b6d4f196cc92de3b9c55" kindref="member">KolibriLib::ScreenPointAffiliation</ref>(<ref refid="struct_kolibri_lib_1_1point" kindref="compound">point&lt;unsigned&gt;</ref><sp/>POINT)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_kolibri_lib_1_1_thread_1ac583b7a88e5bddeab393a41bf9929c51" kindref="member">Thread::Slot</ref><sp/>s;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__<sp/>(</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int<sp/>$0x40&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight><highlight class="stringliteral">&quot;=a&quot;</highlight><highlight class="normal">(s)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">(34),<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">(POINT.x),<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">(POINT.y)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><ref refid="struct_kolibri_lib_1_1point" kindref="compound">point&lt;unsigned&gt;</ref><sp/><ref refid="namespace_kolibri_lib_1aee258b1d924d917faae1e8dff6ccaeeb" kindref="member">KolibriLib::GetBackgroundImageSize</ref>()</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_kolibri_lib_1_1point" kindref="compound">point&lt;unsigned&gt;</ref><sp/>p;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>asm_inline(</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int<sp/>$0x40&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight><highlight class="stringliteral">&quot;=a&quot;</highlight><highlight class="normal">(a)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">(39),<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">(1)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="struct_kolibri_lib_1_1point_1add46882563c402c224b23c85049f7f34" kindref="member">x</ref><sp/>=<sp/>(a<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>p.<ref refid="struct_kolibri_lib_1_1point_1a2552f28a0a4bd6d41b0b75c7e3dec4e0" kindref="member">y</ref><sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref><sp/><ref refid="namespace_kolibri_lib_1a59afa938f04ee58f39092deac6fbd8df" kindref="member">KolibriLib::ReadBackgroungImagePoint</ref>(<ref refid="struct_kolibri_lib_1_1point" kindref="compound">point&lt;unsigned&gt;</ref><sp/>Point)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref><sp/>c;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Смещение</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>s<sp/>=<sp/><ref refid="namespace_kolibri_lib_1aee258b1d924d917faae1e8dff6ccaeeb" kindref="member">GetBackgroundImageSize</ref>().<ref refid="struct_kolibri_lib_1_1point_1add46882563c402c224b23c85049f7f34" kindref="member">x</ref><sp/>*<sp/>(Point.<ref refid="struct_kolibri_lib_1_1point_1a2552f28a0a4bd6d41b0b75c7e3dec4e0" kindref="member">y</ref><sp/>-1)<sp/>+<sp/>Point.<ref refid="struct_kolibri_lib_1_1point_1add46882563c402c224b23c85049f7f34" kindref="member">x</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//я<sp/>думаю,<sp/>что<sp/>изображение<sp/>это<sp/>двумерный<sp/>массив</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>asm_inline(</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int<sp/>$0x40&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight><highlight class="stringliteral">&quot;=a&quot;</highlight><highlight class="normal">(c)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">(39),<sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">(2),<sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">(s)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/screen.cpp"/>
  </compounddef>
</doxygen>
