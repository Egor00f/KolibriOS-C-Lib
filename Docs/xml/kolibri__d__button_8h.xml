<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="ru">
  <compounddef id="kolibri__d__button_8h" kind="file" language="C++">
    <compoundname>kolibri_d_button.h</compoundname>
    <includes refid="kos32sys_8h" local="no">kos32sys.h</includes>
    <includedby refid="kolibri__gui__elements_8h" local="yes">C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui_elements.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_d_button.h</label>
        <link refid="kolibri__d__button_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kos32sys.h</label>
        <link refid="kos32sys_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdarg.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_d_button.h</label>
        <link refid="kolibri__d__button_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui.h</label>
        <link refid="kolibri__gui_8h_source"/>
      </node>
      <node id="2">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui_elements.h</label>
        <link refid="kolibri__gui__elements_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structpict__button" prot="public">pict_button</innerclass>
    <sectiondef kind="var">
      <memberdef kind="variable" id="kolibri__d__button_8h_1aceb0a7718b060a42468a159adc5b82b0" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* dynamic_button_draw) (pict_button *) __attribute__((__stdcall__))</definition>
        <argsstring>)(pict_button *) __attribute__((__stdcall__))</argsstring>
        <name>dynamic_button_draw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_d_button.h" line="51" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_d_button.h" declline="51" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="kolibri__d__button_8h_1afb214d4e529e8f26a90d92262517b1ff" prot="public" static="no" extern="yes" mutable="no">
        <type>void(*</type>
        <definition>void(* dynamic_button_mouse) (pict_button *) __attribute__((__stdcall__))</definition>
        <argsstring>)(pict_button *) __attribute__((__stdcall__))</argsstring>
        <name>dynamic_button_mouse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_d_button.h" line="52" column="8" declfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_d_button.h" declline="52" declcolumn="8"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="kolibri__d__button_8h_1a5abbd83160618145152f9052d1ac01ef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structpict__button" kindref="compound">pict_button</ref> *</type>
        <definition>static pict_button * kolibri_pict_button</definition>
        <argsstring>(pict_button *b, uint32_t x_w, uint32_t y_h, void *active_pict, void *passive_pict, void *pressed_pict, uint32_t bpp, void *palette, int32_t offset_line)</argsstring>
        <name>kolibri_pict_button</name>
        <param>
          <type><ref refid="structpict__button" kindref="compound">pict_button</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>x_w</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>y_h</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>active_pict</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>passive_pict</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pressed_pict</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bpp</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>palette</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>offset_line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_d_button.h" line="24" column="27" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_d_button.h" bodystart="24" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__d__button_8h_1a0cba7b73b04277067bf496105b3830b8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structpict__button" kindref="compound">pict_button</ref> *</type>
        <definition>static pict_button * kolibri_new_pict_button</definition>
        <argsstring>(uint32_t x_w, uint32_t y_h, void *active_pict, void *passive_pict, void *pressed_pict, uint32_t bpp, void *palette, int32_t offset_line)</argsstring>
        <name>kolibri_new_pict_button</name>
        <param>
          <type>uint32_t</type>
          <declname>x_w</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>y_h</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>active_pict</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>passive_pict</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pressed_pict</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>bpp</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>palette</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>offset_line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_d_button.h" line="39" column="27" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_d_button.h" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__d__button_8h_1ab218fc25e97d02fa268d85f9c789f183" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gui_add_pict_button</definition>
        <argsstring>(kolibri_window *wnd, pict_button *db)</argsstring>
        <name>gui_add_pict_button</name>
        <param>
          <type><ref refid="structkolibri__window" kindref="compound">kolibri_window</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type><ref refid="structpict__button" kindref="compound">pict_button</ref> *</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_d_button.h" line="45" column="20" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_d_button.h" bodystart="45" bodyend="48"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>KOLIBRI_DBUTTON_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KOLIBRI_DBUTTON_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kos32sys.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="structpict__button" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>type;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>x_w;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>y_h;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mouse_pos;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mouse_keys;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mouse_keys_old;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/>active_raw;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//active<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/>passive_raw;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//passive<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/>click_raw;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pressed<sp/>bitmap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>resolution_raw;<sp/></highlight><highlight class="comment">//<sp/>bpp,<sp/>as<sp/>esi<sp/>fn65</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/>palette_raw;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>palette,<sp/>as<sp/>edi<sp/>fn65</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>offset_raw;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>width<sp/>as<sp/>ebp<sp/>fn65</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>select;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>internal<sp/>state:<sp/>0<sp/>-<sp/>passive,<sp/>2<sp/>-<sp/>pressed,<sp/>1<sp/>-<sp/>clicked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>click;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clicked<sp/>-<sp/>1,<sp/>zero<sp/>it<sp/>after<sp/>tested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">}<sp/><ref refid="structpict__button" kindref="compound">pict_button</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structpict__button" kindref="compound">pict_button</ref>*<sp/>kolibri_pict_button(<ref refid="structpict__button" kindref="compound">pict_button</ref>*<sp/>b,<sp/>uint32_t<sp/>x_w,<sp/>uint32_t<sp/>y_h,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>active_pict,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>passive_pict,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pressed_pict,<sp/>uint32_t<sp/>bpp,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>palette,<sp/>int32_t<sp/>offset_line)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;type<sp/>=<sp/>b-&gt;mouse_pos<sp/>=<sp/>b-&gt;mouse_keys<sp/>=<sp/>b-&gt;mouse_keys_old<sp/>=<sp/>b-&gt;select<sp/>=<sp/>b-&gt;click<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;x_w<sp/>=<sp/>x_w;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;y_h<sp/>=<sp/>y_h;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;active_raw<sp/>=<sp/>active_pict;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;passive_raw<sp/>=<sp/>passive_pict;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;click_raw<sp/>=<sp/>pressed_pict;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;resolution_raw<sp/>=<sp/>bpp;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;palette_raw<sp/>=<sp/>palette;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;offset_raw<sp/>=<sp/>offset_line;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structpict__button" kindref="compound">pict_button</ref>*<sp/>kolibri_new_pict_button(uint32_t<sp/>x_w,<sp/>uint32_t<sp/>y_h,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>active_pict,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>passive_pict,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pressed_pict,<sp/>uint32_t<sp/>bpp,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>palette,<sp/>int32_t<sp/>offset_line)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpict__button" kindref="compound">pict_button</ref><sp/>*new_d_but<sp/>=<sp/>(<ref refid="structpict__button" kindref="compound">pict_button</ref><sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structpict__button" kindref="compound">pict_button</ref>));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kolibri_pict_button(new_d_but,<sp/>x_w,<sp/>y_h,<sp/>active_pict,<sp/>passive_pict,<sp/>pressed_pict,<sp/>bpp,<sp/>palette,<sp/>offset_line);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gui_add_pict_button(<ref refid="structkolibri__window" kindref="compound">kolibri_window</ref><sp/>*wnd,<sp/><ref refid="structpict__button" kindref="compound">pict_button</ref>*<sp/>db)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>kolibri_window_add_element(wnd,<sp/>KOLIBRI_D_BUTTON,<sp/>db);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*dynamic_button_draw)(<ref refid="structpict__button" kindref="compound">pict_button</ref><sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*dynamic_button_mouse)(<ref refid="structpict__button" kindref="compound">pict_button</ref><sp/>*)<sp/>__attribute__((__stdcall__));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>KOLIBRI_DBUTTON_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_d_button.h"/>
  </compounddef>
</doxygen>
