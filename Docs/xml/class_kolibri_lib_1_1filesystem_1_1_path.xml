<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="ru">
  <compounddef id="class_kolibri_lib_1_1filesystem_1_1_path" kind="class" language="C++" prot="public">
    <compoundname>KolibriLib::filesystem::Path</compoundname>
    <includes refid="filesystem_8hpp" local="no">filesystem.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_kolibri_lib_1_1filesystem_1_1_path_1ab9b061b35b2c9b51c2da59cc0ea16b0c" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string KolibriLib::filesystem::Path::_string</definition>
        <argsstring></argsstring>
        <name>_string</name>
        <qualifiedname>KolibriLib::filesystem::Path::_string</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/system/filesystem.hpp" line="45" column="29" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/system/filesystem.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_kolibri_lib_1_1filesystem_1_1_path_1aadc730b84b546871cf42096c64ec4ba2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KolibriLib::filesystem::Path::Path</definition>
        <argsstring>(const std::string &amp;path=&quot;/&quot;)</argsstring>
        <name>Path</name>
        <qualifiedname>KolibriLib::filesystem::Path::Path</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
          <defval>&quot;/&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/system/filesystem.hpp" line="21" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1filesystem_1_1_path_1a1ce6078475d3a9b5c340e08b1bc65217" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * KolibriLib::filesystem::Path::GetChars</definition>
        <argsstring>() const</argsstring>
        <name>GetChars</name>
        <qualifiedname>KolibriLib::filesystem::Path::GetChars</qualifiedname>
        <briefdescription>
<para>Получить char* строку </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Функция возвращает конвертированную строку <ref refid="_1ab9b061b35b2c9b51c2da59cc0ea16b0c" kindref="member">_string</ref></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/system/filesystem.hpp" line="24" column="28"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1filesystem_1_1_path_1a9e652561c552809fd7b5f8b4c87d8565" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; KolibriLib::filesystem::Path::GetString</definition>
        <argsstring>() const</argsstring>
        <name>GetString</name>
        <qualifiedname>KolibriLib::filesystem::Path::GetString</qualifiedname>
        <briefdescription>
<para>Получить строку </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Функция возвращает <ref refid="_1ab9b061b35b2c9b51c2da59cc0ea16b0c" kindref="member">_string</ref></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/system/filesystem.hpp" line="28" column="35"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1filesystem_1_1_path_1a6c40452c9858b8428c8f1cbc068f11c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_kolibri_lib_1_1filesystem_1_1_path" kindref="compound">Path</ref> &amp;</type>
        <definition>Path &amp; KolibriLib::filesystem::Path::operator/</definition>
        <argsstring>(const Path &amp;a)</argsstring>
        <name>operator/</name>
        <qualifiedname>KolibriLib::filesystem::Path::operator/</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1filesystem_1_1_path" kindref="compound">Path</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/system/filesystem.hpp" line="30" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1filesystem_1_1_path_1ae68b63e1c7adc51acf4a0844595ae349" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_kolibri_lib_1_1filesystem_1_1_path" kindref="compound">Path</ref> &amp;</type>
        <definition>Path &amp; KolibriLib::filesystem::Path::operator/</definition>
        <argsstring>(const std::string &amp;a)</argsstring>
        <name>operator/</name>
        <qualifiedname>KolibriLib::filesystem::Path::operator/</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/system/filesystem.hpp" line="31" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1filesystem_1_1_path_1aae6322945edc11d62d1f60b62c68f192" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_kolibri_lib_1_1filesystem_1_1_path" kindref="compound">Path</ref> &amp;</type>
        <definition>Path &amp; KolibriLib::filesystem::Path::operator+</definition>
        <argsstring>(const Path &amp;a)</argsstring>
        <name>operator+</name>
        <qualifiedname>KolibriLib::filesystem::Path::operator+</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1filesystem_1_1_path" kindref="compound">Path</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/system/filesystem.hpp" line="32" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1filesystem_1_1_path_1a77bc19fb66e6ce2a7bf1947ab78fe339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_kolibri_lib_1_1filesystem_1_1_path" kindref="compound">Path</ref> &amp;</type>
        <definition>Path &amp; KolibriLib::filesystem::Path::operator+</definition>
        <argsstring>(const std::string &amp;a)</argsstring>
        <name>operator+</name>
        <qualifiedname>KolibriLib::filesystem::Path::operator+</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/system/filesystem.hpp" line="33" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1filesystem_1_1_path_1aa8da971a5bd99ba1efe49ba358d63854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_kolibri_lib_1_1filesystem_1_1_path" kindref="compound">Path</ref> &amp;</type>
        <definition>Path &amp; KolibriLib::filesystem::Path::operator=</definition>
        <argsstring>(const Path &amp;a)</argsstring>
        <name>operator=</name>
        <qualifiedname>KolibriLib::filesystem::Path::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1filesystem_1_1_path" kindref="compound">Path</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/system/filesystem.hpp" line="34" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1filesystem_1_1_path_1a6686962daddadb397f27ab4c61036815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_kolibri_lib_1_1filesystem_1_1_path" kindref="compound">Path</ref> &amp;</type>
        <definition>Path &amp; KolibriLib::filesystem::Path::operator=</definition>
        <argsstring>(const std::string &amp;a)</argsstring>
        <name>operator=</name>
        <qualifiedname>KolibriLib::filesystem::Path::operator=</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/system/filesystem.hpp" line="35" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1filesystem_1_1_path_1af72a4615528982cce3d18497a0d46529" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KolibriLib::filesystem::Path::operator==</definition>
        <argsstring>(const Path &amp;a) const</argsstring>
        <name>operator==</name>
        <qualifiedname>KolibriLib::filesystem::Path::operator==</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1filesystem_1_1_path" kindref="compound">Path</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/system/filesystem.hpp" line="37" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1filesystem_1_1_path_1a59e06f6a56954b4b263fc9980ce98c03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KolibriLib::filesystem::Path::operator!=</definition>
        <argsstring>(const Path &amp;a) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>KolibriLib::filesystem::Path::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1filesystem_1_1_path" kindref="compound">Path</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/system/filesystem.hpp" line="38" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1filesystem_1_1_path_1a19a924343f3d4f4331918c9d1ff83842" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KolibriLib::filesystem::Path::operator==</definition>
        <argsstring>(const std::string &amp;a) const</argsstring>
        <name>operator==</name>
        <qualifiedname>KolibriLib::filesystem::Path::operator==</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/system/filesystem.hpp" line="40" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1filesystem_1_1_path_1a03b02abb06494c259780c9e7862bfd5d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KolibriLib::filesystem::Path::operator!=</definition>
        <argsstring>(const std::string &amp;a) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>KolibriLib::filesystem::Path::operator!=</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/system/filesystem.hpp" line="41" column="22"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Путь до файла/папки </para>
    </briefdescription>
    <detaileddescription>
<sect4 id="class_kolibri_lib_1_1filesystem_1_1_path_1Полность">
<title>совместим с std::string</title></sect4>
    </detaileddescription>
    <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/system/filesystem.hpp" line="18" column="9" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/system/filesystem.hpp" bodystart="19" bodyend="46"/>
    <listofallmembers>
      <member refid="class_kolibri_lib_1_1filesystem_1_1_path_1ab9b061b35b2c9b51c2da59cc0ea16b0c" prot="private" virt="non-virtual"><scope>KolibriLib::filesystem::Path</scope><name>_string</name></member>
      <member refid="class_kolibri_lib_1_1filesystem_1_1_path_1a1ce6078475d3a9b5c340e08b1bc65217" prot="public" virt="non-virtual"><scope>KolibriLib::filesystem::Path</scope><name>GetChars</name></member>
      <member refid="class_kolibri_lib_1_1filesystem_1_1_path_1a9e652561c552809fd7b5f8b4c87d8565" prot="public" virt="non-virtual"><scope>KolibriLib::filesystem::Path</scope><name>GetString</name></member>
      <member refid="class_kolibri_lib_1_1filesystem_1_1_path_1a59e06f6a56954b4b263fc9980ce98c03" prot="public" virt="non-virtual"><scope>KolibriLib::filesystem::Path</scope><name>operator!=</name></member>
      <member refid="class_kolibri_lib_1_1filesystem_1_1_path_1a03b02abb06494c259780c9e7862bfd5d" prot="public" virt="non-virtual"><scope>KolibriLib::filesystem::Path</scope><name>operator!=</name></member>
      <member refid="class_kolibri_lib_1_1filesystem_1_1_path_1aae6322945edc11d62d1f60b62c68f192" prot="public" virt="non-virtual"><scope>KolibriLib::filesystem::Path</scope><name>operator+</name></member>
      <member refid="class_kolibri_lib_1_1filesystem_1_1_path_1a77bc19fb66e6ce2a7bf1947ab78fe339" prot="public" virt="non-virtual"><scope>KolibriLib::filesystem::Path</scope><name>operator+</name></member>
      <member refid="class_kolibri_lib_1_1filesystem_1_1_path_1a6c40452c9858b8428c8f1cbc068f11c7" prot="public" virt="non-virtual"><scope>KolibriLib::filesystem::Path</scope><name>operator/</name></member>
      <member refid="class_kolibri_lib_1_1filesystem_1_1_path_1ae68b63e1c7adc51acf4a0844595ae349" prot="public" virt="non-virtual"><scope>KolibriLib::filesystem::Path</scope><name>operator/</name></member>
      <member refid="class_kolibri_lib_1_1filesystem_1_1_path_1aa8da971a5bd99ba1efe49ba358d63854" prot="public" virt="non-virtual"><scope>KolibriLib::filesystem::Path</scope><name>operator=</name></member>
      <member refid="class_kolibri_lib_1_1filesystem_1_1_path_1a6686962daddadb397f27ab4c61036815" prot="public" virt="non-virtual"><scope>KolibriLib::filesystem::Path</scope><name>operator=</name></member>
      <member refid="class_kolibri_lib_1_1filesystem_1_1_path_1af72a4615528982cce3d18497a0d46529" prot="public" virt="non-virtual"><scope>KolibriLib::filesystem::Path</scope><name>operator==</name></member>
      <member refid="class_kolibri_lib_1_1filesystem_1_1_path_1a19a924343f3d4f4331918c9d1ff83842" prot="public" virt="non-virtual"><scope>KolibriLib::filesystem::Path</scope><name>operator==</name></member>
      <member refid="class_kolibri_lib_1_1filesystem_1_1_path_1aadc730b84b546871cf42096c64ec4ba2" prot="public" virt="non-virtual"><scope>KolibriLib::filesystem::Path</scope><name>Path</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
