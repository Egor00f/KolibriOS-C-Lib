<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="class_kolibri_lib_1_1window_1_1_window" kind="class" language="C++" prot="public">
    <compoundname>KolibriLib::window::Window</compoundname>
    <includes refid="window_8hpp" local="no">window.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_kolibri_lib_1_1window_1_1_window_1a929047a2bfe95ff586aca5619c68fab0" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string KolibriLib::window::Window::_title</definition>
        <argsstring></argsstring>
        <name>_title</name>
        <qualifiedname>KolibriLib::window::Window::_title</qualifiedname>
        <briefdescription>
<para>Заголовок окна </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="66" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kolibri_lib_1_1window_1_1_window_1ab4f87a42bcc641f12ee2c88cb32bdc7c" prot="private" static="no" mutable="no">
        <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Size</ref></type>
        <definition>UI::Size KolibriLib::window::Window::_size</definition>
        <argsstring></argsstring>
        <name>_size</name>
        <qualifiedname>KolibriLib::window::Window::_size</qualifiedname>
        <briefdescription>
<para>Размеры окна </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="69" column="10" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kolibri_lib_1_1window_1_1_window_1af4e8f4318a18278dc9e97235f4756d0c" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_kolibri_lib_1_1_colors_1a6550994b56cf65f67c078179c223a748" kindref="member">Colors::ColorsTable</ref></type>
        <definition>Colors::ColorsTable KolibriLib::window::Window::_colors</definition>
        <argsstring></argsstring>
        <name>_colors</name>
        <qualifiedname>KolibriLib::window::Window::_colors</qualifiedname>
        <briefdescription>
<para>Цвета окна </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="72" column="21" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kolibri_lib_1_1window_1_1_window_1acd07e272bc0305c47a75a2b61fa7b870" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned KolibriLib::window::Window::_MARGIN</definition>
        <argsstring></argsstring>
        <name>_MARGIN</name>
        <qualifiedname>KolibriLib::window::Window::_MARGIN</qualifiedname>
        <briefdescription>
<para>отступы от края окна </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="75" column="10" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kolibri_lib_1_1window_1_1_window_1a577aeb28c88799e93da900ab964fa91f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int KolibriLib::window::Window::_style</definition>
        <argsstring></argsstring>
        <name>_style</name>
        <qualifiedname>KolibriLib::window::Window::_style</qualifiedname>
        <briefdescription>
<para>Стиль окна </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="78" column="5" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kolibri_lib_1_1window_1_1_window_1a6d2ee35d5cfa0884c381288c4de5d3c5" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int KolibriLib::window::Window::activeForm</definition>
        <argsstring></argsstring>
        <name>activeForm</name>
        <qualifiedname>KolibriLib::window::Window::activeForm</qualifiedname>
        <briefdescription>
<para>Активная фарма </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="81" column="14" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kolibri_lib_1_1window_1_1_window_1a3e3bdb7a42bbb199299f70c187e904f6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KolibriLib::window::Window::_Redraw</definition>
        <argsstring></argsstring>
        <name>_Redraw</name>
        <qualifiedname>KolibriLib::window::Window::_Redraw</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>Окно перерисовывается сейчас (да/нет) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="84" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kolibri_lib_1_1window_1_1_window_1a8cc155b3ddac8fc5c43221268962e6a9" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_kolibri_lib_1_1window_1_1_element" kindref="compound">Element</ref> &gt;</type>
        <definition>std::vector&lt;Element&gt; KolibriLib::window::Window::_Elements</definition>
        <argsstring></argsstring>
        <name>_Elements</name>
        <qualifiedname>KolibriLib::window::Window::_Elements</qualifiedname>
        <briefdescription>
<para>Список всех кнопок этого окна </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="88" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1ae5df34394ca2c0d1c1afe279a4989f95" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned Window::AddNewButton</definition>
        <argsstring>(UI::buttons::Button btn)</argsstring>
        <name>AddNewButton</name>
        <qualifiedname>KolibriLib::window::Window::AddNewButton</qualifiedname>
        <param>
          <type><ref refid="class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button" kindref="compound">UI::buttons::Button</ref></type>
          <declname>btn</declname>
        </param>
        <briefdescription>
<para>Добавить в список новую кнопку </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btn</parametername>
</parameternamelist>
<parameterdescription>
<para>кнопка </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>номер в списке <ref refid="" kindref="compound">_Buttons</ref></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="93" column="10" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="7" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1ac71143fd44ed1c710e3e628c1d625dd0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned Window::AddNewTextLabel</definition>
        <argsstring>(UI::text::TextLabel text)</argsstring>
        <name>AddNewTextLabel</name>
        <qualifiedname>KolibriLib::window::Window::AddNewTextLabel</qualifiedname>
        <param>
          <type><ref refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label" kindref="compound">UI::text::TextLabel</ref></type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Добавить в список новую текствую метку </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>текстовая метка </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>номер в списке <ref refid="" kindref="compound">_Texts</ref></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="98" column="10" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="45" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a8beeef7adebf3b0f930f2d13fd527141" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned Window::AddNewForm</definition>
        <argsstring>(UI::Form form)</argsstring>
        <name>AddNewForm</name>
        <qualifiedname>KolibriLib::window::Window::AddNewForm</qualifiedname>
        <param>
          <type><ref refid="class_kolibri_lib_1_1_u_i_1_1_form" kindref="compound">UI::Form</ref></type>
          <declname>form</declname>
        </param>
        <briefdescription>
<para>Добавить форму </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>form</parametername>
</parameternamelist>
<parameterdescription>
<para>Форма </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>номер в списке <ref refid="" kindref="compound">_Forms</ref></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="103" column="10" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="84" bodyend="102"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1ac3c0f4cf6baa76cc6959bf61fc8cfb38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Window::Window</definition>
        <argsstring>(std::string Title=&quot;Window&quot;, UI::Size size=DefaultWindowSize, int style=0x14, Colors::ColorsTable colors=Colors::DefaultColorTable, unsigned Margin=0)</argsstring>
        <name>Window</name>
        <qualifiedname>KolibriLib::window::Window::Window</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>Title</declname>
          <defval>&quot;Window&quot;</defval>
        </param>
        <param>
          <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Size</ref></type>
          <declname>size</declname>
          <defval><ref refid="namespace_kolibri_lib_1_1window_1a1f1ae2f8103c37a9b5a88cce14f75f9d" kindref="member">DefaultWindowSize</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>style</declname>
          <defval>0x14</defval>
        </param>
        <param>
          <type><ref refid="namespace_kolibri_lib_1_1_colors_1a6550994b56cf65f67c078179c223a748" kindref="member">Colors::ColorsTable</ref></type>
          <declname>colors</declname>
          <defval><ref refid="namespace_kolibri_lib_1_1_colors_1ada2166810bf7aa50f1f39154716cc73d" kindref="member">Colors::DefaultColorTable</ref></defval>
        </param>
        <param>
          <type>unsigned</type>
          <declname>Margin</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Конструктор </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Title</parametername>
</parameternamelist>
<parameterdescription>
<para>Заголовок окна </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Размер окна </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>стиль окна </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>colors</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет окна </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Margin</parametername>
</parameternamelist>
<parameterdescription>
<para>Отступы </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="112" column="1" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="104" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a245d821e6016fa1f6970ccbbedd635f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Window::~Window</definition>
        <argsstring>()</argsstring>
        <name>~Window</name>
        <qualifiedname>KolibriLib::window::Window::~Window</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="113" column="1" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a7863fafae23423f404bee7aa3a57e124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Window::Render</definition>
        <argsstring>()</argsstring>
        <name>Render</name>
        <qualifiedname>KolibriLib::window::Window::Render</qualifiedname>
        <briefdescription>
<para>Отрисовать окно </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="116" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="168" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1ac9ea9bd8428a47ef721ed41b84ca1dee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned Window::GetMargin</definition>
        <argsstring>()</argsstring>
        <name>GetMargin</name>
        <qualifiedname>KolibriLib::window::Window::GetMargin</qualifiedname>
        <briefdescription>
<para>Получить рамер отступов в этом окне </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="_1acd07e272bc0305c47a75a2b61fa7b870" kindref="member">_MARGIN</ref></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="120" column="10" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="207" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a29313e5f7d8a7291b924999e7b6a831e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Size</ref></type>
        <definition>UI::Size Window::GetSize</definition>
        <argsstring>()</argsstring>
        <name>GetSize</name>
        <qualifiedname>KolibriLib::window::Window::GetSize</qualifiedname>
        <briefdescription>
<para>Получить размер окна </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="_1ab4f87a42bcc641f12ee2c88cb32bdc7c" kindref="member">_size</ref></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="124" column="10" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1ad49c5ec34b3cc382e7e9e5234cd42124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Window::SetWindowColors</definition>
        <argsstring>(const Colors::ColorsTable &amp;colorTable)</argsstring>
        <name>SetWindowColors</name>
        <qualifiedname>KolibriLib::window::Window::SetWindowColors</qualifiedname>
        <param>
          <type>const <ref refid="namespace_kolibri_lib_1_1_colors_1a6550994b56cf65f67c078179c223a748" kindref="member">Colors::ColorsTable</ref> &amp;</type>
          <declname>colorTable</declname>
        </param>
        <briefdescription>
<para>Задать стандартные цвета окна </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>colorTable</parametername>
</parameternamelist>
<parameterdescription>
<para>таблица цветов </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="128" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1ac7617207760b4cc6a0078e92a1a844b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Window::StartRedraw</definition>
        <argsstring>()</argsstring>
        <name>StartRedraw</name>
        <qualifiedname>KolibriLib::window::Window::StartRedraw</qualifiedname>
        <briefdescription>
<para>Начать перересовку окна </para>
        </briefdescription>
        <detaileddescription>
<sect4 id="class_kolibri_lib_1_1window_1_1_window_1Стирает">
<title>всё что было нарисованно в окне</title></sect4>
<sect4 id="class_kolibri_lib_1_1window_1_1_window_1Обязательно">
<title>после должна быть вызвана функция #EndRedraw()</title></sect4>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="133" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="133" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a1431961e77c27593e30ca06203c2aa62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Window::EndRedraw</definition>
        <argsstring>()</argsstring>
        <name>EndRedraw</name>
        <qualifiedname>KolibriLib::window::Window::EndRedraw</qualifiedname>
        <briefdescription>
<para>Закончить перересовку окна </para>
        </briefdescription>
        <detaileddescription>
<sect4 id="class_kolibri_lib_1_1window_1_1_window_1Обязательно">
<title>после должна быть вызвана функция #EndRedraw()</title></sect4>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="137" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="139" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a6c10ca0b0357d91a433edacf699f980e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Window::DrawWindow</definition>
        <argsstring>(UI::Coord coord=mouse::GetMousePositionOnSreen())</argsstring>
        <name>DrawWindow</name>
        <qualifiedname>KolibriLib::window::Window::DrawWindow</qualifiedname>
        <param>
          <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref></type>
          <declname>coord</declname>
          <defval><ref refid="namespace_kolibri_lib_1_1mouse_1a3214167f4881bd080a5f8677f9f748e9" kindref="member">mouse::GetMousePositionOnSreen</ref>()</defval>
        </param>
        <briefdescription>
<para>Отрисовать окно </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>позиция окна </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>размер окна </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>титул(текст в заголовке) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>цвет рабочей области </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>стиль </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="145" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a784db7e4809ee9ab181d7971ae441e39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Window::ChangeWindow</definition>
        <argsstring>(UI::Coord coord, UI::Size size)</argsstring>
        <name>ChangeWindow</name>
        <qualifiedname>KolibriLib::window::Window::ChangeWindow</qualifiedname>
        <param>
          <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref></type>
          <declname>coord</declname>
        </param>
        <param>
          <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Size</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Изменить окно </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>позиция </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>размер </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="150" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="153" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a06c2e7a68970c226447232cbe7d4c8fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Window::ChangeTilte</definition>
        <argsstring>(const std::string &amp;newTitle)</argsstring>
        <name>ChangeTilte</name>
        <qualifiedname>KolibriLib::window::Window::ChangeTilte</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>newTitle</declname>
        </param>
        <briefdescription>
<para>Изменить заголовок окна </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newTitle</parametername>
</parameternamelist>
<parameterdescription>
<para>новый заголовок </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="154" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a49c15e00d433ce67d424fb68246bfd47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Size</ref></type>
        <definition>UI::Size Window::GetWindowSize</definition>
        <argsstring>()</argsstring>
        <name>GetWindowSize</name>
        <qualifiedname>KolibriLib::window::Window::GetWindowSize</qualifiedname>
        <briefdescription>
<para>Получить размер окна </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>point.x - ширина окна, </para>
</simplesect>
<simplesect kind="return"><para>point.y - высота окна </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="159" column="10" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="164" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a2539ca193ef6b3dabd541dddbe686d60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned KolibriLib::window::Window::CreateButton</definition>
        <argsstring>(UI::Coord coord={0, 0}, UI::Size size={16, 16}, std::string Text=&quot; &quot;, unsigned margin=UI::DefaultMargin, bool UseWindowColors=true, Colors::Color color=OS::sys_color_table.work_button, Colors::Color TextColor=OS::sys_color_table.work_button_text)</argsstring>
        <name>CreateButton</name>
        <qualifiedname>KolibriLib::window::Window::CreateButton</qualifiedname>
        <param>
          <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref></type>
          <declname>coord</declname>
          <defval>{0, 0}</defval>
        </param>
        <param>
          <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Size</ref></type>
          <declname>size</declname>
          <defval>{16, 16}</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>Text</declname>
          <defval>&quot; &quot;</defval>
        </param>
        <param>
          <type>unsigned</type>
          <declname>margin</declname>
          <defval>UI::DefaultMargin</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>UseWindowColors</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref></type>
          <declname>color</declname>
          <defval>OS::sys_color_table.work_button</defval>
        </param>
        <param>
          <type><ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref></type>
          <declname>TextColor</declname>
          <defval>OS::sys_color_table.work_button_text</defval>
        </param>
        <briefdescription>
<para>Создать кнопку </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>координата кнопки </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>размеры кнопки </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Text</parametername>
</parameternamelist>
<parameterdescription>
<para>текст кнопки </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>margin</parametername>
</parameternamelist>
<parameterdescription>
<para>Отступы границ кноки от текста </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UseWindowColors</parametername>
</parameternamelist>
<parameterdescription>
<para>Использовать ли цвет окна(да/нет) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет кнопки </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TextColor</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет текста кнопки </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>номер кнопки в списке <ref refid="" kindref="compound">_Buttons</ref></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="170" column="10" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="217" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a1d366e0480ed7f2a7e46e4963ba703ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned KolibriLib::window::Window::CreateButton</definition>
        <argsstring>(const UI::buttons::Button &amp;btn)</argsstring>
        <name>CreateButton</name>
        <qualifiedname>KolibriLib::window::Window::CreateButton</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button" kindref="compound">UI::buttons::Button</ref> &amp;</type>
          <declname>btn</declname>
        </param>
        <briefdescription>
<para>Создать кнопку </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>btn</parametername>
</parameternamelist>
<parameterdescription>
<para>кнопка </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>номер кнопки в списке <ref refid="" kindref="compound">_Buttons</ref></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="175" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1ae27054bb07212c75af2e91766a0b56d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button" kindref="compound">UI::buttons::Button</ref></type>
        <definition>UI::buttons::Button Window::GetButton</definition>
        <argsstring>(unsigned id)</argsstring>
        <name>GetButton</name>
        <qualifiedname>KolibriLib::window::Window::GetButton</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Получить кнопку </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Номер кнопки в списке </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Кнопка </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="180" column="21" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="316" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a691c8cb67acbd56187101b06a681bbc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned Window::CreateText</definition>
        <argsstring>(UI::Coord coord={0, 0}, UI::Size size={16, 16}, std::string text=&quot;Text&quot;, unsigned FontSize=9, bool UseWindowColors=true, Colors::Color color=OS::sys_color_table.work_text)</argsstring>
        <name>CreateText</name>
        <qualifiedname>KolibriLib::window::Window::CreateText</qualifiedname>
        <param>
          <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref></type>
          <declname>coord</declname>
          <defval>{0, 0}</defval>
        </param>
        <param>
          <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Size</ref></type>
          <declname>size</declname>
          <defval>{16, 16}</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>text</declname>
          <defval>&quot;Text&quot;</defval>
        </param>
        <param>
          <type>unsigned</type>
          <declname>FontSize</declname>
          <defval>9</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>UseWindowColors</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref></type>
          <declname>color</declname>
          <defval>OS::sys_color_table.work_text</defval>
        </param>
        <briefdescription>
<para>Создать текст в окне </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>координата текста </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>рамер рамок текста </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>Сам текст </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FontSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Рамер текста </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>UseWindowColors</parametername>
</parameternamelist>
<parameterdescription>
<para>Использовать цвета окна(да/нет) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет текста </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Номер текста в списке <ref refid="" kindref="compound">_Texts</ref></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="190" column="10" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="227" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a9a8362bf8c56c57bfe21bc494739cded" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned Window::CreateText</definition>
        <argsstring>(const UI::text::TextLabel &amp;text)</argsstring>
        <name>CreateText</name>
        <qualifiedname>KolibriLib::window::Window::CreateText</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label" kindref="compound">UI::text::TextLabel</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Создать текст в окне </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>текст </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Номер текста в списке <ref refid="" kindref="compound">_Texts</ref></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="195" column="10" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="240" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1aa8aadc49fc0714906c2488681bb1f2c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::Window::SetTextLabel</definition>
        <argsstring>(unsigned N, const UI::text::TextLabel &amp;text)</argsstring>
        <name>SetTextLabel</name>
        <qualifiedname>KolibriLib::window::Window::SetTextLabel</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>N</declname>
        </param>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label" kindref="compound">UI::text::TextLabel</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Изменить текст </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>Номер элемента в списке </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>Новая текстовая метка </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="200" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1aed07039c255cf62c945d8028619e20f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned KolibriLib::window::Window::CreateForm</definition>
        <argsstring>(UI::Form form)</argsstring>
        <name>CreateForm</name>
        <qualifiedname>KolibriLib::window::Window::CreateForm</qualifiedname>
        <param>
          <type><ref refid="class_kolibri_lib_1_1_u_i_1_1_form" kindref="compound">UI::Form</ref></type>
          <declname>form</declname>
        </param>
        <briefdescription>
<para>Создать форму </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>form</parametername>
</parameternamelist>
<parameterdescription>
<para>форма </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>номер в списке <ref refid="" kindref="compound">_Forms</ref></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="205" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1adf26c28bb805b3491c42d1c7ee348777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Window::DeleteElement</definition>
        <argsstring>(unsigned id)</argsstring>
        <name>DeleteElement</name>
        <qualifiedname>KolibriLib::window::Window::DeleteElement</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Удалить элемент </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>idшник того элемента, которой нужно удалить </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="209" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="245" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1ae61336710de30c01f05c04121fa52f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_kolibri_lib_1_1_o_s_1abe4a29759805b4449591c8efb1d10d34" kindref="member">OS::Event</ref></type>
        <definition>OS::Event Window::Handler</definition>
        <argsstring>()</argsstring>
        <name>Handler</name>
        <qualifiedname>KolibriLib::window::Window::Handler</qualifiedname>
        <briefdescription>
<para>Обработчик окна </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Ивент </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="213" column="11" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="250" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1ae946a94344cfa3af152c22ec7e95f9e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>UI::buttons::ButtonID</type>
        <definition>UI::buttons::ButtonID Window::GetPressedButton</definition>
        <argsstring>()</argsstring>
        <name>GetPressedButton</name>
        <qualifiedname>KolibriLib::window::Window::GetPressedButton</qualifiedname>
        <briefdescription>
<para>Проверить какая нажата </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="216" column="23" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="295" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1ae895984865728348b2da6593a09df6ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Window::GetInputFromFrom</definition>
        <argsstring>(unsigned form)</argsstring>
        <name>GetInputFromFrom</name>
        <qualifiedname>KolibriLib::window::Window::GetInputFromFrom</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>form</declname>
        </param>
        <briefdescription>
<para>Получить текст введённый в форму </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>form</parametername>
</parameternamelist>
<parameterdescription>
<para>номер формы в списке </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Функция возвращает текст введённый в формы </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="221" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="308" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a61a40d50910101625d4e289821bbd2da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Window::HandlerThread</definition>
        <argsstring>()</argsstring>
        <name>HandlerThread</name>
        <qualifiedname>KolibriLib::window::Window::HandlerThread</qualifiedname>
        <briefdescription>
<para>Обработчик окна в отдельном потоке </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="224" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="321" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1acb8c984eff27ea01b5f35bfbc9fa33a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>unsigned</type>
        <definition>unsigned Window::AddElement</definition>
        <argsstring>(const T &amp;element)</argsstring>
        <name>AddElement</name>
        <qualifiedname>KolibriLib::window::Window::AddElement</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
<para>Добавить UI элемент </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="229" column="10" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="343" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1ae074267ec49af5a67e268aebd1d3aae6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::Window::Unfocus</definition>
        <argsstring>() const</argsstring>
        <name>Unfocus</name>
        <qualifiedname>KolibriLib::window::Window::Unfocus</qualifiedname>
        <briefdescription>
<para>Снять фокус с этого окна </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="232" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="332" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1af24f1580a621e0f7047fc3bbb5138d16" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::Window::Focus</definition>
        <argsstring>() const</argsstring>
        <name>Focus</name>
        <qualifiedname>KolibriLib::window::Window::Focus</qualifiedname>
        <briefdescription>
<para>Поставить фокус на это окно </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="234" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.cpp" bodystart="337" bodyend="340"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Класс для работы с окном </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" line="62" column="1" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/window.hpp" bodystart="63" bodyend="235"/>
    <listofallmembers>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1af4e8f4318a18278dc9e97235f4756d0c" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>_colors</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a8cc155b3ddac8fc5c43221268962e6a9" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>_Elements</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1acd07e272bc0305c47a75a2b61fa7b870" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>_MARGIN</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a3e3bdb7a42bbb199299f70c187e904f6" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>_Redraw</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1ab4f87a42bcc641f12ee2c88cb32bdc7c" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>_size</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a577aeb28c88799e93da900ab964fa91f" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>_style</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a929047a2bfe95ff586aca5619c68fab0" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>_title</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a6d2ee35d5cfa0884c381288c4de5d3c5" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>activeForm</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1acb8c984eff27ea01b5f35bfbc9fa33a8" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>AddElement</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1ae5df34394ca2c0d1c1afe279a4989f95" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>AddNewButton</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a8beeef7adebf3b0f930f2d13fd527141" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>AddNewForm</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1ac71143fd44ed1c710e3e628c1d625dd0" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>AddNewTextLabel</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a06c2e7a68970c226447232cbe7d4c8fc" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>ChangeTilte</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a784db7e4809ee9ab181d7971ae441e39" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>ChangeWindow</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a2539ca193ef6b3dabd541dddbe686d60" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>CreateButton</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a1d366e0480ed7f2a7e46e4963ba703ff" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>CreateButton</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1aed07039c255cf62c945d8028619e20f4" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>CreateForm</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a691c8cb67acbd56187101b06a681bbc4" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>CreateText</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a9a8362bf8c56c57bfe21bc494739cded" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>CreateText</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1adf26c28bb805b3491c42d1c7ee348777" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>DeleteElement</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a6c10ca0b0357d91a433edacf699f980e" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>DrawWindow</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a1431961e77c27593e30ca06203c2aa62" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>EndRedraw</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1af24f1580a621e0f7047fc3bbb5138d16" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>Focus</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1ae27054bb07212c75af2e91766a0b56d9" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>GetButton</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1ae895984865728348b2da6593a09df6ae" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>GetInputFromFrom</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1ac9ea9bd8428a47ef721ed41b84ca1dee" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>GetMargin</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1ae946a94344cfa3af152c22ec7e95f9e3" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>GetPressedButton</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a29313e5f7d8a7291b924999e7b6a831e" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>GetSize</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a49c15e00d433ce67d424fb68246bfd47" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>GetWindowSize</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1ae61336710de30c01f05c04121fa52f52" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>Handler</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a61a40d50910101625d4e289821bbd2da" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>HandlerThread</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a7863fafae23423f404bee7aa3a57e124" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>Render</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1aa8aadc49fc0714906c2488681bb1f2c0" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>SetTextLabel</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1ad49c5ec34b3cc382e7e9e5234cd42124" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>SetWindowColors</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1ac7617207760b4cc6a0078e92a1a844b9" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>StartRedraw</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1ae074267ec49af5a67e268aebd1d3aae6" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>Unfocus</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1ac3c0f4cf6baa76cc6959bf61fc8cfb38" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>Window</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a245d821e6016fa1f6970ccbbedd635f6" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>~Window</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
