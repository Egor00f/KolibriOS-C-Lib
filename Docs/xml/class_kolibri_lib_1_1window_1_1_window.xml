<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="ru">
  <compounddef id="class_kolibri_lib_1_1window_1_1_window" kind="class" language="C++" prot="public">
    <compoundname>KolibriLib::window::Window</compoundname>
    <includes refid="window_8hpp" local="no">window.hpp</includes>
    <innerclass refid="struct_kolibri_lib_1_1window_1_1_window_1_1_element" prot="private">KolibriLib::window::Window::Element</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_kolibri_lib_1_1window_1_1_window_1a929047a2bfe95ff586aca5619c68fab0" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string KolibriLib::window::Window::_title</definition>
        <argsstring></argsstring>
        <name>_title</name>
        <qualifiedname>KolibriLib::window::Window::_title</qualifiedname>
        <briefdescription>
<para>Заголовок окна </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="77" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kolibri_lib_1_1window_1_1_window_1af9348617be5c79097d7a8d9e0461b30b" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; int, Element &gt;</type>
        <definition>std::unordered_map&lt;int, Element&gt; KolibriLib::window::Window::_Elements</definition>
        <argsstring></argsstring>
        <name>_Elements</name>
        <qualifiedname>KolibriLib::window::Window::_Elements</qualifiedname>
        <briefdescription>
<para>Список всех кнопок этого окна </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="80" column="20" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kolibri_lib_1_1window_1_1_window_1ab4f87a42bcc641f12ee2c88cb32bdc7c" prot="private" static="no" mutable="no">
        <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Size</ref></type>
        <definition>UI::Size KolibriLib::window::Window::_size</definition>
        <argsstring></argsstring>
        <name>_size</name>
        <qualifiedname>KolibriLib::window::Window::_size</qualifiedname>
        <briefdescription>
<para>Размеры окна </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="83" column="10" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kolibri_lib_1_1window_1_1_window_1af4e8f4318a18278dc9e97235f4756d0c" prot="private" static="no" mutable="no">
        <type><ref refid="struct_kolibri_lib_1_1_colors_1_1_colors_table" kindref="compound">Colors::ColorsTable</ref></type>
        <definition>Colors::ColorsTable KolibriLib::window::Window::_colors</definition>
        <argsstring></argsstring>
        <name>_colors</name>
        <qualifiedname>KolibriLib::window::Window::_colors</qualifiedname>
        <briefdescription>
<para>Цвета окна </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="86" column="21" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kolibri_lib_1_1window_1_1_window_1a744be6404cee6262f8127ce3701ffd12" prot="private" static="no" mutable="no">
        <type><ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref></type>
        <definition>Colors::Color KolibriLib::window::Window::_TitleColor</definition>
        <argsstring></argsstring>
        <name>_TitleColor</name>
        <qualifiedname>KolibriLib::window::Window::_TitleColor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="88" column="15" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kolibri_lib_1_1window_1_1_window_1acd07e272bc0305c47a75a2b61fa7b870" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned KolibriLib::window::Window::_MARGIN</definition>
        <argsstring></argsstring>
        <name>_MARGIN</name>
        <qualifiedname>KolibriLib::window::Window::_MARGIN</qualifiedname>
        <briefdescription>
<para>отступы от края окна </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="91" column="10" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kolibri_lib_1_1window_1_1_window_1ac1d8fdedfe47bb446ef068266b6eb282" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned KolibriLib::window::Window::_style</definition>
        <argsstring></argsstring>
        <name>_style</name>
        <qualifiedname>KolibriLib::window::Window::_style</qualifiedname>
        <briefdescription>
<para>Стиль окна </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="94" column="10" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kolibri_lib_1_1window_1_1_window_1abde80e675c91d3f1326aa9667c13c1d3" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned KolibriLib::window::Window::_Transparency</definition>
        <argsstring></argsstring>
        <name>_Transparency</name>
        <qualifiedname>KolibriLib::window::Window::_Transparency</qualifiedname>
        <briefdescription>
<para>Прозрачность окна </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="97" column="10" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kolibri_lib_1_1window_1_1_window_1a3169ea9d6c37a904d44e959d4753c714" prot="private" static="no" mutable="yes">
        <type>int</type>
        <definition>int KolibriLib::window::Window::activeForm</definition>
        <argsstring></argsstring>
        <name>activeForm</name>
        <qualifiedname>KolibriLib::window::Window::activeForm</qualifiedname>
        <initializer>= -1</initializer>
        <briefdescription>
<para>Активная фарма </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="100" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kolibri_lib_1_1window_1_1_window_1a3e3bdb7a42bbb199299f70c187e904f6" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool KolibriLib::window::Window::_Redraw</definition>
        <argsstring></argsstring>
        <name>_Redraw</name>
        <qualifiedname>KolibriLib::window::Window::_Redraw</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>Окно перерисовывается сейчас (да/нет) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="103" column="14" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_kolibri_lib_1_1window_1_1_window_1a9dc8938a990478f339b69e4d15cdc71c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool KolibriLib::window::Window::_RealtimeRedraw</definition>
        <argsstring></argsstring>
        <name>_RealtimeRedraw</name>
        <qualifiedname>KolibriLib::window::Window::_RealtimeRedraw</qualifiedname>
        <briefdescription>
<para>Окно пересовывается при перетаскивании </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="106" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1ab379a62fdd71ba128d3c06f81bfa5b91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KolibriLib::window::Window::Window</definition>
        <argsstring>(const std::string &amp;Title=&quot;Window&quot;, const UI::Size &amp;size=DefaultWindowSize, const Colors::ColorsTable &amp;colors=Colors::DefaultColorTable, const Colors::Color &amp;TitleColor=OS::sys_color_table.work_text, bool Resize=false, bool RealtimeReadraw=false, bool Gradient=false, unsigned Transparency=0, const unsigned &amp;Margin=0)</argsstring>
        <name>Window</name>
        <qualifiedname>KolibriLib::window::Window::Window</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>Title</declname>
          <defval>&quot;Window&quot;</defval>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Size</ref> &amp;</type>
          <declname>size</declname>
          <defval><ref refid="namespace_kolibri_lib_1_1window_1a1f1ae2f8103c37a9b5a88cce14f75f9d" kindref="member">DefaultWindowSize</ref></defval>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1_colors_1_1_colors_table" kindref="compound">Colors::ColorsTable</ref> &amp;</type>
          <declname>colors</declname>
          <defval><ref refid="namespace_kolibri_lib_1_1_colors_1ad6deb13041b3eac69cf1eeaab2b814a8" kindref="member">Colors::DefaultColorTable</ref></defval>
        </param>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>TitleColor</declname>
          <defval>OS::sys_color_table.work_text</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>Resize</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>RealtimeReadraw</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>Gradient</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>unsigned</type>
          <declname>Transparency</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const unsigned &amp;</type>
          <declname>Margin</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Конструктор </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Title</parametername>
</parameternamelist>
<parameterdescription>
<para>Заголовок окна </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Размер окна </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>стиль окна </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>colors</parametername>
</parameternamelist>
<parameterdescription>
<para>Цвет окна </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Margin</parametername>
</parameternamelist>
<parameterdescription>
<para>Отступы </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1ada32f6771efe6e95b4c3ecf87c5ac3c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KolibriLib::window::Window::~Window</definition>
        <argsstring>()</argsstring>
        <name>~Window</name>
        <qualifiedname>KolibriLib::window::Window::~Window</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a85dc195e5b5c35e8d8b61f5893438c1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::Window::Redraw</definition>
        <argsstring>()</argsstring>
        <name>Redraw</name>
        <qualifiedname>KolibriLib::window::Window::Redraw</qualifiedname>
        <briefdescription>
<para>Полная перересовка окна </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="119" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a4e553d653ac35276f7f334fce3d0cddb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::Window::Render</definition>
        <argsstring>(const UI::Coord &amp;coord=DefaultWindowCoord)</argsstring>
        <name>Render</name>
        <qualifiedname>KolibriLib::window::Window::Render</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>coord</declname>
          <defval><ref refid="namespace_kolibri_lib_1_1window_1a0b2c16c6f0b120a6ef83b2366006c6a6" kindref="member">DefaultWindowCoord</ref></defval>
        </param>
        <briefdescription>
<para>Отрисовать окно </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="122" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1aeee663e7541c18cd2c703b9b88c281f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned KolibriLib::window::Window::GetMargin</definition>
        <argsstring>() const</argsstring>
        <name>GetMargin</name>
        <qualifiedname>KolibriLib::window::Window::GetMargin</qualifiedname>
        <briefdescription>
<para>Получить рамер отступов в этом окне </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="_1acd07e272bc0305c47a75a2b61fa7b870" kindref="member">_MARGIN</ref></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="126" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a021f39165e33339ac70044d8b9b99560" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Size</ref> &amp;</type>
        <definition>const UI::Size &amp; KolibriLib::window::Window::GetSize</definition>
        <argsstring>() const</argsstring>
        <name>GetSize</name>
        <qualifiedname>KolibriLib::window::Window::GetSize</qualifiedname>
        <briefdescription>
<para>Получить размер окна </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="_1ab4f87a42bcc641f12ee2c88cb32bdc7c" kindref="member">_size</ref></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="130" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1afdfac77ae4d36dc21c7e6a56b6f106ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::Window::SetWindowColors</definition>
        <argsstring>(const Colors::ColorsTable &amp;colorTable)</argsstring>
        <name>SetWindowColors</name>
        <qualifiedname>KolibriLib::window::Window::SetWindowColors</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1_colors_1_1_colors_table" kindref="compound">Colors::ColorsTable</ref> &amp;</type>
          <declname>colorTable</declname>
        </param>
        <briefdescription>
<para>Задать стандартные цвета окна </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>colorTable</parametername>
</parameternamelist>
<parameterdescription>
<para>таблица цветов </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="134" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a603092d7729140f846c3b23f53885b05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::Window::StartRedraw</definition>
        <argsstring>() const</argsstring>
        <name>StartRedraw</name>
        <qualifiedname>KolibriLib::window::Window::StartRedraw</qualifiedname>
        <briefdescription>
<para>Начать перересовку окна </para>
        </briefdescription>
        <detaileddescription>
<sect4 id="class_kolibri_lib_1_1window_1_1_window_1Стирает">
<title>всё что было нарисованно в окне</title></sect4>
<sect4 id="class_kolibri_lib_1_1window_1_1_window_1Обязательно">
<title>после должна быть вызвана функция #EndRedraw()</title></sect4>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="139" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a2fbcdad4e5e0c3942a479113d2deffb1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::Window::EndRedraw</definition>
        <argsstring>() const</argsstring>
        <name>EndRedraw</name>
        <qualifiedname>KolibriLib::window::Window::EndRedraw</qualifiedname>
        <briefdescription>
<para>Закончить перересовку окна </para>
        </briefdescription>
        <detaileddescription>
<sect4 id="class_kolibri_lib_1_1window_1_1_window_1Обязательно">
<title>после должна быть вызвана функция #EndRedraw()</title></sect4>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="143" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a5d50b995c57de979294bf615e4e5a1c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
        <definition>const UI::Coord &amp; KolibriLib::window::Window::GetCoord</definition>
        <argsstring>() const</argsstring>
        <name>GetCoord</name>
        <qualifiedname>KolibriLib::window::Window::GetCoord</qualifiedname>
        <briefdescription>
<para>Получить координаты окна </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="147" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1ad8cabebed871cdeb4ae11890188c57be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::Window::ChangeWindow</definition>
        <argsstring>(const UI::Coord &amp;coord, const UI::Size &amp;size)</argsstring>
        <name>ChangeWindow</name>
        <qualifiedname>KolibriLib::window::Window::ChangeWindow</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>coord</declname>
        </param>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Size</ref> &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Изменить окно </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>позиция </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>размер </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="152" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a7d76ecef25088a0fd9578fd4b498770c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::Window::ChangeTilte</definition>
        <argsstring>(const std::string &amp;newTitle)</argsstring>
        <name>ChangeTilte</name>
        <qualifiedname>KolibriLib::window::Window::ChangeTilte</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>newTitle</declname>
        </param>
        <briefdescription>
<para>Изменить заголовок окна </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newTitle</parametername>
</parameternamelist>
<parameterdescription>
<para>новый заголовок </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="156" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1acc42b4a4739a4cc94e5a5de993e00e87" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Size</ref> &amp;</type>
        <definition>const UI::Size &amp; KolibriLib::window::Window::GetWindowSize</definition>
        <argsstring>() const</argsstring>
        <name>GetWindowSize</name>
        <qualifiedname>KolibriLib::window::Window::GetWindowSize</qualifiedname>
        <briefdescription>
<para>Получить размер окна </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="struct_kolibri_lib_1_1point_1add46882563c402c224b23c85049f7f34" kindref="member">point.x</ref> - ширина окна, </para>
</simplesect>
<simplesect kind="return"><para><ref refid="struct_kolibri_lib_1_1point_1a2552f28a0a4bd6d41b0b75c7e3dec4e0" kindref="member">point.y</ref> - высота окна </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="161" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a1ddd735a9156802de746e389a9d2e9c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::Window::DeleteElement</definition>
        <argsstring>(int id)</argsstring>
        <name>DeleteElement</name>
        <qualifiedname>KolibriLib::window::Window::DeleteElement</qualifiedname>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Удалить элемент </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>idшник того элемента, которой нужно удалить </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="165" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a33a17f79c99855fb543cc060b197ce99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_kolibri_lib_1_1_o_s_1abe4a29759805b4449591c8efb1d10d34" kindref="member">OS::Event</ref></type>
        <definition>OS::Event KolibriLib::window::Window::Handler</definition>
        <argsstring>()</argsstring>
        <name>Handler</name>
        <qualifiedname>KolibriLib::window::Window::Handler</qualifiedname>
        <briefdescription>
<para>Обработчик окна </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Ивент </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="169" column="11"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1ae3132dabb8fc92444c3fa31cb35c2495" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_kolibri_lib_1_1_u_i_1_1buttons_1a5bc139230a84a2c4049ba6677932e35b" kindref="member">UI::buttons::ButtonID</ref></type>
        <definition>UI::buttons::ButtonID KolibriLib::window::Window::GetPressedButton</definition>
        <argsstring>()</argsstring>
        <name>GetPressedButton</name>
        <qualifiedname>KolibriLib::window::Window::GetPressedButton</qualifiedname>
        <briefdescription>
<para>Проверить какая нажата </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="172" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1aba4c487170073562f7471e41164c6392" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; KolibriLib::window::Window::GetInputFromFrom</definition>
        <argsstring>(int form) const</argsstring>
        <name>GetInputFromFrom</name>
        <qualifiedname>KolibriLib::window::Window::GetInputFromFrom</qualifiedname>
        <param>
          <type>int</type>
          <declname>form</declname>
        </param>
        <briefdescription>
<para>Получить текст введённый в форму </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>form</parametername>
</parameternamelist>
<parameterdescription>
<para>номер формы в списке </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Функция возвращает текст введённый в формы </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="177" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a3d155b43e5beb5467b1db4bdae7bc172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int KolibriLib::window::Window::AddElement</definition>
        <argsstring>(const T &amp;element)</argsstring>
        <name>AddElement</name>
        <qualifiedname>KolibriLib::window::Window::AddElement</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
<para>Добавить UI элемент </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="182" column="5" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="282" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a7f9c6a4fc6b2e620ab29acd339955a4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void KolibriLib::window::Window::SetElement</definition>
        <argsstring>(int i, const T &amp;element)</argsstring>
        <name>SetElement</name>
        <qualifiedname>KolibriLib::window::Window::SetElement</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>element</declname>
        </param>
        <briefdescription>
<para>Изменить элемент tparam T. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="189" column="6" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="299" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1a802663a211e98099e9fc9ad4dad6994f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T &amp; KolibriLib::window::Window::GetElement</definition>
        <argsstring>(int i) const</argsstring>
        <name>GetElement</name>
        <qualifiedname>KolibriLib::window::Window::GetElement</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="196" column="9" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="310" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1ae074267ec49af5a67e268aebd1d3aae6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::Window::Unfocus</definition>
        <argsstring>() const</argsstring>
        <name>Unfocus</name>
        <qualifiedname>KolibriLib::window::Window::Unfocus</qualifiedname>
        <briefdescription>
<para>Снять фокус с этого окна </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="199" column="6"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1window_1_1_window_1af24f1580a621e0f7047fc3bbb5138d16" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::window::Window::Focus</definition>
        <argsstring>() const</argsstring>
        <name>Focus</name>
        <qualifiedname>KolibriLib::window::Window::Focus</qualifiedname>
        <briefdescription>
<para>Поставить фокус на это окно </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="201" column="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Класс для работы с окном </para>
    </briefdescription>
    <detaileddescription>
<sect4 id="class_kolibri_lib_1_1window_1_1_window_1По">
<title>простому: Окно остаётся привязаным к потоку, в которм бы вызван конструктор</title></sect4>
<sect4 id="namespace_kolibri_lib_1_1_u_i_1_1text_1Для">
<title>изменения высоты шрифта используйте <ref refid="" kindref="compound">SetTextSize(unsigned)</ref></title></sect4>
    </detaileddescription>
    <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" line="39" column="1" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/window/window.hpp" bodystart="40" bodyend="202"/>
    <listofallmembers>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1af4e8f4318a18278dc9e97235f4756d0c" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>_colors</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1af9348617be5c79097d7a8d9e0461b30b" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>_Elements</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1acd07e272bc0305c47a75a2b61fa7b870" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>_MARGIN</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a9dc8938a990478f339b69e4d15cdc71c" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>_RealtimeRedraw</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a3e3bdb7a42bbb199299f70c187e904f6" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>_Redraw</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1ab4f87a42bcc641f12ee2c88cb32bdc7c" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>_size</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1ac1d8fdedfe47bb446ef068266b6eb282" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>_style</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a929047a2bfe95ff586aca5619c68fab0" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>_title</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a744be6404cee6262f8127ce3701ffd12" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>_TitleColor</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1abde80e675c91d3f1326aa9667c13c1d3" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>_Transparency</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a3169ea9d6c37a904d44e959d4753c714" prot="private" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>activeForm</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a3d155b43e5beb5467b1db4bdae7bc172" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>AddElement</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a7d76ecef25088a0fd9578fd4b498770c" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>ChangeTilte</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1ad8cabebed871cdeb4ae11890188c57be" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>ChangeWindow</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a1ddd735a9156802de746e389a9d2e9c3" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>DeleteElement</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a2fbcdad4e5e0c3942a479113d2deffb1" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>EndRedraw</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1af24f1580a621e0f7047fc3bbb5138d16" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>Focus</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a5d50b995c57de979294bf615e4e5a1c8" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>GetCoord</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a802663a211e98099e9fc9ad4dad6994f" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>GetElement</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1aba4c487170073562f7471e41164c6392" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>GetInputFromFrom</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1aeee663e7541c18cd2c703b9b88c281f6" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>GetMargin</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1ae3132dabb8fc92444c3fa31cb35c2495" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>GetPressedButton</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a021f39165e33339ac70044d8b9b99560" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>GetSize</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1acc42b4a4739a4cc94e5a5de993e00e87" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>GetWindowSize</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a33a17f79c99855fb543cc060b197ce99" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>Handler</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a85dc195e5b5c35e8d8b61f5893438c1a" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>Redraw</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a4e553d653ac35276f7f334fce3d0cddb" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>Render</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a7f9c6a4fc6b2e620ab29acd339955a4b" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>SetElement</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1afdfac77ae4d36dc21c7e6a56b6f106ab" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>SetWindowColors</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1a603092d7729140f846c3b23f53885b05" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>StartRedraw</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1ae074267ec49af5a67e268aebd1d3aae6" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>Unfocus</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1ab379a62fdd71ba128d3c06f81bfa5b91" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>Window</name></member>
      <member refid="class_kolibri_lib_1_1window_1_1_window_1ada32f6771efe6e95b4c3ecf87c5ac3c7" prot="public" virt="non-virtual"><scope>KolibriLib::window::Window</scope><name>~Window</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
