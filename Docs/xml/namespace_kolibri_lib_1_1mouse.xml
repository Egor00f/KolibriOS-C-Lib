<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="ru">
  <compounddef id="namespace_kolibri_lib_1_1mouse" kind="namespace" language="C++">
    <compoundname>KolibriLib::mouse</compoundname>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="namespace_kolibri_lib_1_1mouse_1af0ffe83fe84c6327086d378dd4270aa9" prot="public" static="no" strong="no">
        <type></type>
        <name>MouseButtons</name>
        <qualifiedname>KolibriLib::mouse::MouseButtons</qualifiedname>
        <enumvalue id="namespace_kolibri_lib_1_1mouse_1af0ffe83fe84c6327086d378dd4270aa9a2f16e9ce174b50aff76cbd3b1d3e6676" prot="public">
          <name>LeftButton</name>
          <initializer>= 0b1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1mouse_1af0ffe83fe84c6327086d378dd4270aa9a81f658aba2f31b0312cb41fc09fcd3d0" prot="public">
          <name>RightButton</name>
          <initializer>= 0b10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1mouse_1af0ffe83fe84c6327086d378dd4270aa9a3cc769a4c85bddd8b1dd8bca8d9d7c66" prot="public">
          <name>CenterBtton</name>
          <initializer>= 0b100</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1mouse_1af0ffe83fe84c6327086d378dd4270aa9ad4eeb99a41d9020b94ce9c0bb0bcf1b1" prot="public">
          <name>FourButton</name>
          <initializer>= 0b1000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_kolibri_lib_1_1mouse_1af0ffe83fe84c6327086d378dd4270aa9a32600ba7b3338b51719e58770bc2a48f" prot="public">
          <name>FiveButton</name>
          <initializer>= 0b10000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" line="14" column="1" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" bodystart="15" bodyend="21"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespace_kolibri_lib_1_1mouse_1a62aae3bff5a15d2c1aacef753a8a5d05" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* KolibriLib::mouse::CursorHandle</definition>
        <argsstring></argsstring>
        <name>CursorHandle</name>
        <qualifiedname>KolibriLib::mouse::CursorHandle</qualifiedname>
        <briefdescription>
<para>Хендл курсора мыши </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" line="77" column="14" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespace_kolibri_lib_1_1mouse_1a1ed776d98798432ed1d634b3a18dd181" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref></type>
        <definition>UI::Coord KolibriLib::mouse::GetMousePositionOnSreen</definition>
        <argsstring>()</argsstring>
        <name>GetMousePositionOnSreen</name>
        <qualifiedname>KolibriLib::mouse::GetMousePositionOnSreen</qualifiedname>
        <briefdescription>
<para>Получить позицияю курсора на экране </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>(point) позиция курсора абсолютно </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" line="25" column="18" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" bodystart="25" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1mouse_1af5c71bb6951c9963f3e8f7366b343ab0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref></type>
        <definition>UI::Coord KolibriLib::mouse::GetMousePositionInWindow</definition>
        <argsstring>()</argsstring>
        <name>GetMousePositionInWindow</name>
        <qualifiedname>KolibriLib::mouse::GetMousePositionInWindow</qualifiedname>
        <briefdescription>
<para>Получить позицияю курсора внутри окна </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>(point) позиция курсора относительно окна </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" line="34" column="18" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" bodystart="34" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1mouse_1a7ae50aac73ac33bc25e269c12522a024" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t KolibriLib::mouse::GetMouseButtons</definition>
        <argsstring>()</argsstring>
        <name>GetMouseButtons</name>
        <qualifiedname>KolibriLib::mouse::GetMouseButtons</qualifiedname>
        <briefdescription>
<para>Проверить какие кнопки мыши нажаты </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" line="43" column="17" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1mouse_1a56edecd4a7aa3f7af9eadf9ea32e93c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t KolibriLib::mouse::GetMouseWheels</definition>
        <argsstring>()</argsstring>
        <name>GetMouseWheels</name>
        <qualifiedname>KolibriLib::mouse::GetMouseWheels</qualifiedname>
        <briefdescription>
<para>колёсико мыши </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" line="50" column="17" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1mouse_1a39c94a2a4489ad8d4ec05a07ac13e259" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::mouse::EmulateMouse</definition>
        <argsstring>(uint8_t m)</argsstring>
        <name>EmulateMouse</name>
        <qualifiedname>KolibriLib::mouse::EmulateMouse</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" line="60" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" bodystart="60" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1mouse_1ad5181e5115b88147badd22a0c19cbe4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::mouse::CenterCursor</definition>
        <argsstring>()</argsstring>
        <name>CenterCursor</name>
        <qualifiedname>KolibriLib::mouse::CenterCursor</qualifiedname>
        <briefdescription>
<para>Центрировать курсор </para>
        </briefdescription>
        <detaileddescription>
<sect4 id="namespace_kolibri_lib_1_1_u_i_1_1text_1Функция">
<title>устанавливает курсор в середину экрана</title></sect4>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" line="69" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" bodystart="69" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1mouse_1afa9e02a685efd7b6ab8f92b728ee1a2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_kolibri_lib_1_1mouse_1a62aae3bff5a15d2c1aacef753a8a5d05" kindref="member">CursorHandle</ref></type>
        <definition>CursorHandle KolibriLib::mouse::LoadCursor</definition>
        <argsstring>(const filesystem::Path &amp;path)</argsstring>
        <name>LoadCursor</name>
        <qualifiedname>KolibriLib::mouse::LoadCursor</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1filesystem_1_1_path" kindref="compound">filesystem::Path</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Загрузить курсор мыши </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>путь до файла с курсором </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Хендл загруженного курсора </para>
</simplesect>
</para>
<sect4 id="namespace_kolibri_lib_1_1mouse_1Файл">
<title>курсора должен быть в формате .cur, стандартном для MS Windows, причём размером 32*32 пикселя</title></sect4>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" line="84" column="21" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1mouse_1ac82f2a9273155c4a3d12aa894c0edb5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_kolibri_lib_1_1mouse_1a62aae3bff5a15d2c1aacef753a8a5d05" kindref="member">CursorHandle</ref></type>
        <definition>CursorHandle KolibriLib::mouse::LoadCursor</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>LoadCursor</name>
        <qualifiedname>KolibriLib::mouse::LoadCursor</qualifiedname>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Загрузить курсор мыши </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Указатель на изображение </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Хендл загруженного курсора </para>
</simplesect>
</para>
<sect4 id="namespace_kolibri_lib_1_1mouse_1Файл">
<title>курсора должен быть в формате .cur, стандартном для MS Windows, причём размером 32*32 пикселя</title></sect4>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" line="93" column="21" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1mouse_1a21b758a85831bd3a66ac4cd10ac632a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_kolibri_lib_1_1mouse_1a62aae3bff5a15d2c1aacef753a8a5d05" kindref="member">CursorHandle</ref></type>
        <definition>CursorHandle KolibriLib::mouse::SetCursor</definition>
        <argsstring>(CursorHandle handle)</argsstring>
        <name>SetCursor</name>
        <qualifiedname>KolibriLib::mouse::SetCursor</qualifiedname>
        <param>
          <type><ref refid="namespace_kolibri_lib_1_1mouse_1a62aae3bff5a15d2c1aacef753a8a5d05" kindref="member">CursorHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Установить курсор </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>хендл устанавливаемого курсора </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>хендл предыдушего курсора </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" line="107" column="21" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="namespace_kolibri_lib_1_1mouse_1a3291c052d3b5cbffadecfc548a047b17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::mouse::DeleteCursor</definition>
        <argsstring>(CursorHandle handle)</argsstring>
        <name>DeleteCursor</name>
        <qualifiedname>KolibriLib::mouse::DeleteCursor</qualifiedname>
        <param>
          <type><ref refid="namespace_kolibri_lib_1_1mouse_1a62aae3bff5a15d2c1aacef753a8a5d05" kindref="member">CursorHandle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" line="112" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" bodystart="112" bodyend="115"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Работа с мышью </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/input/mouse.hpp" line="12" column="5"/>
  </compounddef>
</doxygen>
