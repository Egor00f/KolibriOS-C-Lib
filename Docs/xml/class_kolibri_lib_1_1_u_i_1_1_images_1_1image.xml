<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="class_kolibri_lib_1_1_u_i_1_1_images_1_1image" kind="class" language="C++" prot="public">
    <compoundname>KolibriLib::UI::Images::image</compoundname>
    <basecompoundref refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element" prot="public" virt="non-virtual">KolibriLib::UI::UIElement</basecompoundref>
    <includes refid="image_8hpp" local="no">image.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_kolibri_lib_1_1_u_i_1_1_images_1_1image_1a53a7f11277c52f9a081c1b891659a36b" prot="private" static="no" mutable="no">
        <type>Image *</type>
        <definition>Image* KolibriLib::UI::Images::image::_img</definition>
        <argsstring></argsstring>
        <name>_img</name>
        <qualifiedname>KolibriLib::UI::Images::image::_img</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" line="25" column="23" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1_images_1_1image_1aff400addb0990d30e8e3c36fcb015d26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KolibriLib::UI::Images::image::image</definition>
        <argsstring>(point&lt; int &gt; coord={0, 0}, Size size={100, 100}, std::string Path=DefaultImage)</argsstring>
        <name>image</name>
        <qualifiedname>KolibriLib::UI::Images::image::image</qualifiedname>
        <param>
          <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">point</ref>&lt; int &gt;</type>
          <declname>coord</declname>
          <defval>{0, 0}</defval>
        </param>
        <param>
          <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">Size</ref></type>
          <declname>size</declname>
          <defval>{100, 100}</defval>
        </param>
        <param>
          <type>std::string</type>
          <declname>Path</declname>
          <defval>DefaultImage</defval>
        </param>
        <briefdescription>
<para>Конструктор </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Path</parametername>
</parameternamelist>
<parameterdescription>
<para>Путь до картинки </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Margin</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" line="33" column="17" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1_images_1_1image_1afe381df52601a9aaa1def56c8fdff592" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KolibriLib::UI::Images::image::~image</definition>
        <argsstring>()</argsstring>
        <name>~image</name>
        <qualifiedname>KolibriLib::UI::Images::image::~image</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" line="34" column="17" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1_images_1_1image_1a9bc3f08669991f8475c50ed1b915f6d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::Images::image::LoadImage</definition>
        <argsstring>(const std::string &amp;Path)</argsstring>
        <name>LoadImage</name>
        <qualifiedname>KolibriLib::UI::Images::image::LoadImage</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>Path</declname>
        </param>
        <briefdescription>
<para>Загрузить изображение </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Path</parametername>
</parameternamelist>
<parameterdescription>
<para>путь до файла </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" line="38" column="22" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" bodystart="55" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1_images_1_1image_1a12dc3e1d6e0fa31e558e2cfb7dd86058" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::Images::image::Render</definition>
        <argsstring>(Size size={0, 0})</argsstring>
        <name>Render</name>
        <qualifiedname>KolibriLib::UI::Images::image::Render</qualifiedname>
        <param>
          <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">Size</ref></type>
          <declname>size</declname>
          <defval>{0, 0}</defval>
        </param>
        <briefdescription>
<para>Вывести изображение в окно </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Размер выводимого изображения </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
<sect4 id="class_kolibri_lib_1_1_u_i_1_1_images_1_1image_1Можно">
<title>растянуть/сжать выводимое изображение введя новые размеры в переменную size, само изображение при этом не изменяется</title></sect4>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" line="43" column="22" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" bodystart="90" bodyend="101"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Картинка как элемент интерфейса </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>KolibriLib::UI::Images::image</label>
        <link refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1image"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KolibriLib::UI::UIElement</label>
        <link refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>KolibriLib::UI::Images::image</label>
        <link refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1image"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>KolibriLib::UI::UIElement</label>
        <link refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element"/>
        <childnode refid="3" relation="usage">
          <edgelabel>_coord</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>_size</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>KolibriLib::point&lt; int &gt;</label>
        <link refid="struct_kolibri_lib_1_1point"/>
      </node>
      <node id="4">
        <label>KolibriLib::point&lt; unsigned &gt;</label>
        <link refid="struct_kolibri_lib_1_1point"/>
      </node>
    </collaborationgraph>
    <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" line="22" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/image.hpp" bodystart="23" bodyend="44"/>
    <listofallmembers>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a6a32e2b61ba20d655583fcfe6da82668" prot="protected" virt="non-virtual"><scope>KolibriLib::UI::Images::image</scope><name>_coord</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1image_1a53a7f11277c52f9a081c1b891659a36b" prot="private" virt="non-virtual"><scope>KolibriLib::UI::Images::image</scope><name>_img</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a6dfc8327d6b3038cae0e85c0efc01b68" prot="protected" virt="non-virtual"><scope>KolibriLib::UI::Images::image</scope><name>_MainColor</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a1f504101c3f76fb890f4dc1bf38c637b" prot="protected" virt="non-virtual"><scope>KolibriLib::UI::Images::image</scope><name>_Margin</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a4094c4e31f3891565dbbbcc5b8de8e3f" prot="protected" virt="non-virtual"><scope>KolibriLib::UI::Images::image</scope><name>_size</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1af88ac59a7195dfbe8588a68776cb645d" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::image</scope><name>GetColor</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a9d6acdb3e6c0c1576805c578595e3ce9" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::image</scope><name>GetCoord</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1ab1aa7de81042fd3cdc40e24abf01e854" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::image</scope><name>GetMargin</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1ab4805c825cf72f31fe4a3a776c409f3d" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::image</scope><name>GetSize</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1image_1aff400addb0990d30e8e3c36fcb015d26" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::image</scope><name>image</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1image_1a9bc3f08669991f8475c50ed1b915f6d1" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::image</scope><name>LoadImage</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1image_1a12dc3e1d6e0fa31e558e2cfb7dd86058" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::image</scope><name>Render</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a6f871026573aee83d1fe859b3320625d" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::image</scope><name>SetColor</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1ae0b96d011b65b628af2dcc0b6dc45fe3" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::image</scope><name>SetCoord</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1ad299cc03e0b4fb659186d770a63f9a2b" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::image</scope><name>SetSize</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a2711acf46a6b4eac37d584c0255dab5b" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::image</scope><name>UIElement</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1image_1afe381df52601a9aaa1def56c8fdff592" prot="public" virt="non-virtual"><scope>KolibriLib::UI::Images::image</scope><name>~image</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
