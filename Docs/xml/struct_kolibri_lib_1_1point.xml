<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="struct_kolibri_lib_1_1point" kind="struct" language="C++" prot="public">
    <compoundname>KolibriLib::point</compoundname>
    <includes refid="small_8hpp" local="no">small.hpp</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_kolibri_lib_1_1point_1add46882563c402c224b23c85049f7f34" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T KolibriLib::point&lt; T &gt;::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <qualifiedname>KolibriLib::point::x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/small.hpp" line="24" column="11" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/small.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_kolibri_lib_1_1point_1a2552f28a0a4bd6d41b0b75c7e3dec4e0" prot="public" static="no" mutable="no">
        <type>T</type>
        <definition>T KolibriLib::point&lt; T &gt;::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <qualifiedname>KolibriLib::point::y</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/small.hpp" line="25" column="11" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/small.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_kolibri_lib_1_1point_1a1013fc5347d236c0728e8f16b4a1666c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">point</ref>&lt; T &gt; &amp;</type>
        <definition>point&lt; T &gt; &amp; KolibriLib::point&lt; T &gt;::operator=</definition>
        <argsstring>(point&lt; T &gt; p)</argsstring>
        <name>operator=</name>
        <qualifiedname>KolibriLib::point::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_kolibri_lib_1_1point" kindref="compound">point</ref>&lt; T &gt;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/small.hpp" line="28" column="15" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/small.hpp" bodystart="28" bodyend="33"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Просто точка </para>
    </briefdescription>
    <detaileddescription>
<sect4 id="struct_kolibri_lib_1_1point_1Если">
<title>необходимо использовать конкретный теип данных для точки используйте шаблоны. Например: point&lt;uint64_t&gt; p;</title></sect4>
    </detaileddescription>
    <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/small.hpp" line="22" column="5" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/small.hpp" bodystart="23" bodyend="34"/>
    <listofallmembers>
      <member refid="struct_kolibri_lib_1_1point_1a1013fc5347d236c0728e8f16b4a1666c" prot="public" virt="non-virtual"><scope>KolibriLib::point</scope><name>operator=</name></member>
      <member refid="struct_kolibri_lib_1_1point_1add46882563c402c224b23c85049f7f34" prot="public" virt="non-virtual"><scope>KolibriLib::point</scope><name>x</name></member>
      <member refid="struct_kolibri_lib_1_1point_1a2552f28a0a4bd6d41b0b75c7e3dec4e0" prot="public" virt="non-virtual"><scope>KolibriLib::point</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
