<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="ru">
  <compounddef id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text" kind="class" language="C++" prot="public">
    <compoundname>KolibriLib::UI::text::Text</compoundname>
    <derivedcompoundref refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label" prot="public" virt="non-virtual">KolibriLib::UI::text::TextLabel</derivedcompoundref>
    <includes refid="text_8hpp" local="no">text.hpp</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a7b913670982e4ab5ab171e70404ec19b" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char" kindref="compound">Char</ref> &gt;</type>
        <definition>std::vector&lt;Char&gt; KolibriLib::UI::text::Text::_data</definition>
        <argsstring></argsstring>
        <name>_data</name>
        <qualifiedname>KolibriLib::UI::text::Text::_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="395" column="29" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" bodystart="395" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a848c43c18bd23bf2c36be5de346d9ee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KolibriLib::UI::text::Text::Text</definition>
        <argsstring>()</argsstring>
        <name>Text</name>
        <qualifiedname>KolibriLib::UI::text::Text::Text</qualifiedname>
        <briefdescription>
<para>Конструктор </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="313" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a0c94663549acb84e05bf203673bdf73e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KolibriLib::UI::text::Text::~Text</definition>
        <argsstring>()</argsstring>
        <name>~Text</name>
        <qualifiedname>KolibriLib::UI::text::Text::~Text</qualifiedname>
        <briefdescription>
<para>Деструктор </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="316" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a6304a4ae03858133d064303a9f4aa640" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::text::Text::Add</definition>
        <argsstring>(const Char &amp;c)</argsstring>
        <name>Add</name>
        <qualifiedname>KolibriLib::UI::text::Text::Add</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char" kindref="compound">Char</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Добавить символ в конец </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>символ </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="320" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a658e87b66c50a1a6e6d3d39640dad143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::text::Text::Add</definition>
        <argsstring>(const std::string &amp;txt)</argsstring>
        <name>Add</name>
        <qualifiedname>KolibriLib::UI::text::Text::Add</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>txt</declname>
        </param>
        <briefdescription>
<para>Добавить строку в конец </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>txt</parametername>
</parameternamelist>
<parameterdescription>
<para>строка </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="324" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1af4ad74911003d2d01b88bba3a84782b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::text::Text::Add</definition>
        <argsstring>(const Images::img &amp;img)</argsstring>
        <name>Add</name>
        <qualifiedname>KolibriLib::UI::text::Text::Add</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1img" kindref="compound">Images::img</ref> &amp;</type>
          <declname>img</declname>
        </param>
        <briefdescription>
<para>долбавить изображение в конец </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>img</parametername>
</parameternamelist>
<parameterdescription>
<para>Добавляемое изображение </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="328" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a50f90789d11b5c32a1ca876ec3925ae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::text::Text::insert</definition>
        <argsstring>(const Char &amp;c, int i)</argsstring>
        <name>insert</name>
        <qualifiedname>KolibriLib::UI::text::Text::insert</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char" kindref="compound">Char</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Вставить элемент </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Символ </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>номер </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="333" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a279e3feed8526c479ebcf9d37257f2cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::text::Text::insert</definition>
        <argsstring>(const std::string &amp;txt, int i)</argsstring>
        <name>insert</name>
        <qualifiedname>KolibriLib::UI::text::Text::insert</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>txt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Вставить строку </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>txt</parametername>
</parameternamelist>
<parameterdescription>
<para>строка </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>номер </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="338" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a6fea058c7b14276e03d540219763e189" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::text::Text::insert</definition>
        <argsstring>(const Images::img &amp;img, int i)</argsstring>
        <name>insert</name>
        <qualifiedname>KolibriLib::UI::text::Text::insert</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1_images_1_1img" kindref="compound">Images::img</ref> &amp;</type>
          <declname>img</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Вставить изображение </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>img</parametername>
</parameternamelist>
<parameterdescription>
<para>изображение </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>номер </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="343" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a2b3cc12a6b74de60c7e74f90fed4fec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::text::Text::Delete</definition>
        <argsstring>(int i)</argsstring>
        <name>Delete</name>
        <qualifiedname>KolibriLib::UI::text::Text::Delete</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Удалить <ref refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char" kindref="compound">Char</ref> из текста </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>Номер удаляемого Charа </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="347" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1ab7918ccccb454f8f7c7d03d1c22f682f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::text::Text::Print</definition>
        <argsstring>(const UI::Coord &amp;coord) const</argsstring>
        <name>Print</name>
        <qualifiedname>KolibriLib::UI::text::Text::Print</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1point" kindref="compound">UI::Coord</ref> &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
<para>Вывести текст </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coord</parametername>
</parameternamelist>
<parameterdescription>
<para>Координаты(левый верхний угол) текста </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="351" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a143c7924e3daa06259bc93b3e7306bc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::text::Text::SetFont</definition>
        <argsstring>(const Fonts::Font &amp;Font)</argsstring>
        <name>SetFont</name>
        <qualifiedname>KolibriLib::UI::text::Text::SetFont</qualifiedname>
        <param>
          <type>const <ref refid="struct_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1_1_font" kindref="compound">Fonts::Font</ref> &amp;</type>
          <declname>Font</declname>
        </param>
        <briefdescription>
<para>Изменить шрифт символов </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FontSize</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
<sect4 id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1Изменяет">
<title>размер символов для всех символов</title></sect4>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="356" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a72454cdc486cd55c422ce58da282702a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::text::Text::SetTextColor</definition>
        <argsstring>(const Colors::Color &amp;Color)</argsstring>
        <name>SetTextColor</name>
        <qualifiedname>KolibriLib::UI::text::Text::SetTextColor</qualifiedname>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>Color</declname>
        </param>
        <briefdescription>
<para>Изменить цвет текста для всех символов </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Color</parametername>
</parameternamelist>
<parameterdescription>
<para><linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="360" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a3c5e7c50af916002563b29b55822cacd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::text::Text::SetBackgroundColor</definition>
        <argsstring>(const Colors::Color &amp;Color)</argsstring>
        <name>SetBackgroundColor</name>
        <qualifiedname>KolibriLib::UI::text::Text::SetBackgroundColor</qualifiedname>
        <param>
          <type>const <ref refid="union_kolibri_lib_1_1_colors_1_1_color" kindref="compound">Colors::Color</ref> &amp;</type>
          <declname>Color</declname>
        </param>
        <briefdescription>
<para>Изменить цвет фона для всех символов </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Color</parametername>
</parameternamelist>
<parameterdescription>
<para><linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="364" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a6752e4a7728fad2ad4f22c38ded456a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string &amp;</type>
        <definition>std::string &amp; KolibriLib::UI::text::Text::GetText</definition>
        <argsstring>() const</argsstring>
        <name>GetText</name>
        <qualifiedname>KolibriLib::UI::text::Text::GetText</qualifiedname>
        <briefdescription>
<para>Получить текст </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="368" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a583340eae4461e85511dbd1aefeb3e36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char" kindref="compound">Char</ref> &amp;</type>
        <definition>const Char &amp; KolibriLib::UI::text::Text::GetChar</definition>
        <argsstring>(int i) const</argsstring>
        <name>GetChar</name>
        <qualifiedname>KolibriLib::UI::text::Text::GetChar</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Получить символ под номером i. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>номер </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>_data[i] </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="373" column="28"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a20eacf9e8b1e84ae39895be49e88683e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t KolibriLib::UI::text::Text::length</definition>
        <argsstring>() const</argsstring>
        <name>length</name>
        <qualifiedname>KolibriLib::UI::text::Text::length</qualifiedname>
        <briefdescription>
<para>Получить длину текста </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>длина текста </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="377" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a924a553bcf51e37053e5f4a365c4d568" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned KolibriLib::UI::text::Text::lenghtPX</definition>
        <argsstring>() const</argsstring>
        <name>lenghtPX</name>
        <qualifiedname>KolibriLib::UI::text::Text::lenghtPX</qualifiedname>
        <briefdescription>
<para>Получить длинну текста в пикселях </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="381" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a9bb52ff66ccb36a28959277f99807a47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void KolibriLib::UI::text::Text::SetText</definition>
        <argsstring>(std::string text)</argsstring>
        <name>SetText</name>
        <qualifiedname>KolibriLib::UI::text::Text::SetText</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para><linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="385" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1aba0d8a544feb5d92e2ceedfda4cb3bea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text" kindref="compound">Text</ref> &amp;</type>
        <definition>Text &amp; KolibriLib::UI::text::Text::operator=</definition>
        <argsstring>(const Text &amp;txt)</argsstring>
        <name>operator=</name>
        <qualifiedname>KolibriLib::UI::text::Text::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text" kindref="compound">Text</ref> &amp;</type>
          <declname>txt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="387" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a2f5cda180a5ba57e4774fb6bf1e22fa2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool KolibriLib::UI::text::Text::operator==</definition>
        <argsstring>(const Text &amp;txt) const</argsstring>
        <name>operator==</name>
        <qualifiedname>KolibriLib::UI::text::Text::operator==</qualifiedname>
        <param>
          <type>const <ref refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text" kindref="compound">Text</ref> &amp;</type>
          <declname>txt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>txt</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="392" column="22"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Текст </para>
    </briefdescription>
    <detaileddescription>
<sect4 id="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1Фактически">
<title>std::vector <ref refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_char" kindref="compound">ов</ref></title></sect4>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>KolibriLib::UI::CheckBox</label>
        <link refid="class_kolibri_lib_1_1_u_i_1_1_check_box"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>KolibriLib::UI::buttons::Button</label>
        <link refid="class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>KolibriLib::UI::text::Text</label>
        <link refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text"/>
      </node>
      <node id="2">
        <label>KolibriLib::UI::text::TextLabel</label>
        <link refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" line="309" column="13" bodyfile="F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp" bodystart="310" bodyend="396"/>
    <listofallmembers>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a7b913670982e4ab5ab171e70404ec19b" prot="protected" virt="non-virtual"><scope>KolibriLib::UI::text::Text</scope><name>_data</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a6304a4ae03858133d064303a9f4aa640" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Text</scope><name>Add</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a658e87b66c50a1a6e6d3d39640dad143" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Text</scope><name>Add</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1af4ad74911003d2d01b88bba3a84782b8" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Text</scope><name>Add</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a2b3cc12a6b74de60c7e74f90fed4fec9" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Text</scope><name>Delete</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a583340eae4461e85511dbd1aefeb3e36" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Text</scope><name>GetChar</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a6752e4a7728fad2ad4f22c38ded456a5" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Text</scope><name>GetText</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a50f90789d11b5c32a1ca876ec3925ae3" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Text</scope><name>insert</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a279e3feed8526c479ebcf9d37257f2cf" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Text</scope><name>insert</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a6fea058c7b14276e03d540219763e189" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Text</scope><name>insert</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a924a553bcf51e37053e5f4a365c4d568" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Text</scope><name>lenghtPX</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a20eacf9e8b1e84ae39895be49e88683e" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Text</scope><name>length</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1aba0d8a544feb5d92e2ceedfda4cb3bea" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Text</scope><name>operator=</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a2f5cda180a5ba57e4774fb6bf1e22fa2" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Text</scope><name>operator==</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1ab7918ccccb454f8f7c7d03d1c22f682f" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Text</scope><name>Print</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a3c5e7c50af916002563b29b55822cacd" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Text</scope><name>SetBackgroundColor</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a143c7924e3daa06259bc93b3e7306bc5" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Text</scope><name>SetFont</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a9bb52ff66ccb36a28959277f99807a47" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Text</scope><name>SetText</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a72454cdc486cd55c422ce58da282702a" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Text</scope><name>SetTextColor</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a848c43c18bd23bf2c36be5de346d9ee0" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Text</scope><name>Text</name></member>
      <member refid="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a0c94663549acb84e05bf203673bdf73e" prot="public" virt="non-virtual"><scope>KolibriLib::UI::text::Text</scope><name>~Text</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
