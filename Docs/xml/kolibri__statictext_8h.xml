<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="ru">
  <compounddef id="kolibri__statictext_8h" kind="file" language="C++">
    <compoundname>kolibri_statictext.h</compoundname>
    <includes refid="kos32sys_8h" local="no">kos32sys.h</includes>
    <includes refid="os_8hpp" local="no">kolibriLib/system/os.hpp</includes>
    <includedby refid="kolibri__gui__elements_8h" local="yes">C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui_elements.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h</label>
        <link refid="kolibri__statictext_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>kos32sys.h</label>
        <link refid="kos32sys_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>kolibriLib/color.hpp</label>
        <link refid="color_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>kolibriLib/system/filesystem.hpp</label>
        <link refid="filesystem_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>kolibriLib/system/os.hpp</label>
        <link refid="os_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdarg.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
      <node id="10">
        <label>sys/ksys.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui.h</label>
        <link refid="kolibri__gui_8h_source"/>
      </node>
      <node id="2">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_gui_elements.h</label>
        <link refid="kolibri__gui__elements_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h</label>
        <link refid="kolibri__statictext_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structstatictext" prot="public">statictext</innerclass>
    <innerclass refid="structstaticnum" prot="public">staticnum</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="kolibri__statictext_8h_1a1201c14bf3d1ae648d759a790bd98932" prot="public" static="no" strong="no">
        <type></type>
        <name>encoding_t</name>
        <enumvalue id="kolibri__statictext_8h_1a1201c14bf3d1ae648d759a790bd98932ad1fa5891b16c9dbf4559a3d20b7251c3" prot="public">
          <name>cp866</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__statictext_8h_1a1201c14bf3d1ae648d759a790bd98932a6f8aaa3ff0dfe6c60c1a557f827ec6f8" prot="public">
          <name>CP866</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__statictext_8h_1a1201c14bf3d1ae648d759a790bd98932a09f95aafce7d0add220c0491dc5cb9fd" prot="public">
          <name>UTF16</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="kolibri__statictext_8h_1a1201c14bf3d1ae648d759a790bd98932ac4aa8bf4aaf220c87545078d3c43baaa" prot="public">
          <name>UTF8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" line="7" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" bodystart="7" bodyend="12"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="kolibri__statictext_8h_1a14f46bf4bfd9a0e95eff76335c108ac5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structstatictext" kindref="compound">statictext</ref> *</type>
        <definition>statictext * kolibri_statictext</definition>
        <argsstring>(statictext *st, uint32_t xy, char *text, encoding_t enc, int size, color_t font, color_t bg)</argsstring>
        <name>kolibri_statictext</name>
        <param>
          <type><ref refid="structstatictext" kindref="compound">statictext</ref> *</type>
          <declname>st</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>xy</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>encoding_t</type>
          <declname>enc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>font</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>bg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" line="29" column="12" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" bodystart="29" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__statictext_8h_1a59bb849195a8854bb0a23f39cecdab13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structstatictext" kindref="compound">statictext</ref> *</type>
        <definition>statictext * kolibri_statictext_def</definition>
        <argsstring>(statictext *st, uint32_t xy, char *text)</argsstring>
        <name>kolibri_statictext_def</name>
        <param>
          <type><ref refid="structstatictext" kindref="compound">statictext</ref> *</type>
          <declname>st</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>xy</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" line="42" column="12" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__statictext_8h_1ab7af400bfe4ed1fbf6aba85cac4d8e46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structstatictext" kindref="compound">statictext</ref> *</type>
        <definition>statictext * kolibri_new_statictext</definition>
        <argsstring>(uint32_t xy, char *text, encoding_t enc, int size, color_t font, color_t bg)</argsstring>
        <name>kolibri_new_statictext</name>
        <param>
          <type>uint32_t</type>
          <declname>xy</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>encoding_t</type>
          <declname>enc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>font</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>bg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" line="47" column="12" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" bodystart="47" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__statictext_8h_1a86038909c684b0a2a8f3b761c395c48c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structstatictext" kindref="compound">statictext</ref> *</type>
        <definition>statictext * kolibri_new_statictext_def</definition>
        <argsstring>(uint32_t xy, char *text)</argsstring>
        <name>kolibri_new_statictext_def</name>
        <param>
          <type>uint32_t</type>
          <declname>xy</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" line="54" column="12" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__statictext_8h_1a9899840cca7c567899ef7bddbffe6fc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>__attribute__</definition>
        <argsstring>((__stdcall__)) void statictext_draw(statictext *st)</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(__stdcall__)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" line="59" column="1" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" bodystart="59" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__statictext_8h_1ac74fcac76f6c3259d0909210c48524c2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gui_add_statictext</definition>
        <argsstring>(kolibri_window *wnd, statictext *st)</argsstring>
        <name>gui_add_statictext</name>
        <param>
          <type><ref refid="structkolibri__window" kindref="compound">kolibri_window</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type><ref refid="structstatictext" kindref="compound">statictext</ref> *</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" line="72" column="20" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__statictext_8h_1a909a3a0e6b910924b6e0933ed293a91b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structstaticnum" kindref="compound">staticnum</ref> *</type>
        <definition>staticnum * kolibri_staticnum</definition>
        <argsstring>(staticnum *st, uint32_t xy, int32_t width, int16_t number, encoding_t enc, int size, color_t font, color_t bg)</argsstring>
        <name>kolibri_staticnum</name>
        <param>
          <type><ref refid="structstaticnum" kindref="compound">staticnum</ref> *</type>
          <declname>st</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>xy</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>number</declname>
        </param>
        <param>
          <type>encoding_t</type>
          <declname>enc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>font</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>bg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" line="79" column="11" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" bodystart="79" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__statictext_8h_1a37a728bda419f1a338351ea652b58484" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structstaticnum" kindref="compound">staticnum</ref> *</type>
        <definition>staticnum * kolibri_staticnum_def</definition>
        <argsstring>(staticnum *st, uint32_t xy, int16_t width, int32_t number)</argsstring>
        <name>kolibri_staticnum_def</name>
        <param>
          <type><ref refid="structstaticnum" kindref="compound">staticnum</ref> *</type>
          <declname>st</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>xy</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" line="93" column="11" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__statictext_8h_1a3f3a0a7f763ae30a84a062fe79846de4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structstaticnum" kindref="compound">staticnum</ref> *</type>
        <definition>staticnum * kolibri_new_staticnum</definition>
        <argsstring>(uint32_t xy, int32_t width, int32_t number, encoding_t enc, int size, color_t font, color_t bg)</argsstring>
        <name>kolibri_new_staticnum</name>
        <param>
          <type>uint32_t</type>
          <declname>xy</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>number</declname>
        </param>
        <param>
          <type>encoding_t</type>
          <declname>enc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>font</declname>
        </param>
        <param>
          <type>color_t</type>
          <declname>bg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" line="98" column="11" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" bodystart="98" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__statictext_8h_1a57fec9fda3b6915e3fc30bc9496a0c6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structstaticnum" kindref="compound">staticnum</ref> *</type>
        <definition>staticnum * kolibri_new_staticnum_def</definition>
        <argsstring>(uint32_t xy, int32_t width, int32_t number)</argsstring>
        <name>kolibri_new_staticnum_def</name>
        <param>
          <type>uint32_t</type>
          <declname>xy</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" line="105" column="11" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="kolibri__statictext_8h_1ac1ced9ed7268301ca78d4efe49c72e21" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void gui_add_staticnum</definition>
        <argsstring>(kolibri_window *wnd, staticnum *sn)</argsstring>
        <name>gui_add_staticnum</name>
        <param>
          <type><ref refid="structkolibri__window" kindref="compound">kolibri_window</ref> *</type>
          <declname>wnd</declname>
        </param>
        <param>
          <type><ref refid="structstaticnum" kindref="compound">staticnum</ref> *</type>
          <declname>sn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" line="110" column="20" bodyfile="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h" bodystart="110" bodyend="113"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>KOLIBRI_STATICTEXT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>KOLIBRI_STATICTEXT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kos32sys.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;kolibriLib/system/os.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>cp866,<sp/><sp/></highlight><highlight class="comment">//<sp/>6x9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>CP866,<sp/><sp/></highlight><highlight class="comment">//<sp/>8x16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>UTF16,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>UTF8</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}<sp/>encoding_t;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="structstatictext" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>start_xy;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>color_flags;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>bg_color;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}<ref refid="structstatictext" kindref="compound">statictext</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="structstaticnum" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>start_xy;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>number;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>color_flags;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>bg_color;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>width;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}<ref refid="structstaticnum" kindref="compound">staticnum</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="structstatictext" kindref="compound">statictext</ref>*<sp/>kolibri_statictext(<ref refid="structstatictext" kindref="compound">statictext</ref>*<sp/>st,<sp/>uint32_t<sp/>xy,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text,<sp/>encoding_t<sp/>enc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/>color_t<sp/>font,<sp/>color_t<sp/>bg)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>st-&gt;start_xy<sp/>=<sp/>xy;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>st-&gt;text<sp/>=<sp/>text;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>st-&gt;color_flags<sp/>=<sp/>0x80000000;<sp/></highlight><highlight class="comment">//<sp/>asciiz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>st-&gt;bg_color<sp/>=<sp/>bg;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bg<sp/>&amp;<sp/>0xFFFFFF)<sp/>st-&gt;color_flags<sp/>|=<sp/>0x40000000;</highlight><highlight class="comment">//<sp/>use<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>st-&gt;color_flags<sp/>|=<sp/>((enc<sp/>&amp;<sp/>1)<sp/>&lt;&lt;<sp/>4)<sp/>|<sp/>(size<sp/>&amp;<sp/>7)<sp/>&lt;&lt;<sp/>24;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>st-&gt;color_flags<sp/>|=<sp/>font<sp/>&amp;<sp/>0xFFFFFF;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>st;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="structstatictext" kindref="compound">statictext</ref>*<sp/>kolibri_statictext_def(<ref refid="structstatictext" kindref="compound">statictext</ref>*<sp/>st,<sp/>uint32_t<sp/>xy,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kolibri_statictext(st,<sp/>xy,<sp/>text,<sp/>encoding_t::UTF8,<sp/>0,<sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().work_text,<sp/>0);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="structstatictext" kindref="compound">statictext</ref>*<sp/>kolibri_new_statictext(uint32_t<sp/>xy,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text,<sp/>encoding_t<sp/>enc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/>color_t<sp/>font,<sp/>color_t<sp/>bg)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstatictext" kindref="compound">statictext</ref><sp/>*st<sp/>=<sp/>(<ref refid="structstatictext" kindref="compound">statictext</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structstatictext" kindref="compound">statictext</ref>));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kolibri_statictext(st,<sp/>xy,<sp/>text,<sp/>enc,<sp/>size,<sp/>font,<sp/>bg);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="structstatictext" kindref="compound">statictext</ref>*<sp/>kolibri_new_statictext_def(uint32_t<sp/>xy,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kolibri_new_statictext(xy,<sp/>text,<sp/>encoding_t::UTF8,<sp/>0,<sp/><ref refid="namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf" kindref="member">KolibriLib::OS::GetSystemColors</ref>().work_text,<sp/>0);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">__attribute__((__stdcall__))</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>statictext_draw(<ref refid="structstatictext" kindref="compound">statictext</ref><sp/>*st)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__(</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int<sp/>$0x40&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>::</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">(4),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">(st-&gt;start_xy),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">(st-&gt;color_flags),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">(st-&gt;text),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">(st-&gt;bg_color)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>:);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gui_add_statictext(<ref refid="structkolibri__window" kindref="compound">kolibri_window</ref><sp/>*wnd,<sp/><ref refid="structstatictext" kindref="compound">statictext</ref>*<sp/>st)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>kolibri_window_add_element(wnd,<sp/>KOLIBRI_STATICTEXT,<sp/>st);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="structstaticnum" kindref="compound">staticnum</ref>*<sp/>kolibri_staticnum(<ref refid="structstaticnum" kindref="compound">staticnum</ref>*<sp/>st,<sp/>uint32_t<sp/>xy,<sp/>int32_t<sp/>width,<sp/>int16_t<sp/>number,<sp/>encoding_t<sp/>enc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/>color_t<sp/>font,<sp/>color_t<sp/>bg)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>st-&gt;start_xy<sp/>=<sp/>xy;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>st-&gt;number<sp/>=<sp/>number;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>st-&gt;color_flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>st-&gt;bg_color<sp/>=<sp/>bg;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bg<sp/>&amp;<sp/>0xFFFFFF)<sp/>st-&gt;color_flags<sp/>|=<sp/>0x40000000;</highlight><highlight class="comment">//<sp/>use<sp/>background</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>st-&gt;color_flags<sp/>|=<sp/>((enc<sp/>&amp;<sp/>1)<sp/>&lt;&lt;<sp/>4)<sp/>|<sp/>(size<sp/>&amp;<sp/>7)<sp/>&lt;&lt;<sp/>24;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>st-&gt;color_flags<sp/>|=<sp/>font<sp/>&amp;<sp/>0xFFFFFF;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>st-&gt;width<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>st;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><ref refid="structstaticnum" kindref="compound">staticnum</ref>*<sp/>kolibri_staticnum_def(<ref refid="structstaticnum" kindref="compound">staticnum</ref>*<sp/>st,<sp/>uint32_t<sp/>xy,<sp/>int16_t<sp/>width,<sp/>int32_t<sp/>number)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kolibri_staticnum(st,<sp/>xy,<sp/>width,<sp/>number,<sp/>0,<sp/>0,<sp/>kolibri_color_table.color_work_text,<sp/>0);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><ref refid="structstaticnum" kindref="compound">staticnum</ref>*<sp/>kolibri_new_staticnum(uint32_t<sp/>xy,<sp/>int32_t<sp/>width,<sp/>int32_t<sp/>number,<sp/>encoding_t<sp/>enc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/>color_t<sp/>font,<sp/>color_t<sp/>bg)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstaticnum" kindref="compound">staticnum</ref><sp/>*st<sp/>=<sp/>(<ref refid="structstaticnum" kindref="compound">staticnum</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structstaticnum" kindref="compound">staticnum</ref>));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kolibri_staticnum(st,<sp/>xy,<sp/>width,<sp/>number,<sp/>enc,<sp/>size,<sp/>font,<sp/>bg);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="structstaticnum" kindref="compound">staticnum</ref>*<sp/>kolibri_new_staticnum_def(uint32_t<sp/>xy,<sp/>int32_t<sp/>width,<sp/>int32_t<sp/>number)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kolibri_new_staticnum(xy,<sp/>width,<sp/>number,<sp/>cp866,<sp/>0,<sp/>kolibri_color_table.color_work_text,<sp/>0);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gui_add_staticnum(<ref refid="structkolibri__window" kindref="compound">kolibri_window</ref><sp/>*wnd,<sp/><ref refid="structstaticnum" kindref="compound">staticnum</ref>*<sp/>sn)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>kolibri_window_add_element(wnd,<sp/>KOLIBRI_STATICNUM,<sp/>sn);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">__attribute__((__stdcall__))</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>staticnum_draw(<ref refid="structstaticnum" kindref="compound">staticnum</ref><sp/>*st)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>uint32_t<sp/>fmt;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st-&gt;width<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt<sp/>=<sp/>(-st-&gt;width<sp/>&lt;&lt;<sp/>16);<sp/></highlight><highlight class="comment">//<sp/>leading<sp/>zeros,<sp/>decimal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fmt<sp/>=<sp/>(st-&gt;width<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>0x80000000;<sp/></highlight><highlight class="comment">//<sp/>no<sp/>leading<sp/>zeros,<sp/>decimal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>__asm__<sp/>__volatile__(</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int<sp/>$0x40&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>::</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">(47),</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;b&quot;</highlight><highlight class="normal">(fmt),</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;c&quot;</highlight><highlight class="normal">(st-&gt;number),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">(st-&gt;start_xy),</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;S&quot;</highlight><highlight class="normal">(st-&gt;color_flags),</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">(st-&gt;bg_color)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>:);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>KOLIBRI_STATICTEXT_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_statictext.h"/>
  </compounddef>
</doxygen>
