<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button" xml:lang="en-US">
<title>KolibriLib::UI::buttons::Button Class Reference</title>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary></indexterm>
<para>

<para>Класс для работы с кнопками </para>
 
</para>
<para>
<computeroutput>#include &lt;UI.hpp&gt;</computeroutput>
</para>
<para>Inheritance diagram for KolibriLib::UI::buttons::Button:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a7fcff771b84cb9f6977623a1fcd78704">Button</link> (<link linkend="_struct_kolibri_lib_1_1point">point</link> coord={0, 0}, <link linkend="_struct_kolibri_lib_1_1point">point</link> size={20, 20}, std::string text=&quot;Button&quot;, unsigned Margin=<link linkend="_namespace_kolibri_lib_1_1_u_i_1a779f87b2d214a96a03a08650f341ceb1">DefaultMargin</link>, ksys_color_t ButtonColor=OS::sys_color_table.work_button, ksys_color_t TextColor=OS::sys_color_table.work_text)</para>

<para>Это конструктор </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a859860ee8a4949b405a583b9bc8e063a">init</link> (<link linkend="_struct_kolibri_lib_1_1point">point</link> coord={0, 0}, <link linkend="_struct_kolibri_lib_1_1point">point</link> size={0, 0}, std::string text=&quot;Button&quot;, unsigned Margin=<link linkend="_namespace_kolibri_lib_1_1_u_i_1a779f87b2d214a96a03a08650f341ceb1">DefaultMargin</link>, ksys_color_t ButtonColor=OS::sys_color_table.work_button, ksys_color_t TextColor=OS::sys_color_table.work_text)</para>

<para>инициализировать параметры </para>
</listitem>
            <listitem><para><anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a88aa9763955c5febf86c5e930968d327"/>void <emphasis role="strong">render</emphasis> ()</para>

<para>Отрисовать кнопку </para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a018ac30303a5b12365f5251f5771bf6f">Handler</link> ()</para>

<para>Обработчик кнопки </para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a1558c18770a8747cf4f9fc490519378e">GetStatus</link> ()</para>

<para>Получить сосояние кнопки на момент последней обработки </para>
</listitem>
            <listitem><para>unsigned <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1ad4fb8af1571b871236b79a5a88627713">GetId</link> ()</para>

<para>Получить номер кнопки </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a0a235265d209cec4e8f735d416d25505">Deactivate</link> ()</para>

<para>Деактивировать кнопку </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a65b6a0809e8e43892e48065708fa01d1">Activate</link> ()</para>

<para>Активировать кнопку </para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">KolibriLib::UI::UIElement</link>        <itemizedlist>
            <listitem><para><emphasis role="strong">UIElement</emphasis> (<link linkend="_struct_kolibri_lib_1_1point">point</link> coord={0, 0}, <link linkend="_struct_kolibri_lib_1_1point">KolibriLib::point</link> size={16, 16}, unsigned Margin=<link linkend="_namespace_kolibri_lib_1_1_u_i_1a779f87b2d214a96a03a08650f341ceb1">DefaultMargin</link>)</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Additional Inherited Members    </title>
Protected Attributes inherited from <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">KolibriLib::UI::UIElement</link>        <itemizedlist>
            <listitem><para><link linkend="_struct_kolibri_lib_1_1point">KolibriLib::point</link> <emphasis role="strong">_coord</emphasis></para>

<para>Координаты </para>
</listitem>
            <listitem><para><link linkend="_struct_kolibri_lib_1_1point">KolibriLib::point</link> <emphasis role="strong">_size</emphasis></para>

<para>Размер </para>
</listitem>
            <listitem><para>unsigned <emphasis role="strong">_Margin</emphasis></para>

<para>Отступы </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Класс для работы с кнопками </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a7fcff771b84cb9f6977623a1fcd78704"/><section>
    <title>Button()</title>
<indexterm><primary>Button</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>Button</secondary></indexterm>
<para><computeroutput>KolibriLib::UI::buttons::Button::Button (<link linkend="_struct_kolibri_lib_1_1point">point</link> coord = <computeroutput>{0,&#160;0}</computeroutput>
, <link linkend="_struct_kolibri_lib_1_1point">point</link> size = <computeroutput>{20,&#160;20}</computeroutput>
, std::string text = <computeroutput>&quot;Button&quot;</computeroutput>
, unsigned Margin = <computeroutput><link linkend="_namespace_kolibri_lib_1_1_u_i_1a779f87b2d214a96a03a08650f341ceb1">DefaultMargin</link></computeroutput>
, ksys_color_t ButtonColor = <computeroutput>OS::sys_color_table.work_button</computeroutput>
, ksys_color_t TextColor = <computeroutput>OS::sys_color_table.work_text</computeroutput>
)</computeroutput></para><para>

<para>Это конструктор </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>coord</entry><entry>
<para>координата </para>
</entry>
                            </row>
                            <row>
<entry>size</entry><entry>
<para>размер </para>
</entry>
                            </row>
                            <row>
<entry>text</entry><entry>
<para>текст </para>
</entry>
                            </row>
                            <row>
<entry>Margin</entry><entry>
<para>отступы текста от границ </para>
</entry>
                            </row>
                            <row>
<entry>ButtonColor</entry><entry>
<para>цвет кнопки </para>
</entry>
                            </row>
                            <row>
<entry>TextColor</entry><entry>
<para>цвет текста </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a65b6a0809e8e43892e48065708fa01d1"/><section>
    <title>Activate()</title>
<indexterm><primary>Activate</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>Activate</secondary></indexterm>
<para><computeroutput>void KolibriLib::UI::buttons::Button::Activate ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Активировать кнопку </para>
</para>
<section xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1Противоположна">
<title><title>функции <link linkend="_">возвращает кнопку в рабочее состояние </link></title></title>
</section>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a0a235265d209cec4e8f735d416d25505"/><section>
    <title>Deactivate()</title>
<indexterm><primary>Deactivate</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>Deactivate</secondary></indexterm>
<para><computeroutput>void KolibriLib::UI::buttons::Button::Deactivate ( )</computeroutput></para><para>

<para>Деактивировать кнопку </para>
</para>
<section xml:id="__u_i_8hpp_1Эта">
<title><title>функция может выполнятся очень долго, если вы уже создали довольно много кнопок. Это становится действительно важно когда у вас объявленно более 2000 кнопок</title></title>
</section>
<section xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1В">
<title><title>Деактивированном состоянии кнопка &quot;Не нажимается&quot;, а её <link linkend="_ad0d68e6bef420992763b660326e7bb03">становится не действительным</link></title></title>
</section>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1ad4fb8af1571b871236b79a5a88627713"/><section>
    <title>GetId()</title>
<indexterm><primary>GetId</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>GetId</secondary></indexterm>
<para><computeroutput>unsigned KolibriLib::UI::buttons::Button::GetId ( )</computeroutput></para><para>

<para>Получить номер кнопки </para>
</para>

<para><formalpara><title>Returns</title>

<para><link linkend="_ad0d68e6bef420992763b660326e7bb03">_id</link></para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a1558c18770a8747cf4f9fc490519378e"/><section>
    <title>GetStatus()</title>
<indexterm><primary>GetStatus</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>GetStatus</secondary></indexterm>
<para><computeroutput>bool KolibriLib::UI::buttons::Button::GetStatus ( )</computeroutput></para><para>

<para>Получить сосояние кнопки на момент последней обработки </para>
</para>

<para><formalpara><title>Returns</title>

<para><link linkend="_acb97605ce20e14775fa5cffdbe02ef5f">_status</link></para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a018ac30303a5b12365f5251f5771bf6f"/><section>
    <title>Handler()</title>
<indexterm><primary>Handler</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>Handler</secondary></indexterm>
<para><computeroutput>bool KolibriLib::UI::buttons::Button::Handler ( )</computeroutput></para><para>

<para>Обработчик кнопки </para>
</para>

<para><formalpara><title>Returns</title>

<para>Состояние кнопки(Нажата/Ненажата) </para>
</formalpara>
</para>
<section xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1устанавливает">
<title><title>переменную #_status в true если эта кнопка нажата, иначе false</title></title>
</section>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a859860ee8a4949b405a583b9bc8e063a"/><section>
    <title>init()</title>
<indexterm><primary>init</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>init</secondary></indexterm>
<para><computeroutput>void KolibriLib::UI::buttons::Button::init (<link linkend="_struct_kolibri_lib_1_1point">point</link> coord = <computeroutput>{0,&#160;0}</computeroutput>
, <link linkend="_struct_kolibri_lib_1_1point">point</link> size = <computeroutput>{0,&#160;0}</computeroutput>
, std::string text = <computeroutput>&quot;Button&quot;</computeroutput>
, unsigned Margin = <computeroutput><link linkend="_namespace_kolibri_lib_1_1_u_i_1a779f87b2d214a96a03a08650f341ceb1">DefaultMargin</link></computeroutput>
, ksys_color_t ButtonColor = <computeroutput>OS::sys_color_table.work_button</computeroutput>
, ksys_color_t TextColor = <computeroutput>OS::sys_color_table.work_text</computeroutput>
)</computeroutput></para><para>

<para>инициализировать параметры </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>coord</entry><entry>
<para>координата </para>
</entry>
                            </row>
                            <row>
<entry>size</entry><entry>
<para>размер </para>
</entry>
                            </row>
                            <row>
<entry>text</entry><entry>
<para>текст </para>
</entry>
                            </row>
                            <row>
<entry>Margin</entry><entry>
<para>отступы текста от границ </para>
</entry>
                            </row>
                            <row>
<entry>BackgroundColor</entry><entry>
<para>цвет кнопки </para>
</entry>
                            </row>
                            <row>
<entry>TextColor</entry><entry>
<para>цвет текста </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
F:/KolibriOs/Kalc/KolibriOS-Cpp-Lib/src/include/kolibriLib/UI.hpp</section>
</section>
