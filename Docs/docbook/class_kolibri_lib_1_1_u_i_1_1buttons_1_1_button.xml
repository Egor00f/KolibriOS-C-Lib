<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button" xml:lang="en-US">
<title>KolibriLib::UI::buttons::Button Class Reference</title>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary></indexterm>
<para>

<para>Класс для работы с кнопками </para>
 
</para>
<para>
<computeroutput>#include &lt;button.hpp&gt;</computeroutput>
</para>
<para>Inheritance diagram for KolibriLib::UI::buttons::Button:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1ad65115d769a5f5f80dd08c409d0c8b3e">Button</link> (const <link linkend="_struct_kolibri_lib_1_1point">Coord</link> &amp;coord={0, 0}, const <link linkend="_struct_kolibri_lib_1_1point">Size</link> &amp;size={20, 20}, unsigned Margin=UI::DefaultMargin, ksys_color_t ButtonColor=OS::sys_color_table.work_button)</para>

<para>Это конструктор </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a81904ddeac359eb10d23b8d76818f236">init</link> (const <link linkend="_struct_kolibri_lib_1_1point">Coord</link> &amp;coord={0, 0}, const <link linkend="_struct_kolibri_lib_1_1point">Size</link> &amp;size={0, 0}, const std::string &amp;text=&quot;button&quot;, const unsigned &amp;Margin=UI::DefaultMargin, const <link linkend="_namespace_kolibri_lib_1_1_color_1a2b1ec42c3492a492a59ed69c3f3b8b4a">Color::Color</link> &amp;ButtonColor=OS::sys_color_table.work_button)</para>

<para>инициализировать параметры </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a81022d37e8c7979d93f6cf8f14576323">init</link> (const <link linkend="_struct_kolibri_lib_1_1point">Coord</link> &amp;coord={0, 0}, const <link linkend="_struct_kolibri_lib_1_1point">Size</link> &amp;size={0, 0}, const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1image">Images::image</link> &amp;image=<link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1image">Images::image</link>(), const unsigned &amp;Margin=DefaultMargin, const <link linkend="_namespace_kolibri_lib_1_1_color_1a2b1ec42c3492a492a59ed69c3f3b8b4a">Color::Color</link> &amp;ButtonColor=OS::sys_color_table.work_button)</para>

<para>инициализировать параметры </para>
</listitem>
            <listitem><para><anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a2d359db5c5aaa43f1a28c46d0d00d8a8"/>void <emphasis role="strong">Render</emphasis> ()</para>

<para>Отрисовать кнопку </para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a018ac30303a5b12365f5251f5771bf6f">Handler</link> ()</para>

<para>Обработчик кнопки </para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a1558c18770a8747cf4f9fc490519378e">GetStatus</link> ()</para>

<para>Получить сосояние кнопки на момент последней обработки </para>
</listitem>
            <listitem><para>unsigned <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1ad4fb8af1571b871236b79a5a88627713">GetId</link> ()</para>

<para>Получить номер кнопки </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a0a235265d209cec4e8f735d416d25505">Deactivate</link> ()</para>

<para>Деактивировать кнопку </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a65b6a0809e8e43892e48065708fa01d1">Activate</link> ()</para>

<para>Активировать кнопку </para>
</listitem>
            <listitem><para><link linkend="_struct_kolibri_lib_1_1_u_i_1_1buttons_1_1_content_1a5e953b53f14e947910cb2c23f1528318">Content::Type</link> <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1aebbc5d41b880015778c938db8682f3ea">GetType</link> ()</para>

<para>Возвращает тип данных используемых в кнопке <link linkend="_">_type.</link></para>
</listitem>
            <listitem><para>std::string <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1af3dea4b56f7beb783bbe93cc97766faa">GetTextLabel</link> ()</para>

<para>Возвращает текст кнопки </para>
</listitem>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1image">Images::image</link> <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a8c7a622b2f454f5dd315ed176e2cc937">GetImage</link> ()</para>

<para>Получить изображение кнопки </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a159f389b9845713368e763ce159c77d7">SetText</link> (std::string NewText)</para>

<para>Изменить текст кнопки </para>
</listitem>
            <listitem><para><anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a3dddb0a58edf4d60a2bc539859fea95b"/><emphasis role="strong">~Button</emphasis> ()</para>

<para>Декструктор </para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">KolibriLib::UI::UIElement</link>        <itemizedlist>
            <listitem><para><emphasis role="strong">UIElement</emphasis> (<link linkend="_struct_kolibri_lib_1_1point">Coord</link> coord={0, 0}, <link linkend="_struct_kolibri_lib_1_1point">Size</link> size={16, 16}, <link linkend="_namespace_kolibri_lib_1_1_color_1a2b1ec42c3492a492a59ed69c3f3b8b4a">Color::Color</link> MainColor=0, unsigned Margin=DefaultMargin)</para>
</listitem>
            <listitem><para><link linkend="_struct_kolibri_lib_1_1point">Size</link> <emphasis role="strong">GetSize</emphasis> ()</para>
</listitem>
            <listitem><para>void <emphasis role="strong">SetSize</emphasis> (<link linkend="_struct_kolibri_lib_1_1point">Size</link> NewSize)</para>
</listitem>
            <listitem><para>unsigned <emphasis role="strong">GetMargin</emphasis> ()</para>
</listitem>
            <listitem><para><link linkend="_namespace_kolibri_lib_1_1_color_1a2b1ec42c3492a492a59ed69c3f3b8b4a">Color::Color</link> <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1af88ac59a7195dfbe8588a68776cb645d">GetColor</link> ()</para>

<para>Получить осносной цвет элемента </para>
</listitem>
            <listitem><para>void <emphasis role="strong">SetColor</emphasis> (<link linkend="_namespace_kolibri_lib_1_1_color_1a2b1ec42c3492a492a59ed69c3f3b8b4a">Color::Color</link> NewColor)</para>
</listitem>
            <listitem><para>void <emphasis role="strong">SetCoord</emphasis> (<link linkend="_struct_kolibri_lib_1_1point">Coord</link> NewCoord)</para>
</listitem>
            <listitem><para><link linkend="_struct_kolibri_lib_1_1point">Coord</link> <emphasis role="strong">GetCoord</emphasis> ()</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Additional Inherited Members    </title>
Protected Attributes inherited from <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">KolibriLib::UI::UIElement</link>        <itemizedlist>
            <listitem><para><link linkend="_struct_kolibri_lib_1_1point">Coord</link> <emphasis role="strong">_coord</emphasis></para>

<para>Координаты </para>
</listitem>
            <listitem><para><link linkend="_struct_kolibri_lib_1_1point">Size</link> <emphasis role="strong">_size</emphasis></para>

<para>Размер </para>
</listitem>
            <listitem><para><link linkend="_namespace_kolibri_lib_1_1_color_1a2b1ec42c3492a492a59ed69c3f3b8b4a">Color::Color</link> <emphasis role="strong">_MainColor</emphasis></para>
</listitem>
            <listitem><para>unsigned <emphasis role="strong">_Margin</emphasis></para>

<para>Отступы </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Класс для работы с кнопками </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1ad65115d769a5f5f80dd08c409d0c8b3e"/><section>
    <title>Button()</title>
<indexterm><primary>Button</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>Button</secondary></indexterm>
<para><computeroutput>KolibriLib::UI::buttons::Button::Button (const <link linkend="_struct_kolibri_lib_1_1point">Coord</link> &amp; coord = <computeroutput>{0,&#160;0}</computeroutput>
, const <link linkend="_struct_kolibri_lib_1_1point">Size</link> &amp; size = <computeroutput>{20,&#160;20}</computeroutput>
, unsigned Margin = <computeroutput>UI::DefaultMargin</computeroutput>
, ksys_color_t ButtonColor = <computeroutput>OS::sys_color_table.work_button</computeroutput>
)</computeroutput></para><para>

<para>Это конструктор </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>coord</entry><entry>
<para>координата </para>
</entry>
                            </row>
                            <row>
<entry>size</entry><entry>
<para>размер </para>
</entry>
                            </row>
                            <row>
<entry>text</entry><entry>
<para>текст </para>
</entry>
                            </row>
                            <row>
<entry>Margin</entry><entry>
<para>отступы текста от границ </para>
</entry>
                            </row>
                            <row>
<entry>ButtonColor</entry><entry>
<para>цвет кнопки </para>
</entry>
                            </row>
                            <row>
<entry>TextColor</entry><entry>
<para>цвет текста </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a65b6a0809e8e43892e48065708fa01d1"/><section>
    <title>Activate()</title>
<indexterm><primary>Activate</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>Activate</secondary></indexterm>
<para><computeroutput>void KolibriLib::UI::buttons::Button::Activate ( )</computeroutput></para><para>

<para>Активировать кнопку </para>
</para>
<section xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1Противоположна">
<title><title>функции <link linkend="_">возвращает кнопку в рабочее состояние</link></title></title>
</section>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a0a235265d209cec4e8f735d416d25505"/><section>
    <title>Deactivate()</title>
<indexterm><primary>Deactivate</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>Deactivate</secondary></indexterm>
<para><computeroutput>void KolibriLib::UI::buttons::Button::Deactivate ( )</computeroutput></para><para>

<para>Деактивировать кнопку </para>
</para>
<section xml:id="_namespace_kolibri_lib_1_1_u_i_1_1buttons_1Эта">
<title><title>функция может выполнятся очень долго, если вы уже создали довольно много кнопок. Это становится действительно важно когда у вас объявленно более 2000 кнопок</title></title>
</section>
<section xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1В">
<title><title>Деактивированном состоянии кнопка &quot;Не нажимается&quot;, а её <link linkend="_ad0d68e6bef420992763b660326e7bb03">становится не действительным</link></title></title>
</section>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1ad4fb8af1571b871236b79a5a88627713"/><section>
    <title>GetId()</title>
<indexterm><primary>GetId</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>GetId</secondary></indexterm>
<para><computeroutput>unsigned KolibriLib::UI::buttons::Button::GetId ( )</computeroutput></para><para>

<para>Получить номер кнопки </para>
</para>

<para><formalpara><title>Returns</title>

<para><link linkend="_ad0d68e6bef420992763b660326e7bb03">_id</link></para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a8c7a622b2f454f5dd315ed176e2cc937"/><section>
    <title>GetImage()</title>
<indexterm><primary>GetImage</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>GetImage</secondary></indexterm>
<para><computeroutput><link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1image">Images::image</link> KolibriLib::UI::buttons::Button::GetImage ( )</computeroutput></para><para>

<para>Получить изображение кнопки </para>
</para>

<para><formalpara><title>Returns</title>

<para></para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a1558c18770a8747cf4f9fc490519378e"/><section>
    <title>GetStatus()</title>
<indexterm><primary>GetStatus</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>GetStatus</secondary></indexterm>
<para><computeroutput>bool KolibriLib::UI::buttons::Button::GetStatus ( )</computeroutput></para><para>

<para>Получить сосояние кнопки на момент последней обработки </para>
</para>

<para><formalpara><title>Returns</title>

<para><link linkend="_acb97605ce20e14775fa5cffdbe02ef5f">_status</link></para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1af3dea4b56f7beb783bbe93cc97766faa"/><section>
    <title>GetTextLabel()</title>
<indexterm><primary>GetTextLabel</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>GetTextLabel</secondary></indexterm>
<para><computeroutput>std::string KolibriLib::UI::buttons::Button::GetTextLabel ( )</computeroutput></para><para>

<para>Возвращает текст кнопки </para>
</para>

<para><formalpara><title>Returns</title>

<para>std::string </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1aebbc5d41b880015778c938db8682f3ea"/><section>
    <title>GetType()</title>
<indexterm><primary>GetType</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>GetType</secondary></indexterm>
<para><computeroutput><link linkend="_struct_kolibri_lib_1_1_u_i_1_1buttons_1_1_content_1a5e953b53f14e947910cb2c23f1528318">Content::Type</link> KolibriLib::UI::buttons::Button::GetType ( )</computeroutput></para><para>

<para>Возвращает тип данных используемых в кнопке <link linkend="_">_type.</link></para>
</para>

<para><formalpara><title>Returns</title>

<para>Функция возвращает <link linkend="_">:: </link> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a018ac30303a5b12365f5251f5771bf6f"/><section>
    <title>Handler()</title>
<indexterm><primary>Handler</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>Handler</secondary></indexterm>
<para><computeroutput>bool KolibriLib::UI::buttons::Button::Handler ( )</computeroutput></para><para>

<para>Обработчик кнопки </para>
</para>

<para><formalpara><title>Returns</title>

<para>Состояние кнопки(Нажата/Ненажата) </para>
</formalpara>
</para>
<section xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1устанавливает">
<title><title>переменную <link linkend="_acb97605ce20e14775fa5cffdbe02ef5f">в true если эта кнопка нажата, иначе false</link></title></title>
</section>
<section xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1Эту">
<title><title>функцию нужно вызывать в цикле, чтобы кнопка работала</title></title>
</section>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a81022d37e8c7979d93f6cf8f14576323"/><section>
    <title>init()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>init</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>init</secondary></indexterm>
<para><computeroutput>void KolibriLib::UI::buttons::Button::init (const <link linkend="_struct_kolibri_lib_1_1point">Coord</link> &amp; coord = <computeroutput>{0,&#160;0}</computeroutput>
, const <link linkend="_struct_kolibri_lib_1_1point">Size</link> &amp; size = <computeroutput>{0,&#160;0}</computeroutput>
, const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1image">Images::image</link> &amp; image = <computeroutput><link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1image">Images::image</link>()</computeroutput>
, const unsigned &amp; Margin = <computeroutput>DefaultMargin</computeroutput>
, const <link linkend="_namespace_kolibri_lib_1_1_color_1a2b1ec42c3492a492a59ed69c3f3b8b4a">Color::Color</link> &amp; ButtonColor = <computeroutput>OS::sys_color_table.work_button</computeroutput>
)</computeroutput></para><para>

<para>инициализировать параметры </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>coord</entry><entry>
<para>координата </para>
</entry>
                            </row>
                            <row>
<entry>size</entry><entry>
<para>размер </para>
</entry>
                            </row>
                            <row>
<entry><link linkend="_struct_kolibri_lib_1_1_u_i_1_1buttons_1_1_content">Content</link></entry><entry>
<para>текст </para>
</entry>
                            </row>
                            <row>
<entry>Margin</entry><entry>
<para>отступы текста от границ </para>
</entry>
                            </row>
                            <row>
<entry>BackgroundColor</entry><entry>
<para>цвет кнопки </para>
</entry>
                            </row>
                            <row>
<entry>TextColor</entry><entry>
<para>цвет текста </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a81904ddeac359eb10d23b8d76818f236"/><section>
    <title>init()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>init</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>init</secondary></indexterm>
<para><computeroutput>void KolibriLib::UI::buttons::Button::init (const <link linkend="_struct_kolibri_lib_1_1point">Coord</link> &amp; coord = <computeroutput>{0,&#160;0}</computeroutput>
, const <link linkend="_struct_kolibri_lib_1_1point">Size</link> &amp; size = <computeroutput>{0,&#160;0}</computeroutput>
, const std::string &amp; text = <computeroutput>&quot;button&quot;</computeroutput>
, const unsigned &amp; Margin = <computeroutput>UI::DefaultMargin</computeroutput>
, const <link linkend="_namespace_kolibri_lib_1_1_color_1a2b1ec42c3492a492a59ed69c3f3b8b4a">Color::Color</link> &amp; ButtonColor = <computeroutput>OS::sys_color_table.work_button</computeroutput>
)</computeroutput></para><para>

<para>инициализировать параметры </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>coord</entry><entry>
<para>координата </para>
</entry>
                            </row>
                            <row>
<entry>size</entry><entry>
<para>размер </para>
</entry>
                            </row>
                            <row>
<entry><link linkend="_struct_kolibri_lib_1_1_u_i_1_1buttons_1_1_content">Content</link></entry><entry>
<para>текст </para>
</entry>
                            </row>
                            <row>
<entry>Margin</entry><entry>
<para>отступы текста от границ </para>
</entry>
                            </row>
                            <row>
<entry>BackgroundColor</entry><entry>
<para>цвет кнопки </para>
</entry>
                            </row>
                            <row>
<entry>TextColor</entry><entry>
<para>цвет текста </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a159f389b9845713368e763ce159c77d7"/><section>
    <title>SetText()</title>
<indexterm><primary>SetText</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>SetText</secondary></indexterm>
<para><computeroutput>void KolibriLib::UI::buttons::Button::SetText (std::string NewText)</computeroutput></para><para>

<para>Изменить текст кнопки </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Новый</entry><entry>
<para>текст кнопки </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/button.hpp</section>
</section>
