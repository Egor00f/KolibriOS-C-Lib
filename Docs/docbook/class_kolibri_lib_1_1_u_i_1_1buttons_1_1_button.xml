<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button" xml:lang="ru">
<title>Класс KolibriLib::UI::buttons::Button</title>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary></indexterm>
<para>

<para>Класс для работы с кнопками </para>
 
</para>
<para>
<computeroutput>#include &lt;button.hpp&gt;</computeroutput>
</para>
<para>Граф наследования:KolibriLib::UI::buttons::Button:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Открытые члены    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a5757bc491cfd13c0b11a35549732db1c">Button</link> (const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp;coord={0, 0}, const <link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> &amp;size={20, 20}, unsigned Margin=UI::DefaultMargin, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;ButtonColor=<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_button)</para>

<para>Это конструктор </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1ab4d85223ff685e5400b1fff59b337159">Render</link> () const</para>

<para>Отрисовать кнопку </para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a9521b0d981e10f6a9466438858439cb9">Handler</link> () const</para>

<para>Обработчик кнопки </para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a3f8517f74b2049f07a9da9a9910e9814">GetStatus</link> () const</para>

<para>Получить сосояние кнопки на момент последней обработки </para>
</listitem>
            <listitem><para><link linkend="_namespace_kolibri_lib_1_1_u_i_1_1buttons_1a5bc139230a84a2c4049ba6677932e35b">ButtonID</link> <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a45ea9d51be9d17f6afca47ecfd6bdee6">GetId</link> () const</para>

<para>Получить номер кнопки </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a0a235265d209cec4e8f735d416d25505">Deactivate</link> ()</para>

<para>Деактивировать кнопку </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a65b6a0809e8e43892e48065708fa01d1">Activate</link> ()</para>

<para>Активировать кнопку </para>
</listitem>
            <listitem><para><anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a3dddb0a58edf4d60a2bc539859fea95b"/><emphasis role="strong">~Button</emphasis> ()</para>

<para>Декструктор </para>
</listitem>
            <listitem><para><anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a0848b7d5094a5704f00b54f7debf1722"/><link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button">Button</link> &amp; <emphasis role="strong">operator=</emphasis> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button">Button</link> &amp;element)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1aa1a0a5a2d72b1e94ca76e357a7447374"/>bool <emphasis role="strong">operator==</emphasis> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button">Button</link> &amp;element) const</para>
</listitem>
        </itemizedlist>
</simplesect>
Открытые члены унаследованные от <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label">KolibriLib::UI::text::TextLabel</link>        <itemizedlist>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1a8962661bbfe9e1ac4040e0b1deb00b03">TextLabel</link> (const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp;coord={0, 0}, const <link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> &amp;size={16, 16}, const std::string &amp;text=&quot;TextLabel&quot;, const unsigned &amp;FontSize=9, bool TextScale=true, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;TextColor=<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_text, const unsigned &amp;Margin=0)</para>

<para>Конструктор </para>
</listitem>
            <listitem><para><emphasis role="strong">TextLabel</emphasis> (const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp;coord={0, 0}, const <link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> &amp;size={16, 16}, const std::string &amp;text=&quot;TextLabel&quot;, const <link linkend="_struct_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1_1_font">Fonts::Font</link> &amp;Font=<link linkend="_namespace_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1abab58341d8cf9048d474cf45a2e00723">Fonts::DefaultFont</link>, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;TextColor=<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_text, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;BackgroundColor=<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().frame_area, bool TextScale=true, const unsigned &amp;Margin=0)</para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1a13c115d127bc7f90cb438bbd2b31619d">SetScale</link> (bool scale)</para>

<para>Изменить значение переменной <link linkend="_">_TextScale.</link></para>
</listitem>
            <listitem><para>bool <emphasis role="strong">GetScale</emphasis> () const</para>

<para>Получить состояние переменной <link linkend="_af3e4dd316b274bca4d5bf9573f47aecb">@ return значение переменной  _TextScale. </link></para>
</listitem>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label">TextLabel</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1ade3a8b232411beab67d7a4911143e8cf">operator=</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label">TextLabel</link> &amp;a)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1ae6c1737b23aef9af57388e0e9429c10a">operator==</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label">TextLabel</link> &amp;a) const</para>
</listitem>
            <listitem><para>bool <emphasis role="strong">operator!=</emphasis> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label">TextLabel</link> &amp;a) const</para>
</listitem>
        </itemizedlist>
Открытые члены унаследованные от <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">KolibriLib::UI::UIElement</link>        <itemizedlist>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a33831abb04efdef35c3a895590a60137">UIElement</link> (const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp;coord={0, 0}, const <link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> &amp;size={16, 16}, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;MainColor=<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_graph, const unsigned &amp;Margin=DefaultMargin, bool relative=false)</para>

<para>Конструктор </para>
</listitem>
            <listitem><para>const <link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a7411f3ff0db5a7453f0d23c5ead9ce9e">GetSize</link> () const</para>

<para>Получить размер элемента </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a3b3eb7370243281576ff27c489db913d">SetSize</link> (const <link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> &amp;NewSize)</para>

<para>Изменить размер элемента </para>
</listitem>
            <listitem><para>unsigned <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a452197bd6d4f5aebf9c432a9a3a088e2">GetMargin</link> () const</para>

<para>Получить отступы </para>
</listitem>
            <listitem><para>const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a69995a90b6e010f467ab766edfa782d4">GetColor</link> () const</para>

<para>Получить осносной цвет элемента </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a969186d6406bb6c11a024e5a91749336">SetColor</link> (const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;NewColor)</para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a16b029a7f35ee44656c2eb2af211873d">SetCoord</link> (const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp;NewCoord)</para>
</listitem>
            <listitem><para>const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a3f2f4016ffe8414c55cc13c665b0a3a8">GetCoord</link> () const</para>

<para>Получить координаты элемента </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a983464b962931621091affaa11f0472a">Rotate</link> (unsigned NewAngle)</para>

<para>Повернуть элемент </para>
</listitem>
            <listitem><para>unsigned <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a91df2001fe6967e760d343e42f5d870c">GetRotate</link> () const</para>

<para>Получить угол наклона элемента </para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1acb1303729c55ba615af2562823dd2c8e">Hover</link> () const</para>

<para>Проверить лежит ли курсор мыши над элементом </para>
</listitem>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a55bc7a13f3d7f444e2004adde9b45700">operator=</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link> &amp;Element)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1aadb7dd820e6edfb96007bb83743bee3c">operator==</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link> &amp;Element) const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a47f5a94da324198946c6567244620f86">operator!=</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link> &amp;Element) const</para>
</listitem>
        </itemizedlist>
Открытые члены унаследованные от <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text">KolibriLib::UI::text::Text</link>        <itemizedlist>
            <listitem><para><emphasis role="strong">Text</emphasis> ()</para>

<para>Конструктор </para>
</listitem>
            <listitem><para><emphasis role="strong">~Text</emphasis> ()</para>

<para>Деструктор </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a6304a4ae03858133d064303a9f4aa640">Add</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_char">Char</link> &amp;c)</para>

<para>Добавить символ в конец </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a658e87b66c50a1a6e6d3d39640dad143">Add</link> (const std::string &amp;txt)</para>

<para>Добавить строку в конец </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1af4ad74911003d2d01b88bba3a84782b8">Add</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1img">Images::img</link> &amp;img)</para>

<para>долбавить изображение в конец </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a50f90789d11b5c32a1ca876ec3925ae3">insert</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_char">Char</link> &amp;c, int i)</para>

<para>Вставить элемент </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a279e3feed8526c479ebcf9d37257f2cf">insert</link> (const std::string &amp;txt, int i)</para>

<para>Вставить строку </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a6fea058c7b14276e03d540219763e189">insert</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1img">Images::img</link> &amp;img, int i)</para>

<para>Вставить изображение </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a2b3cc12a6b74de60c7e74f90fed4fec9">Delete</link> (int i)</para>

<para>Удалить <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_char">Char</link> из текста </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1aa295c124569525622fe943eeeb23aecf">Print</link> (const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp;coord) const</para>

<para>Вывести текст </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a143c7924e3daa06259bc93b3e7306bc5">SetFont</link> (const <link linkend="_struct_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1_1_font">Fonts::Font</link> &amp;Font)</para>

<para>Изменить шрифт символов </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a72454cdc486cd55c422ce58da282702a">SetTextColor</link> (const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;Color)</para>

<para>Изменить цвет текста для всех символов </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a3c5e7c50af916002563b29b55822cacd">SetBackgroundColor</link> (const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;Color)</para>

<para>Изменить цвет фона для всех символов </para>
</listitem>
            <listitem><para>std::string &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a6752e4a7728fad2ad4f22c38ded456a5">GetText</link> () const</para>

<para>Получить текст </para>
</listitem>
            <listitem><para>const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_char">Char</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a583340eae4461e85511dbd1aefeb3e36">GetChar</link> (int i) const</para>

<para>Получить символ под номером i. </para>
</listitem>
            <listitem><para>std::size_t <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a20eacf9e8b1e84ae39895be49e88683e">length</link> () const</para>

<para>Получить длину текста </para>
</listitem>
            <listitem><para>unsigned <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a924a553bcf51e37053e5f4a365c4d568">lenghtPX</link> () const</para>

<para>Получить длинну текста в пикселях </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a9bb52ff66ccb36a28959277f99807a47">SetText</link> (std::string text)</para>
</listitem>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text">Text</link> &amp; <emphasis role="strong">operator=</emphasis> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text">Text</link> &amp;txt)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a2f5cda180a5ba57e4774fb6bf1e22fa2">operator==</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text">Text</link> &amp;txt) const</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Дополнительные унаследованные члены    </title>
Защищенные данные унаследованные от <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">KolibriLib::UI::UIElement</link>        <itemizedlist>
            <listitem><para><link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> <emphasis role="strong">_coord</emphasis></para>

<para>Координаты </para>
</listitem>
            <listitem><para><link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> <emphasis role="strong">_size</emphasis></para>

<para>Размер </para>
</listitem>
            <listitem><para><link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> <emphasis role="strong">_MainColor</emphasis></para>
</listitem>
            <listitem><para>unsigned <emphasis role="strong">_Margin</emphasis></para>

<para>Отступы </para>
</listitem>
            <listitem><para>unsigned <emphasis role="strong">_angle</emphasis></para>

<para>Угол наклона </para>
</listitem>
            <listitem><para>bool <emphasis role="strong">_relative</emphasis></para>

<para>Оносительны ли координаты </para>
</listitem>
        </itemizedlist>
</simplesect>
Защищенные данные унаследованные от <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text">KolibriLib::UI::text::Text</link>        <itemizedlist>
            <listitem><para>std::vector&lt; <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_char">Char</link> &gt; <emphasis role="strong">_data</emphasis></para>
</listitem>
        </itemizedlist>
<section>
<title>Подробное описание</title>

<para>Класс для работы с кнопками </para>
</section>
<section>
<title>Конструктор(ы)</title>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a5757bc491cfd13c0b11a35549732db1c"/><section>
    <title>Button()</title>
<indexterm><primary>Button</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>Button</secondary></indexterm>
<para><computeroutput>KolibriLib::UI::buttons::Button::Button (const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp; coord = <computeroutput>{0,&#160;0}</computeroutput>
, const <link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> &amp; size = <computeroutput>{20,&#160;20}</computeroutput>
, unsigned Margin = <computeroutput>UI::DefaultMargin</computeroutput>
, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp; ButtonColor = <computeroutput><link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_button</computeroutput>
)</computeroutput></para><para>

<para>Это конструктор </para>
</para>

<para>
                <formalpara>
                    <title>
Аргументы</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>coord</entry><entry>
<para>координата </para>
</entry>
                            </row>
                            <row>
<entry>size</entry><entry>
<para>размер </para>
</entry>
                            </row>
                            <row>
<entry>text</entry><entry>
<para>текст </para>
</entry>
                            </row>
                            <row>
<entry>Margin</entry><entry>
<para>отступы текста от границ </para>
</entry>
                            </row>
                            <row>
<entry>ButtonColor</entry><entry>
<para>цвет кнопки </para>
</entry>
                            </row>
                            <row>
<entry>TextColor</entry><entry>
<para>цвет текста </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Методы</title>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a65b6a0809e8e43892e48065708fa01d1"/><section>
    <title>Activate()</title>
<indexterm><primary>Activate</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>Activate</secondary></indexterm>
<para><computeroutput>void KolibriLib::UI::buttons::Button::Activate ( )</computeroutput></para><para>

<para>Активировать кнопку </para>
</para>
<section xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1Противоположна">
<title><title>функции <link linkend="_">возвращает кнопку в рабочее состояние</link></title></title>
</section>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a0a235265d209cec4e8f735d416d25505"/><section>
    <title>Deactivate()</title>
<indexterm><primary>Deactivate</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>Deactivate</secondary></indexterm>
<para><computeroutput>void KolibriLib::UI::buttons::Button::Deactivate ( )</computeroutput></para><para>

<para>Деактивировать кнопку </para>
</para>
<section xml:id="_namespace_kolibri_lib_1_1_u_i_1_1buttons_1Эта">
<title><title>функция может выполнятся очень долго, если вы уже создали довольно много кнопок. Это становится действительно важно когда у вас объявленно более 2000 кнопок</title></title>
</section>
<section xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1В">
<title><title>Деактивированном состоянии кнопка &quot;Не нажимается&quot;, а её <link linkend="_a59988b09eab8a3acdbe8bd1d93b3d931">становится не действительным</link></title></title>
</section>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a45ea9d51be9d17f6afca47ecfd6bdee6"/><section>
    <title>GetId()</title>
<indexterm><primary>GetId</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>GetId</secondary></indexterm>
<para><computeroutput><link linkend="_namespace_kolibri_lib_1_1_u_i_1_1buttons_1a5bc139230a84a2c4049ba6677932e35b">buttons::ButtonID</link> KolibriLib::UI::buttons::Button::GetId ( ) const</computeroutput></para><para>

<para>Получить номер кнопки </para>
</para>

<para><formalpara><title>Возвращает</title>

<para><link linkend="_a59988b09eab8a3acdbe8bd1d93b3d931">_id</link></para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a3f8517f74b2049f07a9da9a9910e9814"/><section>
    <title>GetStatus()</title>
<indexterm><primary>GetStatus</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>GetStatus</secondary></indexterm>
<para><computeroutput>bool KolibriLib::UI::buttons::Button::GetStatus ( ) const</computeroutput></para><para>

<para>Получить сосояние кнопки на момент последней обработки </para>
</para>

<para><formalpara><title>Возвращает</title>

<para><link linkend="_acb97605ce20e14775fa5cffdbe02ef5f">_status</link></para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a9521b0d981e10f6a9466438858439cb9"/><section>
    <title>Handler()</title>
<indexterm><primary>Handler</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>Handler</secondary></indexterm>
<para><computeroutput>bool KolibriLib::UI::buttons::Button::Handler ( ) const</computeroutput></para><para>

<para>Обработчик кнопки </para>
</para>

<para><formalpara><title>Возвращает</title>

<para>Состояние кнопки(Нажата/Ненажата) </para>
</formalpara>
</para>
<section xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1устанавливает">
<title><title>переменную <link linkend="_acb97605ce20e14775fa5cffdbe02ef5f">в true если эта кнопка нажата, иначе false</link></title></title>
</section>
<section xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1Эту">
<title><title>функцию нужно вызывать в цикле, чтобы кнопка работала</title></title>
</section>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1ab4d85223ff685e5400b1fff59b337159"/><section>
    <title>Render()</title>
<indexterm><primary>Render</primary><secondary>KolibriLib::UI::buttons::Button</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::buttons::Button</primary><secondary>Render</secondary></indexterm>
<para><computeroutput>void KolibriLib::UI::buttons::Button::Render ( ) const<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Отрисовать кнопку </para>
</para>
<para>
Переопределяет метод предка <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1a94eac7696fa535861d0e09c6a62ccca7">KolibriLib::UI::text::TextLabel</link>.</para>
</section>
<para>
Объявления и описания членов класса находятся в файле:</para>
C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/UI/button.hpp</section>
</section>
