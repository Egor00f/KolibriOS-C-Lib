<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_kolibri__buf2d_8h_source" xml:lang="ru">
<title>kolibri_buf2d.h</title>
<indexterm><primary>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_buf2d.h</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#ifndef&#32;KOLIBRI_BUF2D_H</emphasis>
2 <emphasis role="preprocessor">#define&#32;KOLIBRI_BUF2D_H</emphasis>
3 
4 <emphasis role="comment">/*ToDo</emphasis>
5 <emphasis role="comment">&#32;*&#32;voxel&#32;function</emphasis>
6 <emphasis role="comment">&#32;*/</emphasis>
7 
8 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="stringliteral">&quot;C&quot;</emphasis>
9 {
10 
11 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;kolibri_buf2d_init(<emphasis role="keywordtype">void</emphasis>);
12 
13 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>__attribute__&#32;((__packed__))&#32;{
14 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;*buf_pointer;
15 &#32;&#32;&#32;&#32;uint16_t&#32;left;
16 &#32;&#32;&#32;&#32;uint16_t&#32;top;
17 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;width;
18 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;height;
19 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;bgcolor;
20 &#32;&#32;&#32;&#32;uint8_t&#32;color_bit;
21 }buf2d_struct;
22 
23 <emphasis role="keyword">enum</emphasis>&#32;BUF2D_ALGORITM_FILTR&#32;{
24 &#32;&#32;&#32;&#32;SIERRA_LITE,
25 &#32;&#32;&#32;&#32;FLOYD_STEINBERG,
26 &#32;&#32;&#32;&#32;BURKERS,
27 &#32;&#32;&#32;&#32;HEAVYIRON_MOD,
28 &#32;&#32;&#32;&#32;ATKINSON
29 };
30 
31 <emphasis role="keyword">enum</emphasis>&#32;BUF2D_OPT_CROP&#32;{
32 &#32;&#32;&#32;&#32;BUF2D_OPT_CROP_TOP&#32;=&#32;1,
33 &#32;&#32;&#32;&#32;BUF2D_OPT_CROP_LEFT&#32;=&#32;2,
34 &#32;&#32;&#32;&#32;BUF2D_OPT_CROP_BOTTOM&#32;=&#32;4,
35 &#32;&#32;&#32;&#32;BUF2D_OPT_CROP_RIGHT&#32;=&#32;8
36 };
37 
38 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_create_asm)(buf2d_struct&#32;*)&#32;__attribute__((__stdcall__));
39 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_curve_bezier_asm)(buf2d_struct&#32;*,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int)&#32;__attribute__((__stdcall__));
40 
41 buf2d_struct*&#32;buf2d_create(uint16_t&#32;tlx,&#32;uint16_t&#32;tly,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sizex,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sizey,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;font_bgcolor,&#32;uint8_t&#32;color_bit)
42 {
43 &#32;&#32;&#32;&#32;buf2d_struct&#32;*new_buf2d_struct&#32;=&#32;(buf2d_struct&#32;*)malloc(<emphasis role="keyword">sizeof</emphasis>(buf2d_struct));
44 &#32;&#32;&#32;&#32;new_buf2d_struct&#32;-&gt;&#32;left&#32;=&#32;tlx;
45 &#32;&#32;&#32;&#32;new_buf2d_struct&#32;-&gt;&#32;top&#32;=&#32;tly;
46 &#32;&#32;&#32;&#32;new_buf2d_struct&#32;-&gt;&#32;width&#32;=&#32;sizex;
47 &#32;&#32;&#32;&#32;new_buf2d_struct&#32;-&gt;&#32;height&#32;=&#32;sizey;
48 &#32;&#32;&#32;&#32;new_buf2d_struct&#32;-&gt;&#32;bgcolor&#32;=&#32;font_bgcolor;
49 &#32;&#32;&#32;&#32;new_buf2d_struct&#32;-&gt;&#32;color_bit&#32;=&#32;color_bit;
50 &#32;&#32;&#32;&#32;buf2d_create_asm(new_buf2d_struct);
51 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;new_buf2d_struct;
52 }
53 
54 <emphasis role="keywordtype">void</emphasis>&#32;buf2d_curve_bezier(buf2d_struct&#32;*buf,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;p0_x,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;p0_y,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;p1_x,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;p1_y,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;p2_x,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;p2_y,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;color)
55 {
56 &#32;&#32;&#32;&#32;buf2d_curve_bezier_asm(buf,&#32;(p0_x&lt;&lt;16)+p0_y,&#32;(p1_x&lt;&lt;16)+p1_y,&#32;(p2_x&lt;&lt;16)+p2_y,&#32;color);
57 }
58 
59 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_draw)(buf2d_struct&#32;*)&#32;__attribute__((__stdcall__));
60 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_clear)(buf2d_struct&#32;*,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int)&#32;__attribute__((__stdcall__));
61 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_delete)(buf2d_struct&#32;*)&#32;__attribute__((__stdcall__));
62 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_rotate)(buf2d_struct&#32;*,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int)&#32;__attribute__((__stdcall__));
63 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_resize)(buf2d_struct&#32;*,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int)&#32;__attribute__((__stdcall__));
64 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_line)(buf2d_struct&#32;*,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int)&#32;__attribute__((__stdcall__));
65 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_line_sm)(buf2d_struct&#32;*,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int)&#32;__attribute__((__stdcall__));
66 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_rect_by_size)(buf2d_struct&#32;*,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int)&#32;__attribute__((__stdcall__));
67 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_filled_rect_by_size)(buf2d_struct&#32;*,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int)&#32;__attribute__((__stdcall__));
68 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_circle)(buf2d_struct&#32;*,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int)&#32;__attribute__((__stdcall__));
69 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_img_hdiv2)(buf2d_struct&#32;*)&#32;__attribute__((__stdcall__));
70 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_img_wdiv2)(buf2d_struct&#32;*)&#32;__attribute__((__stdcall__));
71 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_conv_24_to_8)(buf2d_struct&#32;*,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int)&#32;__attribute__((__stdcall__));
72 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_conv_24_to_32)(buf2d_struct&#32;*,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int)&#32;__attribute__((__stdcall__));
73 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_bit_blt_transp)(buf2d_struct&#32;*,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;buf2d_struct&#32;*)&#32;__attribute__((__stdcall__));
74 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_bit_blt_alpha)(buf2d_struct&#32;*,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;buf2d_struct&#32;*)&#32;__attribute__((__stdcall__));
75 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_convert_text_matrix)(buf2d_struct&#32;*)&#32;__attribute__((__stdcall__));
76 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_draw_text)(buf2d_struct&#32;*,&#32;buf2d_struct&#32;*,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int)&#32;__attribute__((__stdcall__));
77 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_crop_color)(buf2d_struct&#32;*,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int)&#32;__attribute__((__stdcall__));
78 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_offset_h)(buf2d_struct&#32;*,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int)&#32;__attribute__((__stdcall__));
79 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_flood_fill)(buf2d_struct&#32;*,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int)&#32;__attribute__((__stdcall__));
80 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_set_pixel)(buf2d_struct&#32;*,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int)&#32;__attribute__((__stdcall__));
81 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int&#32;(*buf2d_get_pixel)(buf2d_struct&#32;*,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int)&#32;__attribute__((__stdcall__));
82 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_flip_h)(buf2d_struct&#32;*)&#32;__attribute__((__stdcall__));
83 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_flip_v)(buf2d_struct&#32;*)&#32;__attribute__((__stdcall__));
84 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*buf2d_filter_dither)(buf2d_struct&#32;*,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int)&#32;__attribute__((__stdcall__));
85 
86 }
87 
88 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;KOLIBRI_BUF2D_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
