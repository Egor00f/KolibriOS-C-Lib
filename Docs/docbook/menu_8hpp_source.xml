<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_menu_8hpp_source" xml:lang="ru">
<title>menu.hpp</title>
<indexterm><primary>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/UI/menu.hpp</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#ifndef&#32;__MENU_H__</emphasis>
2 <emphasis role="preprocessor">#define&#32;__MENU_H__</emphasis>
3 
4 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
6 
7 <emphasis role="preprocessor">#include&#32;&lt;kolibriLib/types.hpp&gt;</emphasis>
8 <emphasis role="preprocessor">#include&#32;&lt;kolibriLib/UI/UI.hpp&gt;</emphasis>
9 <emphasis role="preprocessor">#include&#32;&lt;kolibriLib/system/os.hpp&gt;</emphasis>
10 <emphasis role="preprocessor">#include&#32;&lt;kolibriLib/color.hpp&gt;</emphasis>
11 <emphasis role="preprocessor">#include&#32;&quot;button.hpp&quot;</emphasis>
12 <emphasis role="preprocessor">#include&#32;&lt;kolibriLib/graphic/graphic.hpp&gt;</emphasis>
13 
14 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_kolibri_lib">KolibriLib</link>
15 {
16 &#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>UI
17 &#32;&#32;&#32;&#32;{
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_class_kolibri_lib_1_1_u_i_1_1_menu">Menu</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link>
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;buttons::Button&gt;&#32;_Buttons;
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_kolibri_lib_1_1_u_i_1_1_menu">Menu</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_kolibri_lib_1_1point">Coord</link>&#32;&amp;coord&#32;=&#32;{0,&#32;0},&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_kolibri_lib_1_1point">Size</link>&#32;&amp;size&#32;=&#32;{0,&#32;0},&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&#32;&amp;li&#32;=&#32;{<emphasis role="stringliteral">&quot;menu&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;menu&quot;</emphasis>},&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;&amp;Margin&#32;=&#32;DefaultMargin,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link>&#32;&amp;color&#32;=&#32;<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_area);
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_kolibri_lib_1_1_u_i_1_1_menu">~Menu</link>();
26 
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_kolibri_lib_1_1_u_i_1_1_menu_1aa69ce5e2c73c2251acd408aac65fa58b">Render</link>();
29 
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_kolibri_lib_1_1_u_i_1_1_menu_1a6ef3b4324f61a499469b1519bec4c8b7">Handler</link>();
33 
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_kolibri_lib_1_1_u_i_1_1_menu_1a41d7f8f9019da81f7eb58c3671c44e5c">AddItem</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;item,&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;-1);
40 
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetItem(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;NewText,&#32;<emphasis role="keywordtype">int</emphasis>&#32;i);
42 
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_kolibri_lib_1_1_u_i_1_1_menu_1a9b380c2eeb680f910ca87903ee78d8ad">DeleteItem</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;i);
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
48 
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
51 Menu::Menu(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_kolibri_lib_1_1point">Coord</link>&#32;&amp;coord,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_kolibri_lib_1_1point">Size</link>&#32;&amp;size,&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;std::string&gt;&#32;&amp;li,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;&amp;Margin,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link>&#32;&amp;color)&#32;:&#32;<link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link>(coord,&#32;size,&#32;color,&#32;Margin)
52 {
53 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;li.size();&#32;i++)
54 &#32;&#32;&#32;&#32;{
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button">buttons::Button</link>&#32;btn({coord.<link linkend="_struct_kolibri_lib_1_1point_1aba63dd75453b02a799b9cd6ae5773cfe">x</link>,&#32;coord.<link linkend="_struct_kolibri_lib_1_1point_1a92d76b1b7cb1eabab7bc3916b6341a24">y</link>&#32;+&#32;((int)(size.<link linkend="_struct_kolibri_lib_1_1point_1a92d76b1b7cb1eabab7bc3916b6341a24">y</link>&#32;/&#32;li.size())&#32;*&#32;i)},&#32;{size.<link linkend="_struct_kolibri_lib_1_1point_1aba63dd75453b02a799b9cd6ae5773cfe">x</link>,&#32;size.<link linkend="_struct_kolibri_lib_1_1point_1a92d76b1b7cb1eabab7bc3916b6341a24">y</link>&#32;/&#32;li.size()},&#32;Margin,&#32;color);
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;btn.<link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a50f90789d11b5c32a1ca876ec3925ae3">insert</link>(li[i],&#32;0);
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Buttons.push_back(btn);
58 &#32;&#32;&#32;&#32;}
59 }
60 
61 Menu::~Menu()
62 {
63 }
64 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_kolibri_lib_1_1_u_i_1_1_menu_1aa69ce5e2c73c2251acd408aac65fa58b">Menu::Render</link>()
65 {
66 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;_Buttons.size();&#32;i++)
67 &#32;&#32;&#32;&#32;{
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Buttons[i].Render();
69 &#32;&#32;&#32;&#32;}
70 }
71 
72 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_kolibri_lib_1_1_u_i_1_1_menu_1a6ef3b4324f61a499469b1519bec4c8b7">KolibriLib::UI::Menu::Handler</link>()
73 {
74 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;_Buttons.size();&#32;i++)
75 &#32;&#32;&#32;&#32;{
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(_Buttons[i].Handler())
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;i;
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
80 &#32;&#32;&#32;&#32;}
81 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
82 }
83 
84 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_kolibri_lib_1_1_u_i_1_1_menu_1a41d7f8f9019da81f7eb58c3671c44e5c">KolibriLib::UI::Menu::AddItem</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;item,&#32;<emphasis role="keywordtype">int</emphasis>&#32;i)
85 {
86 &#32;&#32;&#32;&#32;<link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button">buttons::Button</link>&#32;btn&#32;({_coord.x,&#32;_coord.y&#32;+&#32;((int)(_size.y&#32;/&#32;_Buttons.size())&#32;*&#32;i)},&#32;{_size.x},&#32;_Margin,&#32;_MainColor);
87 &#32;&#32;&#32;&#32;btn.<link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a50f90789d11b5c32a1ca876ec3925ae3">insert</link>(item,&#32;0);
88 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(i&#32;==&#32;-1)
89 &#32;&#32;&#32;&#32;{
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_Buttons.push_back(btn);
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_Buttons.size()&#32;-&#32;1;
92 &#32;&#32;&#32;&#32;}
93 &#32;&#32;&#32;&#32;
94 &#32;&#32;&#32;&#32;_Buttons.insert(_Buttons.begin()&#32;+&#32;i,&#32;btn);
95 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
96 }
97 
98 <emphasis role="keywordtype">void</emphasis>&#32;Menu::SetItem(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;NewText,&#32;<emphasis role="keywordtype">int</emphasis>&#32;i)
99 {
100 &#32;&#32;&#32;&#32;_Buttons[i].SetText(NewText);
101 }
102 
103 <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_kolibri_lib_1_1_u_i_1_1_menu_1a9b380c2eeb680f910ca87903ee78d8ad">KolibriLib::UI::Menu::DeleteItem</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;i)
104 {
105 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(_Buttons.size()&#32;&lt;=&#32;i&#32;||&#32;i&#32;&lt;&#32;0)
106 &#32;&#32;&#32;&#32;{
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
108 &#32;&#32;&#32;&#32;}
109 
110 &#32;&#32;&#32;&#32;_Buttons.erase(_Buttons.begin()&#32;+&#32;i);
111 
112 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
113 }
114 
115 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;namespace&#32;UI</emphasis>
116 
117 }&#32;<emphasis role="comment">//&#32;namespace&#32;KolibriLib</emphasis>
118 
119 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;__MENU_H__</emphasis>
</programlisting></section>
