<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_thread_8hpp_source" xml:lang="ru">
<title>thread.hpp</title>
<indexterm><primary>F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/system/thread.hpp</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#ifndef&#32;__THREAD_H__</emphasis>
2 <emphasis role="preprocessor">#define&#32;__THREAD_H__</emphasis>
3 
4 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&lt;sys/ksys.h&gt;</emphasis>
6 
7 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_kolibri_lib">KolibriLib</link>
8 {
11 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1a5538a86d3c38c7c88391e9360e01d023">Wait</link>(<emphasis role="keywordtype">int</emphasis>&#32;time)
12 &#32;&#32;&#32;&#32;{
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ksys_delay(time);
14 &#32;&#32;&#32;&#32;}
15 
18 &#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1a5538a86d3c38c7c88391e9360e01d023">Wait</link>()
19 &#32;&#32;&#32;&#32;{
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ksys_thread_yield();
21 &#32;&#32;&#32;&#32;}
22 
24 &#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>Thread
25 &#32;&#32;&#32;&#32;{
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1_1_thread_1ac583b7a88e5bddeab393a41bf9929c51">Slot</link>;
28 
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1_1_thread_1a1635692d8eb5eddc602109be07a50a45">PID</link>;
31 
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;ksys_thread_t&#32;<link linkend="_namespace_kolibri_lib_1_1_thread_1a8c4f7f76752ed94392f9409f4f9554da">ThreadInfo</link>;
34 
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_kolibri_lib_1_1_thread_1a1635692d8eb5eddc602109be07a50a45">PID</link>&#32;<link linkend="_namespace_kolibri_lib_1_1_thread_1a692c4300c1ca95211eabb91947518cf2">CreateThread</link>(<emphasis role="keywordtype">void</emphasis>(*ThreadEntry)(<emphasis role="keywordtype">void</emphasis>*),&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;ThreadStackSize&#32;=&#32;2048)
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;*th_stack&#32;=&#32;malloc(ThreadStackSize);
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!th_stack)&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;Если&#32;памяти&#32;не&#32;было&#32;выделенно</emphasis>
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ksys_debug_puts(<emphasis role="stringliteral">&quot;Memory&#32;allocation&#32;error&#32;for&#32;thread!&quot;</emphasis>);
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;TID&#32;=&#32;_ksys_create_thread((<emphasis role="keywordtype">void</emphasis>&#32;*)ThreadEntry,&#32;th_stack&#32;+&#32;ThreadStackSize);
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(TID&#32;==&#32;-1)&#32;<emphasis role="comment">//&#32;&#32;&#32;Если&#32;поток&#32;не&#32;был&#32;создан</emphasis>
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ksys_debug_puts(<emphasis role="stringliteral">&quot;Unable&#32;to&#32;create&#32;a&#32;new&#32;thread!&quot;</emphasis>);
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;TID;
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;TID;
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
56 
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1_1_thread_1a53a7d295e396cff9eaca2ceae95b6b01">TerminateThread</link>(<link linkend="_namespace_kolibri_lib_1_1_thread_1a1635692d8eb5eddc602109be07a50a45">PID</link>&#32;pid)
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;a;
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;asm_inline(
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;int&#32;$0x40&quot;</emphasis>
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="stringliteral">&quot;=a&quot;</emphasis>(a)
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="stringliteral">&quot;a&quot;</emphasis>(18),&#32;<emphasis role="stringliteral">&quot;b&quot;</emphasis>(18),&#32;<emphasis role="stringliteral">&quot;c&quot;</emphasis>(pid));
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!a;
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
70 
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_kolibri_lib_1_1_thread_1ac583b7a88e5bddeab393a41bf9929c51">Slot</link>&#32;<link linkend="_namespace_kolibri_lib_1_1_thread_1a6e66cd0e046a044373f8fa5a6ee8ab77">GetThreadSlot</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1_1_thread_1a1635692d8eb5eddc602109be07a50a45">PID</link>&amp;&#32;pid)
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;_ksys_get_thread_slot(pid);
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
78 
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_kolibri_lib_1_1_thread_1a8c4f7f76752ed94392f9409f4f9554da">ThreadInfo</link>&#32;<link linkend="_namespace_kolibri_lib_1_1_thread_1a620ca73995252a0f262597d84b5cc40f">GetThreadInfo</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1_1_thread_1ac583b7a88e5bddeab393a41bf9929c51">Slot</link>&#32;&amp;thread)
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_kolibri_lib_1_1_thread_1a8c4f7f76752ed94392f9409f4f9554da">ThreadInfo</link>&#32;*buff&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1_1_thread_1a8c4f7f76752ed94392f9409f4f9554da">ThreadInfo</link>;
86 
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ksys_thread_info(buff,&#32;thread);
88 
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_kolibri_lib_1_1_thread_1a8c4f7f76752ed94392f9409f4f9554da">ThreadInfo</link>&#32;r&#32;=&#32;*buff;
90 
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;KSYS_THREAD_INFO_SIZE;&#32;i++)
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r.__reserved3[i]&#32;=&#32;buff-&gt;__reserved3[i];
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
95 
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;free(buff);&#32;<emphasis role="comment">//Возвращается&#32;копия&#32;так&#32;как&#32;указатель&#32;нужно&#32;будет&#32;удалять</emphasis>
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;но&#32;в&#32;какой&#32;то&#32;момент&#32;точно&#32;об&#32;этом&#32;забудешь...</emphasis>
98 
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;r;
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
101 
102 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;namespace&#32;Thread</emphasis>
103 &#32;&#32;&#32;&#32;
104 }&#32;<emphasis role="comment">//&#32;namespace&#32;KolibriLib</emphasis>
105 
106 
107 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;__THREAD_H__</emphasis>
</programlisting></section>
