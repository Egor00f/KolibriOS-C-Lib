<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label" xml:lang="ru">
<title>Класс KolibriLib::UI::text::TextLabel</title>
<indexterm><primary>KolibriLib::UI::text::TextLabel</primary></indexterm>
<para>

<para>Текстовая метка </para>
 
</para>
<para>
<computeroutput>#include &lt;text.hpp&gt;</computeroutput>
</para>
<para>Граф наследования:KolibriLib::UI::text::TextLabel:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Открытые члены    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1a8962661bbfe9e1ac4040e0b1deb00b03">TextLabel</link> (const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp;coord={0, 0}, const <link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> &amp;size={16, 16}, const std::string &amp;text=&quot;TextLabel&quot;, const unsigned &amp;FontSize=9, bool TextScale=true, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;TextColor=<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_text, const unsigned &amp;Margin=0)</para>

<para>Конструктор </para>
</listitem>
            <listitem><para><anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1a5713222686869336f8f0f4c3393cf0dd"/><emphasis role="strong">TextLabel</emphasis> (const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp;coord={0, 0}, const <link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> &amp;size={16, 16}, const std::string &amp;text=&quot;TextLabel&quot;, const <link linkend="_struct_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1_1_font">Fonts::Font</link> &amp;Font=<link linkend="_namespace_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1abab58341d8cf9048d474cf45a2e00723">Fonts::DefaultFont</link>, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;TextColor=<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_text, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;BackgroundColor=<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().frame_area, bool TextScale=true, const unsigned &amp;Margin=0)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1a94eac7696fa535861d0e09c6a62ccca7">Render</link> () const</para>

<para>Отрисовать текстовую метку </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1a13c115d127bc7f90cb438bbd2b31619d">SetScale</link> (bool scale)</para>

<para>Изменить значение переменной <link linkend="_">_TextScale.</link></para>
</listitem>
            <listitem><para><anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1aab96734da4336a4c8b564279712e1a25"/>bool <emphasis role="strong">GetScale</emphasis> () const</para>

<para>Получить состояние переменной <link linkend="_af3e4dd316b274bca4d5bf9573f47aecb">@ return значение переменной  _TextScale. </link></para>
</listitem>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label">TextLabel</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1ade3a8b232411beab67d7a4911143e8cf">operator=</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label">TextLabel</link> &amp;a)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1ae6c1737b23aef9af57388e0e9429c10a">operator==</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label">TextLabel</link> &amp;a) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1a99e7270e0f0b247e1245cf5e79b1a9ca"/>bool <emphasis role="strong">operator!=</emphasis> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label">TextLabel</link> &amp;a) const</para>
</listitem>
        </itemizedlist>
</simplesect>
Открытые члены унаследованные от <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">KolibriLib::UI::UIElement</link>        <itemizedlist>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a33831abb04efdef35c3a895590a60137">UIElement</link> (const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp;coord={0, 0}, const <link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> &amp;size={16, 16}, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;MainColor=<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_graph, const unsigned &amp;Margin=DefaultMargin, bool relative=false)</para>

<para>Конструктор </para>
</listitem>
            <listitem><para>const <link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a7411f3ff0db5a7453f0d23c5ead9ce9e">GetSize</link> () const</para>

<para>Получить размер элемента </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a3b3eb7370243281576ff27c489db913d">SetSize</link> (const <link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> &amp;NewSize)</para>

<para>Изменить размер элемента </para>
</listitem>
            <listitem><para>unsigned <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a452197bd6d4f5aebf9c432a9a3a088e2">GetMargin</link> () const</para>

<para>Получить отступы </para>
</listitem>
            <listitem><para>const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a69995a90b6e010f467ab766edfa782d4">GetColor</link> () const</para>

<para>Получить осносной цвет элемента </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a969186d6406bb6c11a024e5a91749336">SetColor</link> (const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;NewColor)</para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a16b029a7f35ee44656c2eb2af211873d">SetCoord</link> (const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp;NewCoord)</para>
</listitem>
            <listitem><para>const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a3f2f4016ffe8414c55cc13c665b0a3a8">GetCoord</link> () const</para>

<para>Получить координаты элемента </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a983464b962931621091affaa11f0472a">Rotate</link> (unsigned NewAngle)</para>

<para>Повернуть элемент </para>
</listitem>
            <listitem><para>unsigned <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a91df2001fe6967e760d343e42f5d870c">GetRotate</link> () const</para>

<para>Получить угол наклона элемента </para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1acb1303729c55ba615af2562823dd2c8e">Hover</link> () const</para>

<para>Проверить лежит ли курсор мыши над элементом </para>
</listitem>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a55bc7a13f3d7f444e2004adde9b45700">operator=</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link> &amp;Element)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1aadb7dd820e6edfb96007bb83743bee3c">operator==</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link> &amp;Element) const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a47f5a94da324198946c6567244620f86">operator!=</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link> &amp;Element) const</para>
</listitem>
        </itemizedlist>
Открытые члены унаследованные от <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text">KolibriLib::UI::text::Text</link>        <itemizedlist>
            <listitem><para><emphasis role="strong">Text</emphasis> ()</para>

<para>Конструктор </para>
</listitem>
            <listitem><para><emphasis role="strong">~Text</emphasis> ()</para>

<para>Деструктор </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a6304a4ae03858133d064303a9f4aa640">Add</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_char">Char</link> &amp;c)</para>

<para>Добавить символ в конец </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a658e87b66c50a1a6e6d3d39640dad143">Add</link> (const std::string &amp;txt)</para>

<para>Добавить строку в конец </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1af4ad74911003d2d01b88bba3a84782b8">Add</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1img">Images::img</link> &amp;img)</para>

<para>долбавить изображение в конец </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a50f90789d11b5c32a1ca876ec3925ae3">insert</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_char">Char</link> &amp;c, int i)</para>

<para>Вставить элемент </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a279e3feed8526c479ebcf9d37257f2cf">insert</link> (const std::string &amp;txt, int i)</para>

<para>Вставить строку </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a6fea058c7b14276e03d540219763e189">insert</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1img">Images::img</link> &amp;img, int i)</para>

<para>Вставить изображение </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a2b3cc12a6b74de60c7e74f90fed4fec9">Delete</link> (int i)</para>

<para>Удалить <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_char">Char</link> из текста </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1aa295c124569525622fe943eeeb23aecf">Print</link> (const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp;coord) const</para>

<para>Вывести текст </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a143c7924e3daa06259bc93b3e7306bc5">SetFont</link> (const <link linkend="_struct_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1_1_font">Fonts::Font</link> &amp;Font)</para>

<para>Изменить шрифт символов </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a72454cdc486cd55c422ce58da282702a">SetTextColor</link> (const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;Color)</para>

<para>Изменить цвет текста для всех символов </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a3c5e7c50af916002563b29b55822cacd">SetBackgroundColor</link> (const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;Color)</para>

<para>Изменить цвет фона для всех символов </para>
</listitem>
            <listitem><para>std::string &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a6752e4a7728fad2ad4f22c38ded456a5">GetText</link> () const</para>

<para>Получить текст </para>
</listitem>
            <listitem><para>const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_char">Char</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a583340eae4461e85511dbd1aefeb3e36">GetChar</link> (int i) const</para>

<para>Получить символ под номером i. </para>
</listitem>
            <listitem><para>std::size_t <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a20eacf9e8b1e84ae39895be49e88683e">length</link> () const</para>

<para>Получить длину текста </para>
</listitem>
            <listitem><para>unsigned <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a924a553bcf51e37053e5f4a365c4d568">lenghtPX</link> () const</para>

<para>Получить длинну текста в пикселях </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a9bb52ff66ccb36a28959277f99807a47">SetText</link> (std::string text)</para>
</listitem>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text">Text</link> &amp; <emphasis role="strong">operator=</emphasis> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text">Text</link> &amp;txt)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a2f5cda180a5ba57e4774fb6bf1e22fa2">operator==</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text">Text</link> &amp;txt) const</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Дополнительные унаследованные члены    </title>
Защищенные данные унаследованные от <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">KolibriLib::UI::UIElement</link>        <itemizedlist>
            <listitem><para><link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> <emphasis role="strong">_coord</emphasis></para>

<para>Координаты </para>
</listitem>
            <listitem><para><link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> <emphasis role="strong">_size</emphasis></para>

<para>Размер </para>
</listitem>
            <listitem><para><link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> <emphasis role="strong">_MainColor</emphasis></para>
</listitem>
            <listitem><para>unsigned <emphasis role="strong">_Margin</emphasis></para>

<para>Отступы </para>
</listitem>
            <listitem><para>unsigned <emphasis role="strong">_angle</emphasis></para>

<para>Угол наклона </para>
</listitem>
            <listitem><para>bool <emphasis role="strong">_relative</emphasis></para>

<para>Оносительны ли координаты </para>
</listitem>
        </itemizedlist>
</simplesect>
Защищенные данные унаследованные от <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text">KolibriLib::UI::text::Text</link>        <itemizedlist>
            <listitem><para>std::vector&lt; <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_char">Char</link> &gt; <emphasis role="strong">_data</emphasis></para>
</listitem>
        </itemizedlist>
<section>
<title>Подробное описание</title>

<para>Текстовая метка </para>


<section xml:id="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1Простая">
<title><title>текстовая метка, ничего особенного.</title></title>
</section>
<section xml:id="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1Возможно">
<title><title>важные сведения: текст всегда отрисовывается в середине <?linebreak?></title></title>
</section>
</section>
<section>
<title>Конструктор(ы)</title>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1a8962661bbfe9e1ac4040e0b1deb00b03"/><section>
    <title>TextLabel()</title>
<indexterm><primary>TextLabel</primary><secondary>KolibriLib::UI::text::TextLabel</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::text::TextLabel</primary><secondary>TextLabel</secondary></indexterm>
<para><computeroutput>KolibriLib::UI::text::TextLabel::TextLabel (const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp; coord = <computeroutput>{0,&#160;0}</computeroutput>
, const <link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> &amp; size = <computeroutput>{16,&#160;16}</computeroutput>
, const std::string &amp; text = <computeroutput>&quot;TextLabel&quot;</computeroutput>
, const unsigned &amp; FontSize = <computeroutput>9</computeroutput>
, bool TextScale = <computeroutput>true</computeroutput>
, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp; TextColor = <computeroutput><link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_text</computeroutput>
, const unsigned &amp; Margin = <computeroutput>0</computeroutput>
)</computeroutput></para><para>

<para>Конструктор </para>
</para>

<para>
                <formalpara>
                    <title>
Аргументы</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>coord</entry><entry>
<para>координата </para>
</entry>
                            </row>
                            <row>
<entry>size</entry><entry>
<para>Рамер элемента, игнорируется если TextScale = false </para>
</entry>
                            </row>
                            <row>
<entry>text</entry><entry>
<para>Текст текста </para>
</entry>
                            </row>
                            <row>
<entry>FontSize</entry><entry>
<para>Размер текста </para>
</entry>
                            </row>
                            <row>
<entry>TextScale</entry><entry>
<para>Маштабировать текст, чтобы он не выходил за границы элемента </para>
</entry>
                            </row>
                            <row>
<entry>Margin</entry><entry>
<para>Отступы от границ </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Методы</title>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1ade3a8b232411beab67d7a4911143e8cf"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>KolibriLib::UI::text::TextLabel</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::text::TextLabel</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label">text::TextLabel</link> &amp; KolibriLib::UI::text::TextLabel::operator= (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label">TextLabel</link> &amp; a)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Аргументы</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>a</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Возвращает</title>

<para><?linebreak?> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1ae6c1737b23aef9af57388e0e9429c10a"/><section>
    <title>operator==()</title>
<indexterm><primary>operator==</primary><secondary>KolibriLib::UI::text::TextLabel</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::text::TextLabel</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput>bool KolibriLib::UI::text::TextLabel::operator== (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label">TextLabel</link> &amp; a) const</computeroutput></para>
<para>
                <formalpara>
                    <title>
Аргументы</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>a</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Возвращает</title>

<para><?linebreak?> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1a94eac7696fa535861d0e09c6a62ccca7"/><section>
    <title>Render()</title>
<indexterm><primary>Render</primary><secondary>KolibriLib::UI::text::TextLabel</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::text::TextLabel</primary><secondary>Render</secondary></indexterm>
<para><computeroutput>void KolibriLib::UI::text::TextLabel::Render ( ) const<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Отрисовать текстовую метку </para>
</para>
<para>
Переопределяется в <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1ab4d85223ff685e5400b1fff59b337159">KolibriLib::UI::buttons::Button</link>.</para>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1a13c115d127bc7f90cb438bbd2b31619d"/><section>
    <title>SetScale()</title>
<indexterm><primary>SetScale</primary><secondary>KolibriLib::UI::text::TextLabel</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::text::TextLabel</primary><secondary>SetScale</secondary></indexterm>
<para><computeroutput>void KolibriLib::UI::text::TextLabel::SetScale (bool scale)</computeroutput></para><para>

<para>Изменить значение переменной <link linkend="_">_TextScale.</link></para>
</para>

<para>
                <formalpara>
                    <title>
Аргументы</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>scale</entry><entry>
<para>Новое значение </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<para>
Объявления и описания членов класса находятся в файле:</para>
C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/UI/text.hpp</section>
</section>
