<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_kolibri_lib_1_1_u_i_1_1_check_box" xml:lang="en-US">
<title>KolibriLib::UI::CheckBox Class Reference</title>
<indexterm><primary>KolibriLib::UI::CheckBox</primary></indexterm>
<para>

<para>Класс для работы с чекбоксами </para>
 
</para>
<para>
<computeroutput>#include &lt;checkbox.hpp&gt;</computeroutput>
</para>
<para>Inheritance diagram for KolibriLib::UI::CheckBox:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_kolibri_lib_1_1_u_i_1_1_check_box.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_class_kolibri_lib_1_1_u_i_1_1_check_box_1ae6e4167e4a0da08cfdf470fcdbe3a778">style</link> { <link linkend="_class_kolibri_lib_1_1_u_i_1_1_check_box_1ae6e4167e4a0da08cfdf470fcdbe3a778a789fcd47ce15cf03f3e62e5993ab30f9">Default</link>
, <link linkend="_class_kolibri_lib_1_1_u_i_1_1_check_box_1ae6e4167e4a0da08cfdf470fcdbe3a778a0c7b30ff968ec2a0479fdb1a98f45f20">Circle</link>
, <link linkend="_class_kolibri_lib_1_1_u_i_1_1_check_box_1ae6e4167e4a0da08cfdf470fcdbe3a778a540e480f15fc54df908db757e024a8c3">Smoth</link>
 }</para>

<para>Стиль Чекбокса </para>
</listitem>
        </itemizedlist>
</simplesect>
Public Types inherited from <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button">KolibriLib::UI::buttons::Button</link>        <itemizedlist>
            <listitem><para><anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a0f3e15d49006599b71c2b5e913397440"/>enum <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a0f3e15d49006599b71c2b5e913397440">Type</link> { <emphasis role="strong">Image</emphasis> = 0
, <emphasis role="strong">Text</emphasis>
 }</para>

<para>Список типов данных которые можно &quot;запихнуть&quot; в кнопку </para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1_check_box_1ac9ac57c37caa6e4612de7029ae9b33a0"/><emphasis role="strong">CheckBox</emphasis> (const <link linkend="_struct_kolibri_lib_1_1point">Coord</link> &amp;coord={0, 0}, const <link linkend="_struct_kolibri_lib_1_1point">Size</link> &amp;size={32, 16}, const int &amp;<link linkend="_class_kolibri_lib_1_1_u_i_1_1_check_box_1ae6e4167e4a0da08cfdf470fcdbe3a778">style</link>=0, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;CheckBoxBorderColor=OS::sys_color_table.work_text, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;BackgroundColor=OS::sys_color_table.work_area, const unsigned &amp;Margin=DefaultMargin)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1_check_box_1a28dc3c7c30dc63d9a3a05ad7783c78f2"/>void <emphasis role="strong">Render</emphasis> ()</para>

<para>Отрисовать Checkbox. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1_check_box_1a04b026f728f06f2fceb0bef93dab0aa6"/>bool <emphasis role="strong">Handler</emphasis> ()</para>

<para>Обработчик кнопки </para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button">KolibriLib::UI::buttons::Button</link>        <itemizedlist>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1ac266a63a1727ed838542a876d3344c6a">Button</link> (const <link linkend="_struct_kolibri_lib_1_1point">Coord</link> &amp;coord={0, 0}, const <link linkend="_struct_kolibri_lib_1_1point">Size</link> &amp;size={20, 20}, const unsigned &amp;Margin=UI::DefaultMargin, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;ButtonColor=OS::sys_color_table.work_button)</para>

<para>Это конструктор </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a7322f320633dafa6c520a5c64f47b2f9">init</link> (const <link linkend="_struct_kolibri_lib_1_1point">Coord</link> &amp;coord={0, 0}, const <link linkend="_struct_kolibri_lib_1_1point">Size</link> &amp;size={0, 0}, const std::string &amp;text=&quot;button&quot;, const unsigned &amp;Margin=UI::DefaultMargin, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;ButtonColor=OS::sys_color_table.work_button)</para>

<para>инициализировать параметры </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a80df5512d57d429bd12b4b694544c2c1">init</link> (const <link linkend="_struct_kolibri_lib_1_1point">Coord</link> &amp;coord={0, 0}, const <link linkend="_struct_kolibri_lib_1_1point">Size</link> &amp;size={0, 0}, const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1_image">Images::Image</link> &amp;image=<link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1_image">Images::Image</link>(), const unsigned &amp;Margin=DefaultMargin, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;ButtonColor=OS::sys_color_table.work_button)</para>

<para>инициализировать параметры </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1aca7e3a8b33fe924eb03340b0461ac5af">init</link> (const <link linkend="_struct_kolibri_lib_1_1point">Coord</link> &amp;coord={0, 0}, const <link linkend="_struct_kolibri_lib_1_1point">Size</link> &amp;size={0, 0}, std::string Path=DefaultImage)</para>

<para>инициализировать параметры </para>
</listitem>
            <listitem><para>void <emphasis role="strong">Render</emphasis> ()</para>

<para>Отрисовать кнопку </para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1ac28b523b166e42343f6e7a5a9886ba1b">Handler</link> ()</para>

<para>Обработчик кнопки </para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a6eaba3fc208cd15db6121376871dde57">GetStatus</link> () const</para>

<para>Получить сосояние кнопки на момент последней обработки </para>
</listitem>
            <listitem><para>ButtonID <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a67f9b2ce434a2224a0e35d1284679616">GetId</link> () const</para>

<para>Получить номер кнопки </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a8727a99e9bd5a13394cec8c0941b9da6">Deactivate</link> ()</para>

<para>Деактивировать кнопку </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1aac6f24499abf9a0b978a0c27b2a1e344">Activate</link> ()</para>

<para>Активировать кнопку </para>
</listitem>
            <listitem><para>unsigned <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a8c01f1c3092d101ac3c7f5da551eaa77">GetType</link> () const</para>

<para>Возвращает тип данных используемых в кнопке <link linkend="_">_type.</link></para>
</listitem>
            <listitem><para>std::string <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1ac5bb4447a87ab739eae7a4f5c1ed0a3a">GetTextLabel</link> () const</para>

<para>Возвращает текст кнопки </para>
</listitem>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1_image">Images::Image</link> <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a3a82c9b3e441c0e4b0120e20627ef552">GetImage</link> () const</para>

<para>Получить изображение кнопки </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a886d985af13b7e23d7981e18678e6e66">SetText</link> (const std::string &amp;NewText)</para>

<para>Изменить текст кнопки </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a2cb83ed4bca6a6bf72dee94fd682737b">SetImage</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1_image">Images::Image</link> &amp;NewImg)</para>

<para>Изменить изображение в кнопке </para>
</listitem>
            <listitem><para><emphasis role="strong">~Button</emphasis> ()</para>

<para>Декструктор </para>
</listitem>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button">Button</link> &amp; <emphasis role="strong">operator=</emphasis> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button">Button</link> &amp;element)</para>
</listitem>
            <listitem><para>bool <emphasis role="strong">operator==</emphasis> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button">Button</link> &amp;element) const</para>
</listitem>
        </itemizedlist>
Public Member Functions inherited from <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">KolibriLib::UI::UIElement</link>        <itemizedlist>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a0e8520d7b6e47e5b307b00449702e737">UIElement</link> (const <link linkend="_struct_kolibri_lib_1_1point">Coord</link> &amp;coord={0, 0}, const <link linkend="_struct_kolibri_lib_1_1point">Size</link> &amp;size={16, 16}, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;MainColor=OS::sys_color_table.work_graph, const unsigned &amp;Margin=DefaultMargin, bool relative=false)</para>

<para>конструктор </para>
</listitem>
            <listitem><para><link linkend="_struct_kolibri_lib_1_1point">Size</link> <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1ab591105fdaaaece609203d9088948847">GetSize</link> () const</para>

<para>Получить размер элемента </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a3b3eb7370243281576ff27c489db913d">SetSize</link> (const <link linkend="_struct_kolibri_lib_1_1point">Size</link> &amp;NewSize)</para>

<para>Изменить размер элемента </para>
</listitem>
            <listitem><para>unsigned <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a452197bd6d4f5aebf9c432a9a3a088e2">GetMargin</link> () const</para>

<para>Получить отступы </para>
</listitem>
            <listitem><para><link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1adf269accbb7f07330eba3d005061fd1d">GetColor</link> () const</para>

<para>Получить осносной цвет элемента </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a969186d6406bb6c11a024e5a91749336">SetColor</link> (const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;NewColor)</para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a16b029a7f35ee44656c2eb2af211873d">SetCoord</link> (const <link linkend="_struct_kolibri_lib_1_1point">Coord</link> &amp;NewCoord)</para>
</listitem>
            <listitem><para><link linkend="_struct_kolibri_lib_1_1point">Coord</link> <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1adad4d5b75d97484323f46834dbe574c8">GetCoord</link> () const</para>

<para>Получить координаты элемента </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a983464b962931621091affaa11f0472a">Rotate</link> (unsigned NewAngle)</para>

<para>Повернуть элемент </para>
</listitem>
            <listitem><para>unsigned <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a91df2001fe6967e760d343e42f5d870c">GetRotate</link> () const</para>

<para>Получить угол наклона элемента </para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1acb1303729c55ba615af2562823dd2c8e">Hover</link> () const</para>

<para>Проверить лежит ли курсор мыши над элементом </para>
</listitem>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a55bc7a13f3d7f444e2004adde9b45700">operator=</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link> &amp;Element)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1aadb7dd820e6edfb96007bb83743bee3c">operator==</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link> &amp;Element) const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a47f5a94da324198946c6567244620f86">operator!=</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link> &amp;Element) const</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Additional Inherited Members    </title>
Protected Attributes inherited from <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">KolibriLib::UI::UIElement</link>        <itemizedlist>
            <listitem><para><link linkend="_struct_kolibri_lib_1_1point">Coord</link> <emphasis role="strong">_coord</emphasis></para>

<para>Координаты </para>
</listitem>
            <listitem><para><link linkend="_struct_kolibri_lib_1_1point">Size</link> <emphasis role="strong">_size</emphasis></para>

<para>Размер </para>
</listitem>
            <listitem><para><link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> <emphasis role="strong">_MainColor</emphasis></para>
</listitem>
            <listitem><para>unsigned <emphasis role="strong">_Margin</emphasis></para>

<para>Отступы </para>
</listitem>
            <listitem><para>unsigned <emphasis role="strong">_angle</emphasis></para>

<para>Угол наклона </para>
</listitem>
            <listitem><para>bool <emphasis role="strong">_relative</emphasis></para>

<para>Оносительн </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Класс для работы с чекбоксами </para>


<section xml:id="_namespace_kolibri_lib_1_1filesystem_1Это">
<title><title>просто чекбокс, ему можно задать различные стили</title></title>
</section>
</section>
<section>
<title>Member Enumeration Documentation</title>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1_check_box_1ae6e4167e4a0da08cfdf470fcdbe3a778"/><section>
    <title>style</title>
<indexterm><primary>style</primary><secondary>KolibriLib::UI::CheckBox</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::CheckBox</primary><secondary>style</secondary></indexterm>
<para><computeroutput>enum <link linkend="_class_kolibri_lib_1_1_u_i_1_1_check_box_1ae6e4167e4a0da08cfdf470fcdbe3a778">KolibriLib::UI::CheckBox::style</link></computeroutput></para><para>

<para>Стиль Чекбокса </para>
</para>
<informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>Default</primary><secondary>KolibriLib::UI::CheckBox</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::CheckBox</primary><secondary>Default</secondary></indexterm>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1_check_box_1ae6e4167e4a0da08cfdf470fcdbe3a778a789fcd47ce15cf03f3e62e5993ab30f9"/>Default</entry><entry>
<para>По вид умолчанию, квадрат </para>
</entry></row><row><entry><indexterm><primary>Circle</primary><secondary>KolibriLib::UI::CheckBox</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::CheckBox</primary><secondary>Circle</secondary></indexterm>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1_check_box_1ae6e4167e4a0da08cfdf470fcdbe3a778a0c7b30ff968ec2a0479fdb1a98f45f20"/>Circle</entry><entry>
<para>В виде круга </para>
</entry></row><row><entry><indexterm><primary>Smoth</primary><secondary>KolibriLib::UI::CheckBox</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::CheckBox</primary><secondary>Smoth</secondary></indexterm>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1_check_box_1ae6e4167e4a0da08cfdf470fcdbe3a778a540e480f15fc54df908db757e024a8c3"/>Smoth</entry><entry>
<para>Квадрат с со сглаженными углами </para>

<para><warning><title>Warning</title>

<para>Не реализованно (пока что) </para>
</warning>
</para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<para>
The documentation for this class was generated from the following files:</para>
F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/checkbox.hppF:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/checkbox.cpp</section>
</section>
