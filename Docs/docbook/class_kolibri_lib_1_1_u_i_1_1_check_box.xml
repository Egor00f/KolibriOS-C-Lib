<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_kolibri_lib_1_1_u_i_1_1_check_box" xml:lang="ru">
<title>Класс KolibriLib::UI::CheckBox</title>
<indexterm><primary>KolibriLib::UI::CheckBox</primary></indexterm>
<para>

<para>Класс для работы с чекбоксами </para>
 
</para>
<para>
<computeroutput>#include &lt;checkbox.hpp&gt;</computeroutput>
</para>
<para>Граф наследования:KolibriLib::UI::CheckBox:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_kolibri_lib_1_1_u_i_1_1_check_box.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Открытые типы    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_class_kolibri_lib_1_1_u_i_1_1_check_box_1ae6e4167e4a0da08cfdf470fcdbe3a778">style</link> { <link linkend="_class_kolibri_lib_1_1_u_i_1_1_check_box_1ae6e4167e4a0da08cfdf470fcdbe3a778a789fcd47ce15cf03f3e62e5993ab30f9">Default</link>
, <link linkend="_class_kolibri_lib_1_1_u_i_1_1_check_box_1ae6e4167e4a0da08cfdf470fcdbe3a778a0c7b30ff968ec2a0479fdb1a98f45f20">Circle</link>
, <link linkend="_class_kolibri_lib_1_1_u_i_1_1_check_box_1ae6e4167e4a0da08cfdf470fcdbe3a778a540e480f15fc54df908db757e024a8c3">Smoth</link>
 }</para>

<para>Стиль Чекбокса </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Открытые члены    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1_check_box_1a79e393a4bc6d613aaba60a046e867819"/><emphasis role="strong">CheckBox</emphasis> (const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp;coord={0, 0}, const <link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> &amp;size={32, 16}, const int &amp;<link linkend="_class_kolibri_lib_1_1_u_i_1_1_check_box_1ae6e4167e4a0da08cfdf470fcdbe3a778">style</link>=0, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;CheckBoxBorderColor=<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_text, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;BackgroundColor=<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_area, const unsigned &amp;Margin=DefaultMargin)</para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_check_box_1aba21f5e09a9b4908cb82766844dedd40">Render</link> ()</para>

<para>Отрисовать Checkbox. </para>
</listitem>
            <listitem><para><anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1_check_box_1a413255ceee97d1b7d0d4318c06f375d4"/>bool <emphasis role="strong">Handler</emphasis> ()</para>

<para>Обработчик кнопки </para>
</listitem>
        </itemizedlist>
</simplesect>
Открытые члены унаследованные от <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button">KolibriLib::UI::buttons::Button</link>        <itemizedlist>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a7c5d4583711cb30f0010d894af2c295e">Button</link> (const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp;coord=<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>(0, 0), const <link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> &amp;size=<link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link>(20, 20), unsigned Margin=UI::DefaultMargin, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;ButtonColor=<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_button)</para>

<para>Это конструктор </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1ab4d85223ff685e5400b1fff59b337159">Render</link> () const</para>

<para>Отрисовать кнопку </para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a9521b0d981e10f6a9466438858439cb9">Handler</link> () const</para>

<para>Обработчик кнопки </para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a3f8517f74b2049f07a9da9a9910e9814">GetStatus</link> () const</para>

<para>Получить сосояние кнопки на момент последней обработки </para>
</listitem>
            <listitem><para><link linkend="_namespace_kolibri_lib_1_1_u_i_1_1buttons_1a5bc139230a84a2c4049ba6677932e35b">ButtonID</link> <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a45ea9d51be9d17f6afca47ecfd6bdee6">GetId</link> () const</para>

<para>Получить номер кнопки </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a0a235265d209cec4e8f735d416d25505">Deactivate</link> ()</para>

<para>Деактивировать кнопку </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button_1a65b6a0809e8e43892e48065708fa01d1">Activate</link> ()</para>

<para>Активировать кнопку </para>
</listitem>
            <listitem><para><emphasis role="strong">~Button</emphasis> ()</para>

<para>Декструктор </para>
</listitem>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button">Button</link> &amp; <emphasis role="strong">operator=</emphasis> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button">Button</link> &amp;element)</para>
</listitem>
            <listitem><para>bool <emphasis role="strong">operator==</emphasis> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1buttons_1_1_button">Button</link> &amp;element) const</para>
</listitem>
        </itemizedlist>
Открытые члены унаследованные от <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label">KolibriLib::UI::text::TextLabel</link>        <itemizedlist>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1a8962661bbfe9e1ac4040e0b1deb00b03">TextLabel</link> (const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp;coord={0, 0}, const <link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> &amp;size={16, 16}, const std::string &amp;text=&quot;TextLabel&quot;, const unsigned &amp;FontSize=9, bool TextScale=true, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;TextColor=<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_text, const unsigned &amp;Margin=0)</para>

<para>Конструктор </para>
</listitem>
            <listitem><para><emphasis role="strong">TextLabel</emphasis> (const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp;coord={0, 0}, const <link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> &amp;size={16, 16}, const std::string &amp;text=&quot;TextLabel&quot;, const <link linkend="_struct_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1_1_font">Fonts::Font</link> &amp;Font=<link linkend="_namespace_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1abab58341d8cf9048d474cf45a2e00723">Fonts::DefaultFont</link>, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;TextColor=<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_text, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;BackgroundColor=<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().frame_area, bool TextScale=true, const unsigned &amp;Margin=0)</para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1a13c115d127bc7f90cb438bbd2b31619d">SetScale</link> (bool scale)</para>

<para>Изменить значение переменной <link linkend="_">_TextScale.</link></para>
</listitem>
            <listitem><para>bool <emphasis role="strong">GetScale</emphasis> () const</para>

<para>Получить состояние переменной <link linkend="_af3e4dd316b274bca4d5bf9573f47aecb">@ return значение переменной  _TextScale. </link></para>
</listitem>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label">TextLabel</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1ade3a8b232411beab67d7a4911143e8cf">operator=</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label">TextLabel</link> &amp;a)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label_1ae6c1737b23aef9af57388e0e9429c10a">operator==</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label">TextLabel</link> &amp;a) const</para>
</listitem>
            <listitem><para>bool <emphasis role="strong">operator!=</emphasis> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_label">TextLabel</link> &amp;a) const</para>
</listitem>
        </itemizedlist>
Открытые члены унаследованные от <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">KolibriLib::UI::UIElement</link>        <itemizedlist>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1aeb3d53b3e8e382240c87700e4273e820">UIElement</link> (const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp;coord=<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>(0, 0), const <link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> &amp;size=<link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link>(32, 32), const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;MainColor=<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_graph, const unsigned &amp;Margin=DefaultMargin, bool relative=false)</para>

<para>Конструктор </para>
</listitem>
            <listitem><para>const <link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a7411f3ff0db5a7453f0d23c5ead9ce9e">GetSize</link> () const</para>

<para>Получить размер элемента </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a3b3eb7370243281576ff27c489db913d">SetSize</link> (const <link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> &amp;NewSize)</para>

<para>Изменить размер элемента </para>
</listitem>
            <listitem><para>unsigned <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a452197bd6d4f5aebf9c432a9a3a088e2">GetMargin</link> () const</para>

<para>Получить отступы </para>
</listitem>
            <listitem><para>const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a69995a90b6e010f467ab766edfa782d4">GetColor</link> () const</para>

<para>Получить осносной цвет элемента </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a969186d6406bb6c11a024e5a91749336">SetColor</link> (const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;NewColor)</para>

<para>Изменить цвет </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a16b029a7f35ee44656c2eb2af211873d">SetCoord</link> (const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp;NewCoord)</para>

<para>изменить координаты </para>
</listitem>
            <listitem><para>const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a3f2f4016ffe8414c55cc13c665b0a3a8">GetCoord</link> () const</para>

<para>Получить координаты элемента </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a983464b962931621091affaa11f0472a">Rotate</link> (unsigned NewAngle)</para>

<para>Повернуть элемент </para>
</listitem>
            <listitem><para>unsigned <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a91df2001fe6967e760d343e42f5d870c">GetRotate</link> () const</para>

<para>Получить угол наклона элемента </para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1acb1303729c55ba615af2562823dd2c8e">Hover</link> () const</para>

<para>Проверить лежит ли курсор мыши над элементом </para>
</listitem>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a55bc7a13f3d7f444e2004adde9b45700">operator=</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link> &amp;Element)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1aadb7dd820e6edfb96007bb83743bee3c">operator==</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link> &amp;Element) const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a47f5a94da324198946c6567244620f86">operator!=</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link> &amp;Element) const</para>
</listitem>
        </itemizedlist>
Открытые члены унаследованные от <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text">KolibriLib::UI::text::Text</link>        <itemizedlist>
            <listitem><para><emphasis role="strong">Text</emphasis> ()</para>

<para>Конструктор </para>
</listitem>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1ae4dc7b9436433bb14c182669716c04c5">Text</link> (const std::string &amp;text)</para>

<para>Конструктор </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a6304a4ae03858133d064303a9f4aa640">Add</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_char">Char</link> &amp;c)</para>

<para>Добавить символ в конец </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a658e87b66c50a1a6e6d3d39640dad143">Add</link> (const std::string &amp;txt)</para>

<para>Добавить строку в конец </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1af4ad74911003d2d01b88bba3a84782b8">Add</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1img">Images::img</link> &amp;img)</para>

<para>долбавить изображение в конец </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a50f90789d11b5c32a1ca876ec3925ae3">insert</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_char">Char</link> &amp;c, int i)</para>

<para>Вставить элемент </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a279e3feed8526c479ebcf9d37257f2cf">insert</link> (const std::string &amp;txt, int i)</para>

<para>Вставить строку </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a6fea058c7b14276e03d540219763e189">insert</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1img">Images::img</link> &amp;img, int i)</para>

<para>Вставить изображение </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a2b3cc12a6b74de60c7e74f90fed4fec9">Delete</link> (int i)</para>

<para>Удалить <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_char">Char</link> из текста </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1aa295c124569525622fe943eeeb23aecf">Print</link> (const <link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> &amp;coord) const</para>

<para>Вывести текст </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a143c7924e3daa06259bc93b3e7306bc5">SetFont</link> (const <link linkend="_struct_kolibri_lib_1_1_u_i_1_1text_1_1_fonts_1_1_font">Fonts::Font</link> &amp;Font)</para>

<para>Изменить шрифт символов </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a72454cdc486cd55c422ce58da282702a">SetTextColor</link> (const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;Color)</para>

<para>Изменить цвет текста для всех символов </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a3c5e7c50af916002563b29b55822cacd">SetBackgroundColor</link> (const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;Color)</para>

<para>Изменить цвет фона для всех символов </para>
</listitem>
            <listitem><para>std::string &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a6752e4a7728fad2ad4f22c38ded456a5">GetText</link> () const</para>

<para>Получить текст </para>
</listitem>
            <listitem><para>const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_char">Char</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a583340eae4461e85511dbd1aefeb3e36">GetChar</link> (int i) const</para>

<para>Получить символ под номером i. </para>
</listitem>
            <listitem><para>std::size_t <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a20eacf9e8b1e84ae39895be49e88683e">length</link> () const</para>

<para>Получить длину текста </para>
</listitem>
            <listitem><para>unsigned <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a924a553bcf51e37053e5f4a365c4d568">lenghtPX</link> () const</para>

<para>Получить длинну текста в пикселях </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a9bb52ff66ccb36a28959277f99807a47">SetText</link> (std::string text)</para>
</listitem>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text">Text</link> &amp; <emphasis role="strong">operator=</emphasis> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text">Text</link> &amp;txt)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text_1a2f5cda180a5ba57e4774fb6bf1e22fa2">operator==</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text">Text</link> &amp;txt) const</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Дополнительные унаследованные члены    </title>
Защищенные данные унаследованные от <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">KolibriLib::UI::UIElement</link>        <itemizedlist>
            <listitem><para><link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link> <emphasis role="strong">_coord</emphasis></para>

<para>Координаты </para>
</listitem>
            <listitem><para><link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link> <emphasis role="strong">_size</emphasis></para>

<para>Размер </para>
</listitem>
            <listitem><para><link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> <emphasis role="strong">_MainColor</emphasis></para>
</listitem>
            <listitem><para>unsigned <emphasis role="strong">_Margin</emphasis></para>

<para>Отступы </para>
</listitem>
            <listitem><para>unsigned <emphasis role="strong">_angle</emphasis></para>

<para>Угол наклона </para>
</listitem>
            <listitem><para>bool <emphasis role="strong">_relative</emphasis></para>

<para>Оносительны ли координаты </para>
</listitem>
        </itemizedlist>
</simplesect>
Защищенные данные унаследованные от <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_text">KolibriLib::UI::text::Text</link>        <itemizedlist>
            <listitem><para>std::vector&lt; <link linkend="_class_kolibri_lib_1_1_u_i_1_1text_1_1_char">Char</link> &gt; <emphasis role="strong">_data</emphasis></para>
</listitem>
        </itemizedlist>
<section>
<title>Подробное описание</title>

<para>Класс для работы с чекбоксами </para>


<section xml:id="_namespace_kolibri_lib_1_1filesystem_1Это">
<title><title>пространство имён этакий аналог стандартной библиотеки &lt;filesystem&gt; <?linebreak?></title></title>
</section>
</section>
<section>
<title>Перечисления</title>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1_check_box_1ae6e4167e4a0da08cfdf470fcdbe3a778"/><section>
    <title>style</title>
<indexterm><primary>style</primary><secondary>KolibriLib::UI::CheckBox</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::CheckBox</primary><secondary>style</secondary></indexterm>
<para><computeroutput>enum <link linkend="_class_kolibri_lib_1_1_u_i_1_1_check_box_1ae6e4167e4a0da08cfdf470fcdbe3a778">KolibriLib::UI::CheckBox::style</link></computeroutput></para><para>

<para>Стиль Чекбокса </para>
</para>
<informaltable frame="all">
<title>Элементы перечислений</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>Default</primary><secondary>KolibriLib::UI::CheckBox</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::CheckBox</primary><secondary>Default</secondary></indexterm>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1_check_box_1ae6e4167e4a0da08cfdf470fcdbe3a778a789fcd47ce15cf03f3e62e5993ab30f9"/>Default</entry><entry>
<para>По вид умолчанию, квадрат </para>
</entry></row><row><entry><indexterm><primary>Circle</primary><secondary>KolibriLib::UI::CheckBox</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::CheckBox</primary><secondary>Circle</secondary></indexterm>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1_check_box_1ae6e4167e4a0da08cfdf470fcdbe3a778a0c7b30ff968ec2a0479fdb1a98f45f20"/>Circle</entry><entry>
<para>В виде круга </para>
</entry></row><row><entry><indexterm><primary>Smoth</primary><secondary>KolibriLib::UI::CheckBox</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::CheckBox</primary><secondary>Smoth</secondary></indexterm>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1_check_box_1ae6e4167e4a0da08cfdf470fcdbe3a778a540e480f15fc54df908db757e024a8c3"/>Smoth</entry><entry>
<para>Квадрат с со сглаженными углами </para>

<para><warning><title>Предупреждения</title>

<para>Не реализованно (пока что) </para>
</warning>
</para>
</entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
</section>
<section>
<title>Методы</title>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1_check_box_1aba21f5e09a9b4908cb82766844dedd40"/><section>
    <title>Render()</title>
<indexterm><primary>Render</primary><secondary>KolibriLib::UI::CheckBox</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::CheckBox</primary><secondary>Render</secondary></indexterm>
<para><computeroutput>void KolibriLib::UI::CheckBox::Render ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Отрисовать Checkbox. </para>
</para>
<para>
Переопределяет метод предка <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a515d066817fa6db183323fb0e6ff7467">KolibriLib::UI::UIElement</link>.</para>
</section>
<para>
Объявления и описания членов класса находятся в файле:</para>
C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/UI/checkbox.hpp</section>
</section>
