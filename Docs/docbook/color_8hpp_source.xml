<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_color_8hpp_source" xml:lang="ru">
<title>color.hpp</title>
<indexterm><primary>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/color.hpp</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#ifndef&#32;__COLOR_H__</emphasis>
2 <emphasis role="preprocessor">#define&#32;__COLOR_H__</emphasis>
3 
4 <emphasis role="preprocessor">#include&#32;&lt;sys/ksys.h&gt;</emphasis>
5 
6 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_kolibri_lib">KolibriLib</link>
7 {
9 &#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>Colors
10 &#32;&#32;&#32;&#32;{
12 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_kolibri_lib_1_1_colors_1_1_a_r_g_b">ARGB</link>
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;alpha;
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;blue;
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;green;
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;red;
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">union&#32;</emphasis><link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Color</link>
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint32_t&#32;val;
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;_a;
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;blue;
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;green;
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;red;
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_union_kolibri_lib_1_1_colors_1_1_color_1a6850297f0cf19caec6dc0b769f6f5537">Color</link>(<emphasis role="keyword">const</emphasis>&#32;ksys_color_t&amp;&#32;a&#32;=&#32;0);
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_union_kolibri_lib_1_1_colors_1_1_color_1a6850297f0cf19caec6dc0b769f6f5537">Color</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Color</link>&#32;&amp;a);
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_union_kolibri_lib_1_1_colors_1_1_color_1a6850297f0cf19caec6dc0b769f6f5537">Color</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_kolibri_lib_1_1_colors_1_1_a_r_g_b">ARGB</link>&#32;&amp;a);
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_union_kolibri_lib_1_1_colors_1_1_color_1a6850297f0cf19caec6dc0b769f6f5537">Color</link>(<emphasis role="keyword">const</emphasis>&#32;rgb_t&#32;&amp;color);
38 
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rgb_t&#32;<link linkend="_union_kolibri_lib_1_1_colors_1_1_color_1a4686f00731471d5cd1f0ea052573da80">GetRGB</link>()&#32;<emphasis role="keyword">const</emphasis>;
42 
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Color</link>&amp;&#32;operator&#32;=&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Color</link>&amp;&#32;a);
44 
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Color</link>&#32;&amp;<link linkend="_union_kolibri_lib_1_1_colors_1_1_color_1af5c03ec0be23161994483a05b62de569">operator + </link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Color</link>&#32;&amp;a);
49 
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;==&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Color</link>&amp;&#32;a)&#32;<emphasis role="keyword">const</emphasis>;
51 
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;!=&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Color</link>&amp;&#32;a)&#32;<emphasis role="keyword">const</emphasis>;
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
54 
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ksys_color_t&#32;<link linkend="_namespace_kolibri_lib_1_1_colors_1a234ec0266b5f9e86ecbe9c66dd0c7a41">RGBtoINT</link>(<emphasis role="keyword">const</emphasis>&#32;rgb_t&#32;&amp;color);
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rgb_t&#32;<link linkend="_namespace_kolibri_lib_1_1_colors_1a3bf97c2285f8e829ccc0bc5c5b61dca2">UINT32toRGB</link>(<emphasis role="keyword">const</emphasis>&#32;uint32_t&#32;&amp;color);
64 
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Color</link>&#32;<link linkend="_namespace_kolibri_lib_1_1_colors_1a1d8b4c18bcb459e79bf6f5d140ada7a6">BlendColors</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Color</link>&#32;&amp;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Color</link>&#32;&amp;b,&#32;<emphasis role="keywordtype">float</emphasis>&#32;k&#32;=&#32;0.5f);
71 
72 
73 
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;ksys_colors_table_t&#32;<link linkend="_namespace_kolibri_lib_1_1_colors_1ad6deb13041b3eac69cf1eeaab2b814a8">DefaultColorTable</link>&#32;=&#32;{0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0,&#32;0};
76 
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_kolibri_lib_1_1_colors_1_1_colors_table">ColorsTable</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;ksys_colors_table_t
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_kolibri_lib_1_1_colors_1_1_colors_table">ColorsTable</link>(ksys_colors_table_t&#32;table&#32;=&#32;<link linkend="_namespace_kolibri_lib_1_1_colors_1ad6deb13041b3eac69cf1eeaab2b814a8">DefaultColorTable</link>);
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;==&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_kolibri_lib_1_1_colors_1_1_colors_table">ColorsTable</link>&#32;&amp;table)&#32;<emphasis role="keyword">const</emphasis>;
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;!=&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_kolibri_lib_1_1_colors_1_1_colors_table">ColorsTable</link>&#32;&amp;table)&#32;<emphasis role="keyword">const</emphasis>;
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
85 &#32;&#32;&#32;&#32;}
86 }&#32;<emphasis role="comment">//&#32;namespace&#32;KolibriLib</emphasis>
87 
88 
89 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;__COLOR_H__</emphasis>
</programlisting></section>
