<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_kolibri_lib_1_1_u_i_1_1_images_1_1_image" xml:lang="ru">
<title>Класс KolibriLib::UI::Images::Image</title>
<indexterm><primary>KolibriLib::UI::Images::Image</primary></indexterm>
<para>

<para>Картинка как элемент интерфейса </para>
 
</para>
<para>
<computeroutput>#include &lt;image.hpp&gt;</computeroutput>
</para>
<para>Граф наследования:KolibriLib::UI::Images::Image:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_kolibri_lib_1_1_u_i_1_1_images_1_1_image.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Открытые члены    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1a0a1195770835be1f5513910bf8eb21d7">Image</link> (const <link linkend="_struct_kolibri_lib_1_1point">Coord</link> &amp;coord={0, 0}, const <link linkend="_struct_kolibri_lib_1_1point">Size</link> &amp;size={100, 100})</para>

<para>Конструктор </para>
</listitem>
            <listitem><para><anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1ad63223057a3cea18f027074d68ff2ecc"/><emphasis role="strong">~Image</emphasis> ()</para>

<para>Деструктор </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1a0cafdef164e76cea219923deb39b9f2c">Render</link> () const</para>

<para>Вывести изображение в окно </para>
</listitem>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1_image">Image</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1ae00f970794772662ac7d8db0fc135771">operator=</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1_image">Image</link> &amp;a)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1abdbd06975b0b6cb2f6fbbec1383276dc"/>void <emphasis role="strong">init</emphasis> (const <link linkend="_struct_kolibri_lib_1_1point">Coord</link> &amp;coord={0, 0}, const <link linkend="_struct_kolibri_lib_1_1point">Size</link> &amp;size={100, 100}, const <link linkend="_class_kolibri_lib_1_1filesystem_1_1_path">filesystem::Path</link> &amp;Path=DefaultImage)</para>
</listitem>
        </itemizedlist>
</simplesect>
Открытые члены унаследованные от <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">KolibriLib::UI::UIElement</link>        <itemizedlist>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a0e8520d7b6e47e5b307b00449702e737">UIElement</link> (const <link linkend="_struct_kolibri_lib_1_1point">Coord</link> &amp;coord={0, 0}, const <link linkend="_struct_kolibri_lib_1_1point">Size</link> &amp;size={16, 16}, const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;MainColor=OS::sys_color_table.work_graph, const unsigned &amp;Margin=DefaultMargin, bool relative=false)</para>

<para>Конструктор </para>
</listitem>
            <listitem><para>const <link linkend="_struct_kolibri_lib_1_1point">Size</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a7411f3ff0db5a7453f0d23c5ead9ce9e">GetSize</link> () const</para>

<para>Получить размер элемента </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a3b3eb7370243281576ff27c489db913d">SetSize</link> (const <link linkend="_struct_kolibri_lib_1_1point">Size</link> &amp;NewSize)</para>

<para>Изменить размер элемента </para>
</listitem>
            <listitem><para>unsigned <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a452197bd6d4f5aebf9c432a9a3a088e2">GetMargin</link> () const</para>

<para>Получить отступы </para>
</listitem>
            <listitem><para>const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a69995a90b6e010f467ab766edfa782d4">GetColor</link> () const</para>

<para>Получить осносной цвет элемента </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a969186d6406bb6c11a024e5a91749336">SetColor</link> (const <link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> &amp;NewColor)</para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a16b029a7f35ee44656c2eb2af211873d">SetCoord</link> (const <link linkend="_struct_kolibri_lib_1_1point">Coord</link> &amp;NewCoord)</para>
</listitem>
            <listitem><para>const <link linkend="_struct_kolibri_lib_1_1point">Coord</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a3f2f4016ffe8414c55cc13c665b0a3a8">GetCoord</link> () const</para>

<para>Получить координаты элемента </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a983464b962931621091affaa11f0472a">Rotate</link> (unsigned NewAngle)</para>

<para>Повернуть элемент </para>
</listitem>
            <listitem><para>unsigned <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a91df2001fe6967e760d343e42f5d870c">GetRotate</link> () const</para>

<para>Получить угол наклона элемента </para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1acb1303729c55ba615af2562823dd2c8e">Hover</link> () const</para>

<para>Проверить лежит ли курсор мыши над элементом </para>
</listitem>
            <listitem><para><link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link> &amp; <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a55bc7a13f3d7f444e2004adde9b45700">operator=</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link> &amp;Element)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1aadb7dd820e6edfb96007bb83743bee3c">operator==</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link> &amp;Element) const</para>
</listitem>
            <listitem><para>bool <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element_1a47f5a94da324198946c6567244620f86">operator!=</link> (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">UIElement</link> &amp;Element) const</para>
</listitem>
        </itemizedlist>
Открытые члены унаследованные от <link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1img">KolibriLib::UI::Images::img</link>        <itemizedlist>
            <listitem><para>virtual void <emphasis role="strong">Render</emphasis> (const <link linkend="_struct_kolibri_lib_1_1point">Coord</link> &amp;coord, const <link linkend="_struct_kolibri_lib_1_1point">Size</link> &amp;size) const</para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1img_1a4035876f0222a7ccdc175b595428732f">LoadImage</link> (const <link linkend="_class_kolibri_lib_1_1filesystem_1_1_path">filesystem::Path</link> &amp;Path=DefaultImage)</para>

<para>Загрузить изображение </para>
</listitem>
            <listitem><para>void <link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1img_1af29a0e50b662f1eabd18c8cfdff392a5">SetImg</link> (Image_t *<link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1img">img</link>)</para>

<para>Изменить изображение </para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Дополнительные унаследованные члены    </title>
Защищенные данные унаследованные от <link linkend="_class_kolibri_lib_1_1_u_i_1_1_u_i_element">KolibriLib::UI::UIElement</link>        <itemizedlist>
            <listitem><para><link linkend="_struct_kolibri_lib_1_1point">Coord</link> <emphasis role="strong">_coord</emphasis></para>

<para>Координаты </para>
</listitem>
            <listitem><para><link linkend="_struct_kolibri_lib_1_1point">Size</link> <emphasis role="strong">_size</emphasis></para>

<para>Размер </para>
</listitem>
            <listitem><para><link linkend="_union_kolibri_lib_1_1_colors_1_1_color">Colors::Color</link> <emphasis role="strong">_MainColor</emphasis></para>
</listitem>
            <listitem><para>unsigned <emphasis role="strong">_Margin</emphasis></para>

<para>Отступы </para>
</listitem>
            <listitem><para>unsigned <emphasis role="strong">_angle</emphasis></para>

<para>Угол наклона </para>
</listitem>
            <listitem><para>bool <emphasis role="strong">_relative</emphasis></para>

<para>Оносительны ли координаты </para>
</listitem>
        </itemizedlist>
</simplesect>
Защищенные данные унаследованные от <link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1img">KolibriLib::UI::Images::img</link>        <itemizedlist>
            <listitem><para>Image_t * <emphasis role="strong">_img</emphasis></para>
</listitem>
        </itemizedlist>
<section>
<title>Подробное описание</title>

<para>Картинка как элемент интерфейса </para>
</section>
<section>
<title>Конструктор(ы)</title>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1a0a1195770835be1f5513910bf8eb21d7"/><section>
    <title>Image()</title>
<indexterm><primary>Image</primary><secondary>KolibriLib::UI::Images::Image</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::Images::Image</primary><secondary>Image</secondary></indexterm>
<para><computeroutput>KolibriLib::UI::Images::Image::Image (const <link linkend="_struct_kolibri_lib_1_1point">Coord</link> &amp; coord = <computeroutput>{0,&#160;0}</computeroutput>
, const <link linkend="_struct_kolibri_lib_1_1point">Size</link> &amp; size = <computeroutput>{100,&#160;100}</computeroutput>
)</computeroutput></para><para>

<para>Конструктор </para>
</para>

<para>
                <formalpara>
                    <title>
Аргументы</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>coord</entry><entry>
<para>Координаты </para>
</entry>
                            </row>
                            <row>
<entry>size</entry><entry>
<para>Размер </para>
</entry>
                            </row>
                            <row>
<entry>Path</entry><entry>
<para>Путь до картинки </para>
</entry>
                            </row>
                            <row>
<entry>Margin</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Методы</title>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1ae00f970794772662ac7d8db0fc135771"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>KolibriLib::UI::Images::Image</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::Images::Image</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1_image">Images::Image</link> &amp; KolibriLib::UI::Images::Image::operator= (const <link linkend="_class_kolibri_lib_1_1_u_i_1_1_images_1_1_image">Image</link> &amp; a)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Аргументы</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>a</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Возвращает</title>

<para><?linebreak?> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1a0cafdef164e76cea219923deb39b9f2c"/><section>
    <title>Render()</title>
<indexterm><primary>Render</primary><secondary>KolibriLib::UI::Images::Image</secondary></indexterm>
<indexterm><primary>KolibriLib::UI::Images::Image</primary><secondary>Render</secondary></indexterm>
<para><computeroutput>void KolibriLib::UI::Images::Image::Render ( ) const</computeroutput></para><para>

<para>Вывести изображение в окно </para>
</para>

<para>
                <formalpara>
                    <title>
Аргументы</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>size</entry><entry>
<para>Размер выводимого изображения </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<section xml:id="_class_kolibri_lib_1_1_u_i_1_1_images_1_1_image_1Можно">
<title><title>растянуть/сжать выводимое изображение введя новые размеры в переменную size, само изображение при этом не изменяется</title></title>
</section>
</section>
<para>
Объявления и описания членов класса находятся в файле:</para>
F:/KolibriOs/KolibriOS-Cpp-Lib/include/kolibriLib/UI/image.hpp</section>
</section>
