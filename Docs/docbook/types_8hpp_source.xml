<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_types_8hpp_source" xml:lang="en-US">
<title>types.hpp</title>
<indexterm><primary>F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/types.hpp</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#ifndef&#32;__TYPES_H__</emphasis>
2 <emphasis role="preprocessor">#define&#32;__TYPES_H__</emphasis>
3 
4 <emphasis role="preprocessor">#include&#32;&lt;sys/ksys.h&gt;</emphasis>
5 
6 <emphasis role="preprocessor">#define&#32;X_Y(x,&#32;y)(((x)&#32;&lt;&lt;&#32;16)&#32;|&#32;(y))</emphasis>
7 
8 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_kolibri_lib">KolibriLib</link>
9 {
10 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">class</emphasis>&#32;T&gt;
13 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_kolibri_lib_1_1point">point</link>
14 &#32;&#32;&#32;&#32;{
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<link linkend="_struct_kolibri_lib_1_1point_1add46882563c402c224b23c85049f7f34">x</link>;
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;<link linkend="_struct_kolibri_lib_1_1point_1a2552f28a0a4bd6d41b0b75c7e3dec4e0">y</link>;
19 
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_kolibri_lib_1_1point">point&lt;T&gt;</link>&#32;&amp;<link linkend="_struct_kolibri_lib_1_1point_1a9622605fb63ef73d9cb0e4ac6ac9fe9c">operator=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_kolibri_lib_1_1point">point&lt;T&gt;</link>&#32;&amp;p);
24 
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_kolibri_lib_1_1point_1aea6b20f0975274a5564bfe12945d5bd1">operator==</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_kolibri_lib_1_1point">point&lt;T&gt;</link>&#32;&amp;a)&#32;<emphasis role="keyword">const</emphasis>;
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_kolibri_lib_1_1point_1a5a2c05ea1ae850ba4cf0446239afe669">operator!=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_kolibri_lib_1_1point">point&lt;T&gt;</link>&#32;&amp;a)&#32;<emphasis role="keyword">const</emphasis>;
34 &#32;&#32;&#32;&#32;};
35 
36 &#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>UI
37 &#32;&#32;&#32;&#32;{
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct_kolibri_lib_1_1point">point&lt;unsigned&gt;</link>&#32;Size;
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<link linkend="_struct_kolibri_lib_1_1point">point&lt;int&gt;</link>&#32;Coord;
41 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;namespace&#32;UI</emphasis>
42 
43 &#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>Colors
44 &#32;&#32;&#32;&#32;{
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;ksys_colors_table_t&#32;<link linkend="_namespace_kolibri_lib_1_1_colors_1a6550994b56cf65f67c078179c223a748">ColorsTable</link>;
47 &#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;namespace&#32;Colors</emphasis>
48 
49 
50 }&#32;<emphasis role="comment">//&#32;namespace&#32;KolibriLib</emphasis>
51 
52 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;__TYPES_H__</emphasis>
</programlisting></section>
