<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_graphic_8hpp_source" xml:lang="ru">
<title>graphic.hpp</title>
<indexterm><primary>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/graphic/graphic.hpp</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#ifndef&#32;__GRAPHIC_H__</emphasis>
2 <emphasis role="preprocessor">#define&#32;__GRAPHIC_H__</emphasis>
3 
4 
5 <emphasis role="preprocessor">#include&#32;&lt;sys/ksys.h&gt;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
7 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
8 
9 <emphasis role="preprocessor">#include&#32;&lt;math.h&gt;</emphasis>
10 
11 <emphasis role="preprocessor">#include&#32;&lt;kolibriLib/types.hpp&gt;</emphasis>
12 <emphasis role="preprocessor">#include&#32;&lt;kolibriLib/graphic/screen.hpp&gt;</emphasis>
13 <emphasis role="preprocessor">#include&#32;&lt;kolibriLib/system/os.hpp&gt;</emphasis>
14 <emphasis role="preprocessor">#include&#32;&lt;kolibriLib/color.hpp&gt;</emphasis>
15 
16 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_kolibri_lib">KolibriLib</link>
17 {
18 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Графика</emphasis>
19 &#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>graphic
20 &#32;&#32;&#32;&#32;{
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1_1_background_1a023d840ad0755b7f682f973136a8ec3d">DrawLine</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>&#32;&amp;coord,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>&#32;&amp;b,&#32;<emphasis role="keyword">const</emphasis>&#32;Colors::Color&#32;&amp;color&#32;=&#32;<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_graph)
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ksys_draw_line(coord.x,&#32;coord.y,&#32;b.x,&#32;b.y,&#32;color.val);
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
29 
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1_1_background_1a023d840ad0755b7f682f973136a8ec3d">DrawLine</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>&#32;&amp;coord,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;lenght,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;angle,&#32;<emphasis role="keyword">const</emphasis>&#32;Colors::Color&#32;&amp;color&#32;=&#32;<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_graph)
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ksys_draw_line(coord.x,&#32;coord.y,&#32;coord.x&#32;+&#32;(lenght&#32;*&#32;cos(angle)),&#32;coord.y&#32;+&#32;(lenght&#32;*&#32;sin(angle)),&#32;color.val);
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
39 
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawPixel(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>&#32;&amp;position,&#32;<emphasis role="keyword">const</emphasis>&#32;Colors::Color&#32;&amp;color&#32;=&#32;<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_graph)
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ksys_draw_pixel(position.x,&#32;position.y,&#32;color.val);
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
47 
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawCircle(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>&amp;&#32;coord,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;&amp;Radius,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;&amp;detalization&#32;=&#32;36,&#32;<emphasis role="keyword">const</emphasis>&#32;Colors::Color&amp;&#32;color&#32;=&#32;<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_graph);
55 
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawRectangleFill(<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>&#32;position,&#32;<link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link>&#32;size,&#32;Colors::Color&#32;color&#32;=&#32;<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_graph)
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__asm__&#32;__volatile__(
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;int&#32;$0x40&quot;</emphasis>
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="stringliteral">&quot;a&quot;</emphasis>(13),&#32;
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;b&quot;</emphasis>(&#32;(position.x&#32;&lt;&lt;&#32;16)&#32;+&#32;size.x&#32;),&#32;
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;c&quot;</emphasis>(&#32;(position.y&#32;&lt;&lt;&#32;16)&#32;+&#32;size.y&#32;),&#32;
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;d&quot;</emphasis>(color.val)
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
71 
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawCircleFill(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>&amp;&#32;coord,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&amp;&#32;Radius,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&amp;&#32;detalization&#32;=&#32;36,&#32;<emphasis role="keyword">const</emphasis>&#32;Colors::Color&amp;&#32;color&#32;=&#32;<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_graph);
78 
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawPoint(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>&amp;&#32;position,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&amp;&#32;size,&#32;<emphasis role="keyword">const</emphasis>&#32;Colors::Color&amp;&#32;color&#32;=&#32;<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_graph,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;fill&#32;=&#32;<emphasis role="keyword">false</emphasis>);
85 
86 
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawRectangleLines(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>&#32;&amp;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>&#32;&amp;b,&#32;<emphasis role="keyword">const</emphasis>&#32;Colors::Color&#32;&amp;color&#32;=&#32;<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_graph)
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_kolibri_lib_1_1_background_1a023d840ad0755b7f682f973136a8ec3d">DrawLine</link>(a,&#32;{b.x,&#32;a.y},&#32;color);
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_kolibri_lib_1_1_background_1a023d840ad0755b7f682f973136a8ec3d">DrawLine</link>(a,&#32;{a.x,&#32;b.y},&#32;color);
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_kolibri_lib_1_1_background_1a023d840ad0755b7f682f973136a8ec3d">DrawLine</link>({b.x,&#32;a.y},&#32;b,&#32;color);
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_kolibri_lib_1_1_background_1a023d840ad0755b7f682f973136a8ec3d">DrawLine</link>({a.x,&#32;b.y},&#32;b,&#32;color);
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
97 
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawTriangle(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>&#32;&amp;a,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>&#32;&amp;b,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>&#32;&amp;c,&#32;<emphasis role="keyword">const</emphasis>&#32;Colors::Color&#32;&amp;color&#32;=&#32;<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">OS::GetSystemColors</link>().work_graph)
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_kolibri_lib_1_1_background_1a023d840ad0755b7f682f973136a8ec3d">DrawLine</link>(a,&#32;b,&#32;color);
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_kolibri_lib_1_1_background_1a023d840ad0755b7f682f973136a8ec3d">DrawLine</link>(a,&#32;c,&#32;color);
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_kolibri_lib_1_1_background_1a023d840ad0755b7f682f973136a8ec3d">DrawLine</link>(b,&#32;c,&#32;color);
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
109 
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;Colors::Color&#32;<link linkend="_namespace_kolibri_lib_1_1_background_1ae55e239046bde105467372aba4a7cd44">ReadPoint</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>&#32;Point)
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ksys_color_t&#32;c;
116 
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__asm__&#32;__volatile__(
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;int&#32;$0x40&quot;</emphasis>
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="stringliteral">&quot;=a&quot;</emphasis>(c)
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<emphasis role="stringliteral">&quot;a&quot;</emphasis>(35),
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;b&quot;</emphasis>((Point.x&#32;*&#32;<link linkend="_namespace_kolibri_lib_1a1de80cbbe233f747756fcf3b5d8640f9">GetScreenSize</link>().x&#32;+&#32;Point.y)));
122 
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(Colors::Color)c;
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
125 
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;rgb_t*&#32;ReadArea(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>&#32;&amp;coord,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link>&#32;&amp;size)
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rgb_t*&#32;result&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;rgb_t[size.x&#32;*&#32;size.y];
129 
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;asm_inline&#32;(
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;int&#32;$0x40&quot;</emphasis>
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;::<emphasis role="stringliteral">&quot;a&quot;</emphasis>(36),&#32;
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;b&quot;</emphasis>(result),&#32;
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;c&quot;</emphasis>(X_Y(size.x,&#32;size.y)),&#32;
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;d&quot;</emphasis>(X_Y(coord.x,&#32;coord.y))
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
137 
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;result;
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
140 
141 
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Почему&#32;то&#32;линковщик&#32;ругается&#32;&quot;undefined&#32;reference&#32;cos()&quot;</emphasis>
143 
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawCircle(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>&#32;&amp;coord,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;&amp;Radius,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;&amp;detalization,&#32;<emphasis role="keyword">const</emphasis>&#32;Colors::Color&#32;&amp;color)
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>&#32;buff;
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;b&#32;=&#32;Radius;
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;c&#32;=&#32;0;
149 
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;angle&#32;=&#32;1;&#32;angle&#32;&lt;=&#32;detalization&#32;*&#32;10;&#32;angle&#32;+=&#32;36&#32;/&#32;detalization)
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buff&#32;=&#32;<link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link>(coord.x&#32;+&#32;(<emphasis role="keywordtype">int</emphasis>)b,&#32;coord.y&#32;+&#32;(<emphasis role="keywordtype">int</emphasis>)c);
153 
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;b&#32;=&#32;Radius&#32;*&#32;cos(angle);
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;Radius&#32;*&#32;sin(angle);
156 
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>&#32;n(coord.x&#32;+&#32;(<emphasis role="keywordtype">int</emphasis>)b,&#32;coord.y&#32;+&#32;(<emphasis role="keywordtype">int</emphasis>)c);
158 
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_kolibri_lib_1_1_background_1a023d840ad0755b7f682f973136a8ec3d">DrawLine</link>(buff,&#32;n);
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
162 
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawCircleFill(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>&#32;&amp;coord,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;&amp;Radius,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;&amp;detalization,&#32;<emphasis role="keyword">const</emphasis>&#32;Colors::Color&#32;&amp;color)
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawCircle(coord,&#32;Radius,&#32;detalization,&#32;color);
166 
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;b&#32;=&#32;Radius&#32;*&#32;cos(90&#32;+&#32;45);
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;c&#32;=&#32;Radius&#32;*&#32;sin(90&#32;+&#32;45);
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_kolibri_lib_1aa4d36453273d28042aad9d1065b058ff">Coord</link>&#32;n(coord.x&#32;+&#32;(<emphasis role="keywordtype">int</emphasis>)b,&#32;coord.y&#32;+&#32;(<emphasis role="keywordtype">int</emphasis>)c);
170 
171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawRectangleFill(n,&#32;<link linkend="_namespace_kolibri_lib_1ab59db84b9e43745d40d7b9ff8f06f2fb">Size</link>((coord.x&#32;-&#32;n.x)&#32;*&#32;2,&#32;c&#32;*&#32;2),&#32;color);
172 
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;i&#32;=&#32;Radius;&#32;i&#32;&gt;&#32;(Radius&#32;-&#32;(coord.x&#32;-&#32;n.x));&#32;i--)&#32;<emphasis role="comment">//&#32;Дозакрашивание&#32;пробелов&#32;между&#32;квадратом&#32;и&#32;границами&#32;груга</emphasis>
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawCircle(coord,&#32;i,&#32;detalization,&#32;color);
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
178 &#32;&#32;&#32;&#32;}
179 
180 }&#32;<emphasis role="comment">//&#32;namespace&#32;KolibriLib</emphasis>
181 
182 
183 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;__GRAPHIC_H__</emphasis>
</programlisting></section>
