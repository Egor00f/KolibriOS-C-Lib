<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_graphic_8hpp_source" xml:lang="en-US">
<title>graphic.hpp</title>
<indexterm><primary>F:/KolibriOs/KolibriOS-Cpp-Lib/src/include/kolibriLib/graphic.hpp</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#ifndef&#32;__GRAPHIC_H__</emphasis>
2 <emphasis role="preprocessor">#define&#32;__GRAPHIC_H__</emphasis>
3 
4 
5 <emphasis role="preprocessor">#include&#32;&lt;sys/ksys.h&gt;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
7 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
8 <emphasis role="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
9 
10 <emphasis role="preprocessor">#include&#32;&lt;math.h&gt;</emphasis>
11 
12 <emphasis role="preprocessor">#include&#32;&quot;base.hpp&quot;</emphasis>
13 <emphasis role="preprocessor">#include&#32;&quot;UI.hpp&quot;</emphasis>
14 <emphasis role="preprocessor">#include&#32;&quot;color.hpp&quot;</emphasis>
15 
16 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_kolibri_lib">KolibriLib</link>
17 {
18 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Графика</emphasis>
19 &#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>graphic
20 &#32;&#32;&#32;&#32;{
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawLine(UI::Coord&#32;a,&#32;UI::Coord&#32;b,&#32;<link linkend="_namespace_kolibri_lib_1_1_color_1a2b1ec42c3492a492a59ed69c3f3b8b4a">Color::Color</link>&#32;color&#32;=&#32;<link linkend="_namespace_kolibri_lib_1_1_o_s_1a8915296792964e4aaeadf4b76f6a109a">OS::sys_color_table</link>.work_graph)
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ksys_draw_line(a.x,&#32;a.y,&#32;b.x,&#32;b.y,&#32;color);
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
29 
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawPixel(UI::Coord&#32;position,&#32;<link linkend="_namespace_kolibri_lib_1_1_color_1a2b1ec42c3492a492a59ed69c3f3b8b4a">Color::Color</link>&#32;color)
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;_ksys_draw_pixel(position.x,&#32;position.y,&#32;color);
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
37 
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawCircle(UI::Coord&#32;coord,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;Radius,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;detalization&#32;=&#32;36,&#32;<link linkend="_namespace_kolibri_lib_1_1_color_1a2b1ec42c3492a492a59ed69c3f3b8b4a">Color::Color</link>&#32;color&#32;=&#32;<link linkend="_namespace_kolibri_lib_1_1_o_s_1a8915296792964e4aaeadf4b76f6a109a">OS::sys_color_table</link>.work_graph)
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UI::Coord&#32;buff;
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;b&#32;=&#32;Radius;
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;c&#32;=&#32;0;
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;angle&#32;=&#32;1;&#32;angle&#32;&lt;=&#32;detalization&#32;*&#32;10;&#32;angle&#32;+=&#32;36&#32;/&#32;detalization)
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buff&#32;=&#32;{coord.x&#32;+&#32;(int)b,&#32;coord.y&#32;+&#32;(<emphasis role="keywordtype">int</emphasis>)c};
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;b&#32;=&#32;Radius&#32;*&#32;cos(angle);
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;Radius&#32;*&#32;sin(angle);
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UI::Coord&#32;n&#32;=&#32;{coord.x&#32;+&#32;(int)b,&#32;coord.y&#32;+&#32;(<emphasis role="keywordtype">int</emphasis>)c};
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawLine(buff,&#32;n);
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
57 
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawRectangleFill(UI::Coord&#32;position,&#32;UI::Size&#32;size,&#32;<link linkend="_namespace_kolibri_lib_1_1_color_1a2b1ec42c3492a492a59ed69c3f3b8b4a">Color::Color</link>&#32;color&#32;=&#32;<link linkend="_namespace_kolibri_lib_1_1_o_s_1a8915296792964e4aaeadf4b76f6a109a">OS::sys_color_table</link>.work_graph)
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__asm__&#32;__volatile__(
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;int&#32;$0x40&quot;</emphasis>&#32;::<emphasis role="stringliteral">&quot;a&quot;</emphasis>(13),&#32;<emphasis role="stringliteral">&quot;b&quot;</emphasis>((position.x&#32;&lt;&lt;&#32;16)&#32;+&#32;size.x),&#32;<emphasis role="stringliteral">&quot;c&quot;</emphasis>((position.y&#32;&lt;&lt;&#32;16)&#32;+&#32;size.y),&#32;<emphasis role="stringliteral">&quot;d&quot;</emphasis>(color));
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
67 
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawCircleFill(UI::Coord&#32;coord,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;Radius,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;detalization&#32;=&#32;36,&#32;<link linkend="_namespace_kolibri_lib_1_1_color_1a2b1ec42c3492a492a59ed69c3f3b8b4a">Color::Color</link>&#32;color&#32;=&#32;<link linkend="_namespace_kolibri_lib_1_1_o_s_1a8915296792964e4aaeadf4b76f6a109a">OS::sys_color_table</link>.work_graph)
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawCircle(coord,&#32;Radius,&#32;color);
76 
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;b&#32;=&#32;Radius&#32;*&#32;cos(90+45);
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;c&#32;=&#32;sqrt((Radius&#32;*&#32;Radius)&#32;-&#32;(b&#32;*&#32;b));
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UI::Coord&#32;n&#32;=&#32;{coord.x&#32;+&#32;(int)b,&#32;coord.y&#32;+&#32;(<emphasis role="keywordtype">int</emphasis>)c};
80 
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawRectangleFill(n,&#32;{(unsigned)(coord.x&#32;-&#32;n.x)&#32;*&#32;2,&#32;(unsigned)c&#32;*&#32;2},&#32;color);
82 
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">unsigned</emphasis>&#32;i&#32;=&#32;Radius;&#32;i&#32;&gt;&#32;(Radius&#32;-(coord.x&#32;-&#32;n.x));&#32;i--)<emphasis role="comment">//Дозакрашивание&#32;пробелов&#32;между&#32;квадратом&#32;и&#32;границами&#32;груга</emphasis>
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawCircle(coord,&#32;i,&#32;detalization,&#32;color);
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
88 
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawPoint(UI::Coord&#32;position,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;size,&#32;<link linkend="_namespace_kolibri_lib_1_1_color_1a2b1ec42c3492a492a59ed69c3f3b8b4a">Color::Color</link>&#32;color&#32;=&#32;<link linkend="_namespace_kolibri_lib_1_1_o_s_1a8915296792964e4aaeadf4b76f6a109a">OS::sys_color_table</link>.work_graph,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;a&#32;=&#32;<emphasis role="keyword">false</emphasis>)
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(size&#32;&lt;&#32;3)
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;a&#32;=&#32;<emphasis role="keyword">true</emphasis>;
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a)
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawCircle(position,&#32;size,&#32;color);
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawCircleFill(position,&#32;size,&#32;color);
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
109 
110 
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawRectangleLines(UI::Coord&#32;a,&#32;UI::Coord&#32;b,&#32;<link linkend="_namespace_kolibri_lib_1_1_color_1a2b1ec42c3492a492a59ed69c3f3b8b4a">Color::Color</link>&#32;color&#32;=&#32;<link linkend="_namespace_kolibri_lib_1_1_o_s_1a8915296792964e4aaeadf4b76f6a109a">OS::sys_color_table</link>.work_graph)
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawLine(a,&#32;{b.x,&#32;a.y},&#32;color);
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawLine(a,&#32;{a.x,&#32;b.y},&#32;color);
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawLine({b.x,&#32;a.y},&#32;b,&#32;color);
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawLine({a.x,&#32;b.y},&#32;b,&#32;color);
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
121 
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
123 
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DrawTriangle(UI::Coord&#32;a,&#32;UI::Coord&#32;b,&#32;UI::Coord&#32;c,&#32;<link linkend="_namespace_kolibri_lib_1_1_color_1a2b1ec42c3492a492a59ed69c3f3b8b4a">Color::Color</link>&#32;color&#32;=&#32;<link linkend="_namespace_kolibri_lib_1_1_o_s_1a8915296792964e4aaeadf4b76f6a109a">OS::sys_color_table</link>.work_graph)
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawLine(a,&#32;b,&#32;color);
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawLine(a,&#32;c,&#32;color);
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DrawLine(b,&#32;c,&#32;color);
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
135 &#32;&#32;&#32;&#32;}
136 }&#32;<emphasis role="comment">//&#32;namespace&#32;KolibriLib</emphasis>
137 
138 
139 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;__GRAPHIC_H__</emphasis>
</programlisting></section>
