<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_kolibri__treelist_8h_source" xml:lang="ru">
<title>kolibri_treelist.h</title>
<indexterm><primary>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_treelist.h</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#ifndef&#32;KOLIBRI_TREELIST_H</emphasis>
2 <emphasis role="preprocessor">#define&#32;KOLIBRI_TREELIST_H</emphasis>
3 
4 <emphasis role="preprocessor">#include&#32;&lt;kos32sys.h&gt;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&lt;kolibri_scrollbar.h&gt;</emphasis>
6 
8 <emphasis role="keyword">enum</emphasis>&#32;tl_style&#32;{
9 &#32;&#32;&#32;&#32;TL_KEY_NO_EDIT&#32;&#32;=&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;элемент&#32;нельзя&#32;редактировать&#32;на&#32;клавиатуре&#32;(изменять&#32;уровни&#32;стрелками,&#32;удалять&#32;DEL)</emphasis>
10 &#32;&#32;&#32;&#32;TL_DRAW_PAR_LINE&#32;=&#32;2,&#32;&#32;&#32;<emphasis role="comment">//&#32;рисовать&#32;линии&#32;к&#32;родительскому&#32;узлу</emphasis>
11 &#32;&#32;&#32;&#32;TL_LISTBOX_MODE&#32;&#32;=&#32;4&#32;&#32;&#32;&#32;<emphasis role="comment">//стиль&#32;не&#32;отображает&#32;уровни&#32;(как&#32;в&#32;ListBox&#32;все&#32;одного&#32;уровня)</emphasis>
12 };
13 
15 <emphasis role="keyword">enum</emphasis>&#32;tl_err&#32;{
16 &#32;&#32;&#32;&#32;TL_ERR_LOAD_CAPTION&#32;&#32;&#32;&#32;&#32;=&#32;1,&#32;<emphasis role="comment">//в&#32;памяти&#32;нет&#32;заголовка&#32;&apos;tree&apos;</emphasis>
17 &#32;&#32;&#32;&#32;TL_ERR_SAVE_MEMOTY_SIZE&#32;=&#32;2,&#32;<emphasis role="comment">//не&#32;хватает&#32;памяти&#32;для&#32;сохранения&#32;элемента</emphasis>
18 &#32;&#32;&#32;&#32;TL_ERR_LOAD_INFO_SIZE&#32;&#32;&#32;=&#32;4,&#32;<emphasis role="comment">//не&#32;совпадает&#32;размер&#32;информационной&#32;структуры&#32;при&#32;открытии</emphasis>
19 };
20 
21 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>__attribute__&#32;((__packed__))&#32;{
22 &#32;&#32;&#32;&#32;uint16_t&#32;&#32;&#32;&#32;type;&#32;&#32;&#32;<emphasis role="comment">//тип&#32;элемента,&#32;или&#32;индекс&#32;иконки&#32;для&#32;узла</emphasis>
23 &#32;&#32;&#32;&#32;uint8_t&#32;&#32;&#32;&#32;&#32;lev;&#32;&#32;&#32;&#32;<emphasis role="comment">//уровень&#32;элемента</emphasis>
24 &#32;&#32;&#32;&#32;uint8_t&#32;&#32;&#32;&#32;&#32;clo;&#32;&#32;&#32;&#32;<emphasis role="comment">//флаг&#32;закрытия,&#32;или&#32;открытия&#32;(имеет&#32;смысл&#32;для&#32;родительского&#32;узла)</emphasis>
25 &#32;&#32;&#32;&#32;uint32_t&#32;&#32;&#32;&#32;prev;&#32;&#32;&#32;<emphasis role="comment">//индекс&#32;предыдущего&#32;элемента</emphasis>
26 &#32;&#32;&#32;&#32;uint32_t&#32;&#32;&#32;&#32;next;&#32;&#32;&#32;<emphasis role="comment">//индекс&#32;последующего&#32;элемента</emphasis>
27 &#32;&#32;&#32;&#32;uint32_t&#32;&#32;&#32;&#32;tcreat;&#32;<emphasis role="comment">//врем.&#32;создания</emphasis>
28 &#32;&#32;&#32;&#32;uint32_t&#32;&#32;&#32;&#32;tdel;&#32;&#32;&#32;<emphasis role="comment">//врем.&#32;удаления</emphasis>
29 }&#32;treelist_node;
30 
31 
32 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>__attribute__&#32;((__packed__))&#32;{
33 &#32;&#32;&#32;&#32;uint32_t&#32;&#32;&#32;&#32;left;
34 &#32;&#32;&#32;&#32;uint32_t&#32;&#32;&#32;&#32;top;
35 &#32;&#32;&#32;&#32;uint32_t&#32;&#32;&#32;&#32;width;
36 &#32;&#32;&#32;&#32;uint32_t&#32;&#32;&#32;&#32;height;
37 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;*data_info;&#32;&#32;<emphasis role="comment">//&#32;указатель&#32;на&#32;основные&#32;даные</emphasis>
38 &#32;&#32;&#32;&#32;uint16_t&#32;&#32;&#32;&#32;info_size;&#32;&#32;<emphasis role="comment">//&#32;размер&#32;данных&#32;выделяемых&#32;для&#32;каждого&#32;узла&#32;(пользовательськие&#32;данные&#32;+&#32;текст&#32;для&#32;подписи)</emphasis>
39 &#32;&#32;&#32;&#32;uint32_t&#32;&#32;&#32;&#32;info_max_count;&#32;<emphasis role="comment">//&#32;максимальное&#32;количество&#32;узлов,&#32;которые&#32;можно&#32;добавить&#32;в&#32;элемент</emphasis>
40 &#32;&#32;&#32;&#32;uint32_t&#32;&#32;&#32;&#32;style;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;стили&#32;элемента</emphasis>
41 &#32;&#32;&#32;&#32;treelist_node&#32;*data_nodes;&#32;<emphasis role="comment">//&#32;указатель&#32;на&#32;структуры&#32;узлов</emphasis>
42 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;*data_img;&#32;&#32;&#32;<emphasis role="comment">//&#32;указатель&#32;на&#32;изображения&#32;с&#32;иконками&#32;узлов</emphasis>
43 &#32;&#32;&#32;&#32;uint16_t&#32;&#32;&#32;&#32;img_cx;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ширина&#32;иконок</emphasis>
44 &#32;&#32;&#32;&#32;uint16_t&#32;&#32;&#32;&#32;img_cy;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;высота&#32;иконок</emphasis>
45 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;*data_img_sys;<emphasis role="comment">//указатель&#32;на&#32;системные&#32;изображения&#32;(стрелки,&#32;плюсики)</emphasis>
46 &#32;&#32;&#32;&#32;uint32_t&#32;&#32;&#32;&#32;ch_tim;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;количество&#32;изменений&#32;в&#32;файле</emphasis>
47 &#32;&#32;&#32;&#32;uint32_t&#32;&#32;&#32;&#32;tim_undo;&#32;&#32;&#32;<emphasis role="comment">//&#32;количество&#32;отмененных&#32;действий</emphasis>
48 &#32;&#32;&#32;&#32;uint32_t&#32;&#32;&#32;&#32;cur_pos;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;позиция&#32;курсора</emphasis>
49 &#32;&#32;&#32;&#32;color_t&#32;&#32;&#32;&#32;&#32;col_bkg;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;цвет&#32;фона</emphasis>
50 &#32;&#32;&#32;&#32;color_t&#32;&#32;&#32;&#32;&#32;col_zag;&#32;<emphasis role="comment">//&#32;цвет&#32;заголовка</emphasis>
51 &#32;&#32;&#32;&#32;color_t&#32;&#32;&#32;&#32;&#32;col_txt;&#32;<emphasis role="comment">//&#32;цвет&#32;текста</emphasis>
52 &#32;&#32;&#32;&#32;uint16_t&#32;&#32;&#32;&#32;capt_cy;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;высота&#32;подписи</emphasis>
53 &#32;&#32;&#32;&#32;uint16_t&#32;&#32;&#32;&#32;info_capt_offs;<emphasis role="comment">//сдвиг&#32;для&#32;начала&#32;текста&#32;(подписи&#32;узла)</emphasis>
54 &#32;&#32;&#32;&#32;uint16_t&#32;&#32;&#32;&#32;info_capt_len;<emphasis role="comment">//длина&#32;текста&#32;подписи&#32;узла&#32;(если&#32;=&#32;0&#32;то&#32;до&#32;конца&#32;структуры)</emphasis>
55 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;*el_focus;&#32;&#32;&#32;<emphasis role="comment">//&#32;указатель&#32;на&#32;структуру&#32;элемента&#32;в&#32;фокусе</emphasis>
56 &#32;&#32;&#32;&#32;scrollbar&#32;&#32;*p_scroll;&#32;&#32;&#32;<emphasis role="comment">//&#32;указатель&#32;на&#32;структуру&#32;скроллинга</emphasis>
57 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;*on_press;&#32;&#32;&#32;<emphasis role="comment">//&#32;+84&#32;указатель&#32;на&#32;функцию,&#32;которая&#32;вызывается&#32;при&#32;нажатии&#32;Enter</emphasis>
58 }&#32;treelist;
59 
60 <emphasis role="comment">//&#32;capt_cy&#32;may&#32;be&#32;0&#32;=&#32;no&#32;caption</emphasis>
61 <emphasis role="comment">//&#32;if&#32;icon_size&#32;is&#32;16x16,&#32;and&#32;data_img&#32;id&#32;NULL,&#32;no&#32;icons&#32;-&#32;useful&#32;in&#32;list&#32;mode</emphasis>
62 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;treelist*&#32;kolibri_new_treelist(&#32;uint32_t&#32;x_w,&#32;uint32_t&#32;y_h,&#32;uint16_t&#32;capt_cy,&#32;uint32_t&#32;icon_size_xy,&#32;uint16_t&#32;info_size,&#32;uint32_t&#32;info_max_count,
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint16_t&#32;info_capt_len,&#32;uint16_t&#32;info_capt_offs,&#32;<emphasis role="keyword">enum</emphasis>&#32;tl_style&#32;style,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*el_focus,&#32;color_t&#32;back,&#32;color_t&#32;title,&#32;color_t&#32;txt)
64 {
65 &#32;&#32;&#32;&#32;treelist&#32;*tl&#32;=&#32;(treelist&#32;*)calloc(1,&#32;<emphasis role="keyword">sizeof</emphasis>(treelist));
66 &#32;&#32;&#32;&#32;tl-&gt;left=&#32;x_w&#32;&gt;&gt;&#32;16;
67 &#32;&#32;&#32;&#32;tl-&gt;width&#32;=&#32;x_w&#32;&amp;&#32;0xFFFF;
68 &#32;&#32;&#32;&#32;tl-&gt;top&#32;=&#32;y_h&#32;&gt;&gt;&#32;16;
69 &#32;&#32;&#32;&#32;tl-&gt;height&#32;=&#32;y_h&#32;&amp;&#32;0xFFFF;
70 &#32;&#32;&#32;&#32;tl-&gt;info_size&#32;=&#32;info_size;
71 &#32;&#32;&#32;&#32;tl-&gt;info_max_count&#32;=&#32;info_max_count;
72 &#32;&#32;&#32;&#32;tl-&gt;style&#32;=&#32;style;
73 &#32;&#32;&#32;&#32;tl-&gt;img_cx&#32;=&#32;icon_size_xy&#32;&gt;&gt;&#32;16;
74 &#32;&#32;&#32;&#32;tl-&gt;img_cy&#32;=&#32;icon_size_xy&#32;&amp;&#32;0xFFFF;
75 &#32;&#32;&#32;&#32;tl-&gt;col_bkg&#32;=&#32;back;
76 &#32;&#32;&#32;&#32;tl-&gt;col_zag&#32;=&#32;title;
77 &#32;&#32;&#32;&#32;tl-&gt;col_txt&#32;=&#32;txt;
78 &#32;&#32;&#32;&#32;tl-&gt;info_capt_len&#32;=&#32;info_capt_len;
79 &#32;&#32;&#32;&#32;tl-&gt;info_capt_offs&#32;=&#32;info_capt_offs;
80 &#32;&#32;&#32;&#32;tl-&gt;el_focus&#32;=&#32;el_focus;
81 &#32;&#32;&#32;&#32;tl-&gt;capt_cy&#32;=&#32;capt_cy;
82 &#32;&#32;&#32;&#32;tl-&gt;p_scroll&#32;=&#32;kolibri_new_scrollbar_def(X_Y(0,&#32;16),&#32;X_Y(0,&#32;0),&#32;100,&#32;30,&#32;0);
83 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;tl;
84 }
85 
86 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;gui_add_treelist(<link linkend="_structkolibri__window">kolibri_window</link>&#32;*wnd,&#32;treelist*&#32;tl)
87 {
88 &#32;&#32;&#32;&#32;kolibri_window_add_element(wnd,&#32;KOLIBRI_TREELIST,&#32;tl);
89 }
90 
91 
93 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*tl_mouse)(treelist&#32;*)&#32;__attribute__((__stdcall__));
94 
96 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*tl_draw)(treelist&#32;*)&#32;__attribute__((__stdcall__));
97 __attribute__((__stdcall__))&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;treelist_draw(treelist&#32;*tl)
98 {
99 &#32;&#32;&#32;&#32;tl-&gt;p_scroll-&gt;all_redraw&#32;=&#32;1;
100 &#32;&#32;&#32;&#32;(*tl_draw)(tl);
101 }
102 
103 
105 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*tl_node_move_up)(treelist&#32;*)&#32;__attribute__((__stdcall__));
106 
108 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*tl_node_move_down)(treelist&#32;*)&#32;__attribute__((__stdcall__));
109 
111 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*tl_data_init)(treelist&#32;*)&#32;__attribute__((__stdcall__));
112 
113 
115 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*tl_data_clear)(treelist&#32;*)&#32;__attribute__((__stdcall__));
116 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;treelist_data_clear(treelist&#32;*tl)
117 {
118 &#32;&#32;&#32;&#32;(*tl_data_clear)(tl);
119 &#32;&#32;&#32;&#32;free(tl-&gt;p_scroll);
120 }
121 
123 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*tl_info_clear)(treelist&#32;*)&#32;__attribute__((__stdcall__));
124 
125 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*tl_key_asm)(treelist&#32;*)&#32;__attribute__((__stdcall__));
127 __attribute__((__stdcall__))&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;treelist_key(treelist&#32;*tl,&#32;oskey_t&#32;code)
128 {
129 &#32;&#32;&#32;&#32;__asm__&#32;__volatile__&#32;(
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;push&#32;%2\n\t&quot;</emphasis>
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;call&#32;*%1&#32;\n\t&quot;</emphasis>::<emphasis role="stringliteral">&quot;a&quot;</emphasis>(code.val),&#32;<emphasis role="stringliteral">&quot;m&quot;</emphasis>(tl_key_asm),&#32;<emphasis role="stringliteral">&quot;m&quot;</emphasis>(tl):);&#32;&#32;<emphasis role="comment">//&#32;indirect&#32;call&#32;with&#32;asterisk&#32;*</emphasis>
132 
133 <emphasis role="comment">//&#32;&#32;&#32;&#32;(*tl_key_asm)(tl);</emphasis>
134 }
135 
137 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*tl_info_undo)(treelist&#32;*)&#32;__attribute__((__stdcall__));
138 
140 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*tl_info_redo)(treelist&#32;*)&#32;__attribute__((__stdcall__));
141 
142 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*tl_node_add)(treelist&#32;*,&#32;uint32_t&#32;n_opt,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*n_info)&#32;__attribute__((__stdcall__));
148 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;treelist_node_add(treelist&#32;*tl,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*n_info,&#32;uint16_t&#32;type,&#32;uint8_t&#32;clos,&#32;uint8_t&#32;lev)
149 {
150 &#32;&#32;&#32;&#32;uint32_t&#32;&#32;&#32;&#32;n_opt&#32;=&#32;(type&#32;&lt;&lt;&#32;16)&#32;|&#32;(clos&#32;&lt;&lt;&#32;8)&#32;|&#32;lev;
151 &#32;&#32;&#32;&#32;(*tl_node_add)(tl,&#32;n_opt,&#32;n_info);
152 }
153 
158 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*tl_node_set_data)(treelist&#32;*,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*n_info)&#32;__attribute__((__stdcall__));
159 
161 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;(*tl_node_get_data)(treelist&#32;*)&#32;__attribute__((__stdcall__));
162 
164 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*tl_node_delete)(treelist&#32;*)&#32;__attribute__((__stdcall__));
165 
167 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*tl_cur_beg)(treelist&#32;*)&#32;__attribute__((__stdcall__));
168 
170 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*tl_cur_next)(treelist&#32;*)&#32;__attribute__((__stdcall__));
171 
173 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*tl_cur_perv)(treelist&#32;*)&#32;__attribute__((__stdcall__));
174 
176 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*tl_node_close_open)(treelist&#32;*)&#32;__attribute__((__stdcall__));
177 
179 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*tl_node_lev_inc)(treelist&#32;*)&#32;__attribute__((__stdcall__));
180 
182 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*tl_node_lev_dec)(treelist&#32;*)&#32;__attribute__((__stdcall__));
183 
189 <emphasis role="keyword">extern</emphasis>&#32;treelist_node*&#32;(*tl_node_poi_get_info)(treelist&#32;*,&#32;<emphasis role="keywordtype">int</emphasis>&#32;node_ind)&#32;__attribute__((__stdcall__));
190 
196 <emphasis role="keyword">extern</emphasis>&#32;treelist_node*&#32;(*tl_node_poi_get_next_info)(treelist&#32;*,&#32;treelist_node*)&#32;__attribute__((__stdcall__));
197 
203 <emphasis role="keyword">extern</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;(*_tl_node_poi_get_data)(treelist&#32;*,&#32;treelist_node*)&#32;__attribute__((__stdcall__));
204 
210 <emphasis role="keyword">extern</emphasis>&#32;int&#32;(*tl_save_mem)(treelist&#32;*,&#32;<emphasis role="keywordtype">int</emphasis>&#32;opt,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*h_mem,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mem_size)&#32;__attribute__((__stdcall__));
211 
232 <emphasis role="keyword">extern</emphasis>&#32;int&#32;(*_tl_load_mem)(treelist&#32;*,&#32;<emphasis role="keywordtype">int</emphasis>&#32;opt,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*h_mem,&#32;<emphasis role="keywordtype">int</emphasis>&#32;mem_size)&#32;__attribute__((__stdcall__));
233 
237 <emphasis role="keyword">extern</emphasis>&#32;int&#32;(*tl_get_mem_size)(treelist&#32;*,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*h_mem)&#32;__attribute__((__stdcall__));
238 
239 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//KOLIBRI_TREELIST_H</emphasis>
</programlisting></section>
