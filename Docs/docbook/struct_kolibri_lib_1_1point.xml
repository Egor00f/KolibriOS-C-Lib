<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_kolibri_lib_1_1point" xml:lang="ru">
<title>Структура KolibriLib::point</title>
<indexterm><primary>KolibriLib::point</primary></indexterm>
<para>

<para>Просто точка </para>
 
</para>
<para>
<computeroutput>#include &lt;types.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Открытые члены    </title>
        <itemizedlist>
            <listitem><para><link linkend="_struct_kolibri_lib_1_1point_1a265a991978495b66d5cf24346e975bfc">point</link> (int X=0, int Y=0)</para>

<para>Конструктор </para>
</listitem>
            <listitem><para><link linkend="_struct_kolibri_lib_1_1point_1a088398ffb8097c6a7cde98e29ee6b37d">point</link> (float f)</para>

<para>Точка как отношение x/y. </para>
</listitem>
            <listitem><para><anchor xml:id="_struct_kolibri_lib_1_1point_1a5793d267b2ffe963e707462c52ea0df6"/>ksys_pos_t <emphasis role="strong">GetKsysPost</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_struct_kolibri_lib_1_1point_1a5e425e06ef75af6eed2e2de6b926e6d8"/><link linkend="_struct_kolibri_lib_1_1point">point</link> &amp; <emphasis role="strong">operator+</emphasis> (const <link linkend="_struct_kolibri_lib_1_1point">point</link> &amp;a)</para>
</listitem>
            <listitem><para><anchor xml:id="_struct_kolibri_lib_1_1point_1a5ba2b89dd621a47930656480136266d9"/><link linkend="_struct_kolibri_lib_1_1point">point</link> &amp; <emphasis role="strong">operator-</emphasis> (const <link linkend="_struct_kolibri_lib_1_1point">point</link> &amp;a)</para>
</listitem>
            <listitem><para><link linkend="_struct_kolibri_lib_1_1point">point</link> &amp; <link linkend="_struct_kolibri_lib_1_1point_1a8128ee0637bb637b9ebc243ee13fea16">operator=</link> (const <link linkend="_struct_kolibri_lib_1_1point">point</link> &amp;p)</para>
</listitem>
            <listitem><para><link linkend="_struct_kolibri_lib_1_1point">point</link> &amp; <link linkend="_struct_kolibri_lib_1_1point_1a3fe3cb1645f178a4274fc8e8048e275a">operator+=</link> (const int &amp;p)</para>

<para>Прибавить к обоим кординатам значение </para>
</listitem>
            <listitem><para><anchor xml:id="_struct_kolibri_lib_1_1point_1a873dd96a1802068c49dd0785555fd95a"/><link linkend="_struct_kolibri_lib_1_1point">point</link> &amp; <emphasis role="strong">operator-=</emphasis> (const int &amp;p)</para>
</listitem>
            <listitem><para><anchor xml:id="_struct_kolibri_lib_1_1point_1a42b4f936d5803c7ac214c2d54aa0fe4c"/><link linkend="_struct_kolibri_lib_1_1point">point</link> &amp; <emphasis role="strong">operator*=</emphasis> (const int &amp;p)</para>
</listitem>
            <listitem><para><anchor xml:id="_struct_kolibri_lib_1_1point_1aaf9e029a21318ad2fffb9c3b3aa6c48b"/><link linkend="_struct_kolibri_lib_1_1point">point</link> &amp; <emphasis role="strong">operator/=</emphasis> (const int &amp;p)</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_kolibri_lib_1_1point_1a7407c78217e0395f96a88692e8cf7421">operator==</link> (const <link linkend="_struct_kolibri_lib_1_1point">point</link> &amp;a) const</para>
</listitem>
            <listitem><para>bool <link linkend="_struct_kolibri_lib_1_1point_1a065d56469c375a2912116f4e7a1c1a2d">operator!=</link> (const <link linkend="_struct_kolibri_lib_1_1point">point</link> &amp;a) const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Открытые атрибуты    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_struct_kolibri_lib_1_1point_1aba63dd75453b02a799b9cd6ae5773cfe"/>int <emphasis role="strong">x</emphasis></para>

<para>координата по оси X, или ширина </para>
</listitem>
            <listitem><para><anchor xml:id="_struct_kolibri_lib_1_1point_1a92d76b1b7cb1eabab7bc3916b6341a24"/>int <emphasis role="strong">y</emphasis></para>

<para>координата по оси Y, или высота </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Подробное описание</title>

<para>Просто точка </para>
</section>
<section>
<title>Конструктор(ы)</title>
<anchor xml:id="_struct_kolibri_lib_1_1point_1a265a991978495b66d5cf24346e975bfc"/><section>
    <title>point()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>point</primary><secondary>KolibriLib::point</secondary></indexterm>
<indexterm><primary>KolibriLib::point</primary><secondary>point</secondary></indexterm>
<para><computeroutput>KolibriLib::point::point (int X = <computeroutput>0</computeroutput>
, int Y = <computeroutput>0</computeroutput>
)</computeroutput></para><para>

<para>Конструктор </para>
</para>

<para>
                <formalpara>
                    <title>
Аргументы</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>X</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>Y</entry><entry>
<para><?linebreak?> </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_struct_kolibri_lib_1_1point_1a088398ffb8097c6a7cde98e29ee6b37d"/><section>
    <title>point()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>point</primary><secondary>KolibriLib::point</secondary></indexterm>
<indexterm><primary>KolibriLib::point</primary><secondary>point</secondary></indexterm>
<para><computeroutput>KolibriLib::point::point (float f)</computeroutput></para><para>

<para>Точка как отношение x/y. </para>
</para>

<para>
                <formalpara>
                    <title>
Аргументы</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>f</entry><entry>
<para>Десятичная дробь, которая ≈ x/y </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Методы</title>
<anchor xml:id="_struct_kolibri_lib_1_1point_1a065d56469c375a2912116f4e7a1c1a2d"/><section>
    <title>operator!=()</title>
<indexterm><primary>operator!=</primary><secondary>KolibriLib::point</secondary></indexterm>
<indexterm><primary>KolibriLib::point</primary><secondary>operator!=</secondary></indexterm>
<para><computeroutput>bool KolibriLib::point::operator!= (const <link linkend="_struct_kolibri_lib_1_1point">point</link> &amp; a) const</computeroutput></para>
<para>
                <formalpara>
                    <title>
Аргументы</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>a</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Возвращает</title>

<para><?linebreak?> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_struct_kolibri_lib_1_1point_1a3fe3cb1645f178a4274fc8e8048e275a"/><section>
    <title>operator+=()</title>
<indexterm><primary>operator+=</primary><secondary>KolibriLib::point</secondary></indexterm>
<indexterm><primary>KolibriLib::point</primary><secondary>operator+=</secondary></indexterm>
<para><computeroutput><link linkend="_struct_kolibri_lib_1_1point">point</link> &amp; KolibriLib::point::operator+= (const int &amp; p)</computeroutput></para><para>

<para>Прибавить к обоим кординатам значение </para>
</para>

<para>
                <formalpara>
                    <title>
Параметры шаблона</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>B</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Аргументы</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>p</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Возвращает</title>

<para><?linebreak?> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_struct_kolibri_lib_1_1point_1a8128ee0637bb637b9ebc243ee13fea16"/><section>
    <title>operator=()</title>
<indexterm><primary>operator=</primary><secondary>KolibriLib::point</secondary></indexterm>
<indexterm><primary>KolibriLib::point</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_struct_kolibri_lib_1_1point">point</link> &amp; KolibriLib::point::operator= (const <link linkend="_struct_kolibri_lib_1_1point">point</link> &amp; p)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Аргументы</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>p</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Возвращает</title>

<para><?linebreak?> </para>
</formalpara>
</para>
</section>
<anchor xml:id="_struct_kolibri_lib_1_1point_1a7407c78217e0395f96a88692e8cf7421"/><section>
    <title>operator==()</title>
<indexterm><primary>operator==</primary><secondary>KolibriLib::point</secondary></indexterm>
<indexterm><primary>KolibriLib::point</primary><secondary>operator==</secondary></indexterm>
<para><computeroutput>bool KolibriLib::point::operator== (const <link linkend="_struct_kolibri_lib_1_1point">point</link> &amp; a) const</computeroutput></para>
<para>
                <formalpara>
                    <title>
Аргументы</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>a</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Возвращает</title>

<para><?linebreak?> </para>
</formalpara>
</para>
</section>
<para>
Объявления и описания членов структуры находятся в файле:</para>
C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/kolibriLib/types.hpp</section>
</section>
