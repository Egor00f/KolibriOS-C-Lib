<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_kolibri__frame_8h_source" xml:lang="ru">
<title>kolibri_frame.h</title>
<indexterm><primary>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_frame.h</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#ifndef&#32;KOLIBRI_FRAME_H</emphasis>
2 <emphasis role="preprocessor">#define&#32;KOLIBRI_FRAME_H</emphasis>
3 
4 <emphasis role="preprocessor">#include&#32;&lt;kos32sys.h&gt;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&lt;kolibriLib/system/os.hpp&gt;</emphasis>
6 
7 <emphasis role="keyword">enum</emphasis>&#32;fr_text_position_t&#32;{
8 &#32;&#32;&#32;&#32;FR_TOP,
9 &#32;&#32;&#32;&#32;FR_BOTTON
10 };
11 
12 <emphasis role="comment">/*</emphasis>
13 <emphasis role="comment">;&#32;FR_FLAGS&#32;=&#32;[x][yyy][z]</emphasis>
14 <emphasis role="comment">;&#32;z&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;&#32;Caption</emphasis>
15 <emphasis role="comment">;&#32;yyy&#32;&#32;&#32;&#32;&#32;&#32;-&#32;&#32;BorderStyle</emphasis>
16 <emphasis role="comment">;&#32;x&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-&#32;&#32;BackStyle</emphasis>
17 <emphasis role="comment">*/</emphasis>
18 <emphasis role="keyword">enum</emphasis>&#32;fr_flags_t&#32;{
19 &#32;&#32;&#32;&#32;FR_CAPTION&#32;=&#32;1,&#32;&#32;<emphasis role="comment">//&#32;if&#32;text&#32;!=&#32;null&#32;set&#32;auto</emphasis>
20 &#32;&#32;&#32;&#32;FR_DOUBLE&#32;=&#32;0,&#32;<emphasis role="comment">//&#32;default</emphasis>
21 &#32;&#32;&#32;&#32;FR_RAISED&#32;=&#32;2,
22 &#32;&#32;&#32;&#32;FR_SUNKEN&#32;=&#32;4,
23 &#32;&#32;&#32;&#32;FR_ETCHED&#32;=&#32;6,
24 &#32;&#32;&#32;&#32;FR_RINGED&#32;=&#32;8,
25 &#32;&#32;&#32;&#32;FR_FILLED&#32;=&#32;0x10
26 };
27 
28 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
29 &#32;&#32;&#32;&#32;uint32_t&#32;type;
30 &#32;&#32;&#32;&#32;uint32_t&#32;x_w;
31 &#32;&#32;&#32;&#32;uint32_t&#32;y_h;
32 &#32;&#32;&#32;&#32;color_t&#32;ext_col;
33 &#32;&#32;&#32;&#32;color_t&#32;int_col;
34 &#32;&#32;&#32;&#32;uint32_t&#32;flags;
35 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*text_pointer;
36 &#32;&#32;&#32;&#32;uint32_t&#32;text_position;
37 &#32;&#32;&#32;&#32;uint32_t&#32;font_number;
38 &#32;&#32;&#32;&#32;uint32_t&#32;font_size_y;
39 &#32;&#32;&#32;&#32;color_t&#32;font_color;
40 &#32;&#32;&#32;&#32;color_t&#32;font_bg_color;
41 }<link linkend="_structframe">frame</link>;
42 
43 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_structframe">frame</link>*&#32;kolibri_frame(<link linkend="_structframe">frame</link>*&#32;f,&#32;uint32_t&#32;x_w,&#32;uint32_t&#32;y_h,&#32;color_t&#32;ext_col,&#32;color_t&#32;int_col,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*text,&#32;<emphasis role="keyword">enum</emphasis>&#32;fr_text_position_t&#32;text_position,
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color_t&#32;font_color,&#32;color_t&#32;font_bgcolor,&#32;<emphasis role="keyword">enum</emphasis>&#32;fr_flags_t&#32;flags)
45 {
46 &#32;&#32;&#32;&#32;f-&gt;type&#32;=&#32;0;
47 &#32;&#32;&#32;&#32;f-&gt;x_w&#32;=&#32;x_w;
48 &#32;&#32;&#32;&#32;f-&gt;y_h&#32;=&#32;y_h;
49 &#32;&#32;&#32;&#32;f-&gt;ext_col&#32;=&#32;ext_col;
50 &#32;&#32;&#32;&#32;f-&gt;int_col&#32;=&#32;int_col;
51 &#32;&#32;&#32;&#32;f-&gt;flags&#32;=&#32;flags;
52 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(text)&#32;f-&gt;flags&#32;|=&#32;FR_CAPTION;
53 &#32;&#32;&#32;&#32;f-&gt;text_pointer&#32;=&#32;text;
54 &#32;&#32;&#32;&#32;f-&gt;text_position&#32;=&#32;text_position;
55 &#32;&#32;&#32;&#32;f-&gt;font_number&#32;=&#32;0;&#32;&#32;<emphasis role="comment">//&#32;0&#32;==&#32;font&#32;6x9,&#32;1==8x16</emphasis>
56 &#32;&#32;&#32;&#32;f-&gt;font_size_y&#32;=&#32;9;
57 &#32;&#32;&#32;&#32;f-&gt;font_color&#32;=&#32;font_color&#32;|&#32;0x80000000;
58 &#32;&#32;&#32;&#32;f-&gt;font_bg_color&#32;=&#32;font_bgcolor;
59 
60 
61 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;f;
62 }
63 
64 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_structframe">frame</link>*&#32;kolibri_new_frame(uint32_t&#32;x_w,&#32;uint32_t&#32;y_h,&#32;color_t&#32;ext_col,&#32;color_t&#32;int_col,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*text,&#32;<emphasis role="keyword">enum</emphasis>&#32;fr_text_position_t&#32;text_position,
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;color_t&#32;font_color,&#32;color_t&#32;font_bgcolor,&#32;<emphasis role="keyword">enum</emphasis>&#32;fr_flags_t&#32;flags)
66 {
67 &#32;&#32;&#32;&#32;<link linkend="_structframe">frame</link>&#32;*new_frame&#32;=&#32;(<link linkend="_structframe">frame</link>&#32;*)malloc(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_structframe">frame</link>));
68 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;kolibri_frame(new_frame,&#32;x_w,&#32;y_h,&#32;ext_col,&#32;int_col,&#32;text,&#32;text_position,&#32;font_color,&#32;font_bgcolor,&#32;flags);
69 }
70 
71 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_structframe">frame</link>*&#32;kolibri_frame_def(<link linkend="_structframe">frame</link>*&#32;f,&#32;uint32_t&#32;x_w,&#32;uint32_t&#32;y_h,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*text)
72 {
73 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;kolibri_frame(f,&#32;x_w,&#32;y_h,&#32;0x00FCFCFC,&#32;0x00DCDCDC,&#32;text,&#32;FR_TOP,&#32;<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">KolibriLib::OS::GetSystemColors</link>().work_text,&#32;<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">KolibriLib::OS::GetSystemColors</link>().work_area,&#32;0);
74 }
75 
76 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_structframe">frame</link>*&#32;kolibri_new_frame_def(uint32_t&#32;x_w,&#32;uint32_t&#32;y_h,&#32;<emphasis role="keywordtype">char</emphasis>&#32;*text)
77 {
78 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;kolibri_new_frame(x_w,&#32;y_h,&#32;0x00FCFCFC,&#32;0x00DCDCDC,&#32;text,&#32;FR_TOP,&#32;<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">KolibriLib::OS::GetSystemColors</link>().work_text,&#32;<link linkend="_namespace_kolibri_lib_1_1_o_s_1a3d1ea9fa87ea6d6c8e1a33c18dfb1ebf">KolibriLib::OS::GetSystemColors</link>().work_area,&#32;0);
79 }
80 
81 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;gui_add_frame(<link linkend="_structkolibri__window">kolibri_window</link>&#32;*wnd,&#32;<link linkend="_structframe">frame</link>*&#32;f)
82 {
83 &#32;&#32;&#32;&#32;kolibri_window_add_element(wnd,&#32;KOLIBRI_FRAME,&#32;f);
84 }
85 
86 
87 <emphasis role="keyword">extern</emphasis>&#32;void&#32;(*frame_draw)(<link linkend="_structframe">frame</link>&#32;*)&#32;__attribute__((__stdcall__));
88 
89 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;KOLIBRI_FRAME_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
