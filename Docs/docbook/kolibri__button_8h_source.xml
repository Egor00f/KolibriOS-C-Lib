<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_kolibri__button_8h_source" xml:lang="ru">
<title>kolibri_button.h</title>
<indexterm><primary>C:/Users/yyari/Documents/KolibriOS/KolibriOS-Cpp-Lib/include/C_Layer/INCLUDE/kolibri_button.h</primary></indexterm>
<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#ifndef&#32;KOLIBRI_BUTTON_H</emphasis>
2 <emphasis role="preprocessor">#define&#32;KOLIBRI_BUTTON_H</emphasis>
3 
4 <emphasis role="preprocessor">#include&#32;&lt;kos32sys.h&gt;</emphasis>
5 
6 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
7 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;x65536sizex;
8 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;y65536sizey;
9 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;color;
10 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;identifier;
11 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;XY;
12 }<link linkend="_structkolibri__button">kolibri_button</link>;
13 
14 <link linkend="_structkolibri__button">kolibri_button</link>&#32;*kolibri_new_button(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;tlx,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;tly,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sizex,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;sizey,
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;identifier,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;color)
16 {
17 &#32;&#32;<link linkend="_structkolibri__button">kolibri_button</link>*&#32;new_button&#32;=&#32;(<link linkend="_structkolibri__button">kolibri_button</link>&#32;*)malloc(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_structkolibri__button">kolibri_button</link>));
18 &#32;&#32;new_button&#32;-&gt;&#32;x65536sizex&#32;=&#32;(tlx&#32;&lt;&lt;&#32;16)&#32;+&#32;sizex;
19 &#32;&#32;new_button&#32;-&gt;&#32;y65536sizey&#32;=&#32;(tly&#32;&lt;&lt;&#32;16)&#32;+&#32;sizey;
20 &#32;&#32;new_button&#32;-&gt;&#32;color&#32;=&#32;color;
21 &#32;&#32;new_button&#32;-&gt;&#32;identifier&#32;=&#32;identifier;
22 &#32;&#32;new_button&#32;-&gt;&#32;XY&#32;=&#32;0;
23 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;new_button;
24 }
25 
26 __attribute__((__stdcall__))
27 <emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;draw_button(<link linkend="_structkolibri__button">kolibri_button</link>&#32;*some_button)
28 {
29 &#32;&#32;&#32;&#32;define_button(some_button&#32;-&gt;&#32;x65536sizex,&#32;some_button&#32;-&gt;&#32;y65536sizey,&#32;some_button&#32;-&gt;&#32;identifier,&#32;some_button&#32;-&gt;&#32;color);
30 }
31 
32 <emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;kolibri_button_get_identifier(<emphasis role="keywordtype">void</emphasis>)
33 {
34 &#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;identifier;
35 
36 &#32;&#32;__asm__&#32;__volatile__(
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;int&#32;$0x40&quot;</emphasis>
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:<emphasis role="stringliteral">&quot;=a&quot;</emphasis>(identifier)
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:<emphasis role="stringliteral">&quot;a&quot;</emphasis>(17)
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
41 &#32;&#32;<emphasis role="comment">/*&#32;If&#32;no&#32;button&#32;pressed,&#32;returns&#32;1&#32;*/</emphasis>
42 &#32;&#32;<emphasis role="comment">/*&#32;Otherwise,&#32;returns&#32;identifier&#32;of&#32;button&#32;*/</emphasis>
43 
44 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(identifier&#32;!=&#32;1)&#32;<emphasis role="comment">/*&#32;Button&#32;was&#32;detected&#32;indeed&#32;*/</emphasis>
45 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;identifier&gt;&gt;8;
46 &#32;&#32;<emphasis role="keywordflow">else</emphasis>
47 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;identifier;&#32;<emphasis role="comment">/*&#32;No&#32;button&#32;detected&#32;*/</emphasis>
48 }
49 
50 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;KOLIBRI_BUTTON_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
</programlisting></section>
