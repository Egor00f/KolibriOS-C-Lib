.TH "KolibriLib::UI::buttons::Button" 3 "KolibriLib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
KolibriLib::UI::buttons::Button \- Класс для работы с кнопками  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <button\&.hpp>\fP
.PP
Базовые классы:\fBKolibriLib::UI::text::TextLabel\fP\&.
.PP
Производные классы:\fBKolibriLib::UI::CheckBox\fP\&.
.SS "Открытые члены"

.in +1c
.ti -1c
.RI "\fBButton\fP (const \fBCoord\fP &coord={0, 0}, const \fBSize\fP &size={20, 20}, unsigned Margin=UI::DefaultMargin, const \fBColors::Color\fP &ButtonColor=\fBOS::GetSystemColors\fP()\&.work_button)"
.br
.RI "Это конструктор "
.ti -1c
.RI "void \fBRender\fP () const"
.br
.RI "Отрисовать кнопку "
.ti -1c
.RI "bool \fBHandler\fP () const"
.br
.RI "Обработчик кнопки "
.ti -1c
.RI "bool \fBGetStatus\fP () const"
.br
.RI "Получить сосояние кнопки на момент последней обработки "
.ti -1c
.RI "\fBButtonID\fP \fBGetId\fP () const"
.br
.RI "Получить номер кнопки "
.ti -1c
.RI "void \fBDeactivate\fP ()"
.br
.RI "Деактивировать кнопку "
.ti -1c
.RI "void \fBActivate\fP ()"
.br
.RI "Активировать кнопку "
.ti -1c
.RI "\fB~Button\fP ()"
.br
.RI "Декструктор "
.ti -1c
.RI "\fBButton\fP & \fBoperator=\fP (const \fBButton\fP &element)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBButton\fP &element) const"
.br
.in -1c

Открытые члены унаследованные от \fBKolibriLib::UI::text::TextLabel\fP
.in +1c
.ti -1c
.RI "\fBTextLabel\fP (const \fBCoord\fP &coord={0, 0}, const \fBSize\fP &size={16, 16}, const std::string &text='TextLabel', const unsigned &FontSize=9, bool TextScale=true, const \fBColors::Color\fP &TextColor=\fBOS::GetSystemColors\fP()\&.work_text, const unsigned &Margin=0)"
.br
.RI "Конструктор "
.ti -1c
.RI "\fBTextLabel\fP (const \fBCoord\fP &coord={0, 0}, const \fBSize\fP &size={16, 16}, const std::string &text='TextLabel', const \fBFonts::Font\fP &Font=\fBFonts::DefaultFont\fP, const \fBColors::Color\fP &TextColor=\fBOS::GetSystemColors\fP()\&.work_text, const \fBColors::Color\fP &BackgroundColor=\fBOS::GetSystemColors\fP()\&.frame_area, bool TextScale=true, const unsigned &Margin=0)"
.br
.ti -1c
.RI "void \fBSetScale\fP (bool scale)"
.br
.RI "Изменить значение переменной \fB_TextScale\&.\fP"
.ti -1c
.RI "bool \fBGetScale\fP () const"
.br
.RI "Получить состояние переменной \fB@ return значение переменной  _TextScale\&. \fP"
.ti -1c
.RI "\fBTextLabel\fP & \fBoperator=\fP (const \fBTextLabel\fP &a)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBTextLabel\fP &a) const"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBTextLabel\fP &a) const"
.br
.in -1c

Открытые члены унаследованные от \fBKolibriLib::UI::UIElement\fP
.in +1c
.ti -1c
.RI "\fBUIElement\fP (const \fBCoord\fP &coord={0, 0}, const \fBSize\fP &size={16, 16}, const \fBColors::Color\fP &MainColor=\fBOS::GetSystemColors\fP()\&.work_graph, const unsigned &Margin=DefaultMargin, bool relative=false)"
.br
.RI "Конструктор "
.ti -1c
.RI "const \fBSize\fP & \fBGetSize\fP () const"
.br
.RI "Получить размер элемента "
.ti -1c
.RI "void \fBSetSize\fP (const \fBSize\fP &NewSize)"
.br
.RI "Изменить размер элемента "
.ti -1c
.RI "unsigned \fBGetMargin\fP () const"
.br
.RI "Получить отступы "
.ti -1c
.RI "const \fBColors::Color\fP & \fBGetColor\fP () const"
.br
.RI "Получить осносной цвет элемента "
.ti -1c
.RI "void \fBSetColor\fP (const \fBColors::Color\fP &NewColor)"
.br
.ti -1c
.RI "void \fBSetCoord\fP (const \fBCoord\fP &NewCoord)"
.br
.ti -1c
.RI "const \fBCoord\fP & \fBGetCoord\fP () const"
.br
.RI "Получить координаты элемента "
.ti -1c
.RI "void \fBRotate\fP (unsigned NewAngle)"
.br
.RI "Повернуть элемент "
.ti -1c
.RI "unsigned \fBGetRotate\fP () const"
.br
.RI "Получить угол наклона элемента "
.ti -1c
.RI "bool \fBHover\fP () const"
.br
.RI "Проверить лежит ли курсор мыши над элементом "
.ti -1c
.RI "\fBUIElement\fP & \fBoperator=\fP (const \fBUIElement\fP &Element)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBUIElement\fP &Element) const"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBUIElement\fP &Element) const"
.br
.in -1c

Открытые члены унаследованные от \fBKolibriLib::UI::text::Text\fP
.in +1c
.ti -1c
.RI "\fBText\fP ()"
.br
.RI "Конструктор "
.ti -1c
.RI "\fB~Text\fP ()"
.br
.RI "Деструктор "
.ti -1c
.RI "void \fBAdd\fP (const \fBChar\fP &c)"
.br
.RI "Добавить символ в конец "
.ti -1c
.RI "void \fBAdd\fP (const std::string &txt)"
.br
.RI "Добавить строку в конец "
.ti -1c
.RI "void \fBAdd\fP (const \fBImages::img\fP &img)"
.br
.RI "долбавить изображение в конец "
.ti -1c
.RI "void \fBinsert\fP (const \fBChar\fP &c, int i)"
.br
.RI "Вставить элемент "
.ti -1c
.RI "void \fBinsert\fP (const std::string &txt, int i)"
.br
.RI "Вставить строку "
.ti -1c
.RI "void \fBinsert\fP (const \fBImages::img\fP &img, int i)"
.br
.RI "Вставить изображение "
.ti -1c
.RI "void \fBDelete\fP (int i)"
.br
.RI "Удалить \fBChar\fP из текста "
.ti -1c
.RI "void \fBPrint\fP (const \fBCoord\fP &coord) const"
.br
.RI "Вывести текст "
.ti -1c
.RI "void \fBSetFont\fP (const \fBFonts::Font\fP &Font)"
.br
.RI "Изменить шрифт символов "
.ti -1c
.RI "void \fBSetTextColor\fP (const \fBColors::Color\fP &Color)"
.br
.RI "Изменить цвет текста для всех символов "
.ti -1c
.RI "void \fBSetBackgroundColor\fP (const \fBColors::Color\fP &Color)"
.br
.RI "Изменить цвет фона для всех символов "
.ti -1c
.RI "std::string & \fBGetText\fP () const"
.br
.RI "Получить текст "
.ti -1c
.RI "const \fBChar\fP & \fBGetChar\fP (int i) const"
.br
.RI "Получить символ под номером i\&. "
.ti -1c
.RI "std::size_t \fBlength\fP () const"
.br
.RI "Получить длину текста "
.ti -1c
.RI "unsigned \fBlenghtPX\fP () const"
.br
.RI "Получить длинну текста в пикселях "
.ti -1c
.RI "void \fBSetText\fP (std::string text)"
.br
.ti -1c
.RI "\fBText\fP & \fBoperator=\fP (const \fBText\fP &txt)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBText\fP &txt) const"
.br
.in -1c
.SS "Дополнительные унаследованные члены"


Защищенные данные унаследованные от \fBKolibriLib::UI::UIElement\fP
.in +1c
.ti -1c
.RI "\fBCoord\fP \fB_coord\fP"
.br
.RI "Координаты "
.ti -1c
.RI "\fBSize\fP \fB_size\fP"
.br
.RI "Размер "
.ti -1c
.RI "\fBColors::Color\fP \fB_MainColor\fP"
.br
.ti -1c
.RI "unsigned \fB_Margin\fP"
.br
.RI "Отступы "
.ti -1c
.RI "unsigned \fB_angle\fP"
.br
.RI "Угол наклона "
.ti -1c
.RI "bool \fB_relative\fP"
.br
.RI "Оносительны ли координаты "
.in -1c

Защищенные данные унаследованные от \fBKolibriLib::UI::text::Text\fP
.in +1c
.ti -1c
.RI "std::vector< \fBChar\fP > \fB_data\fP"
.br
.in -1c
.SH "Подробное описание"
.PP 
Класс для работы с кнопками 
.SH "Конструктор(ы)"
.PP 
.SS "KolibriLib::UI::buttons::Button::Button (const \fBCoord\fP & coord = \fR{0, 0}\fP, const \fBSize\fP & size = \fR{20, 20}\fP, unsigned Margin = \fRUI::DefaultMargin\fP, const \fBColors::Color\fP & ButtonColor = \fR\fBOS::GetSystemColors\fP()\&.work_button\fP)"

.PP
Это конструктор 
.PP
\fBАргументы\fP
.RS 4
\fIcoord\fP координата 
.br
\fIsize\fP размер 
.br
\fItext\fP текст 
.br
\fIMargin\fP отступы текста от границ 
.br
\fIButtonColor\fP цвет кнопки 
.br
\fITextColor\fP цвет текста 
.RE
.PP

.SH "Методы"
.PP 
.SS "void KolibriLib::UI::buttons::Button::Activate ()"

.PP
Активировать кнопку 
.SS "функции \fBвозвращает кнопку в рабочее состояние\fP"

.SS "void KolibriLib::UI::buttons::Button::Deactivate ()"

.PP
Деактивировать кнопку 
.SS "функция может выполнятся очень долго, если вы уже создали довольно много кнопок\&. Это становится действительно важно когда у вас объявленно более 2000 кнопок"
.SS "Деактивированном состоянии кнопка 'Не нажимается', а её \fBстановится не действительным\fP"

.SS "\fBbuttons::ButtonID\fP KolibriLib::UI::buttons::Button::GetId () const"

.PP
Получить номер кнопки 
.PP
\fBВозвращает\fP
.RS 4
\fB_id\fP
.RE
.PP

.SS "bool KolibriLib::UI::buttons::Button::GetStatus () const"

.PP
Получить сосояние кнопки на момент последней обработки 
.PP
\fBВозвращает\fP
.RS 4
\fB_status\fP
.RE
.PP

.SS "bool KolibriLib::UI::buttons::Button::Handler () const"

.PP
Обработчик кнопки 
.PP
\fBВозвращает\fP
.RS 4
Состояние кнопки(Нажата/Ненажата) 
.RE
.PP
.SS "переменную \fBв true если эта кнопка нажата, иначе false\fP"
.SS "функцию нужно вызывать в цикле, чтобы кнопка работала"

.SS "void KolibriLib::UI::buttons::Button::Render () const\fR [virtual]\fP"

.PP
Отрисовать кнопку 
.PP
Переопределяет метод предка \fBKolibriLib::UI::text::TextLabel\fP\&.

.SH "Автор"
.PP 
Автоматически создано Doxygen для KolibriLib из исходного текста\&.
