.TH "KolibriLib::Colors::Color" 3 "KolibriLib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
KolibriLib::Colors::Color \- Цвет  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <color\&.hpp>\fP
.SS "Открытые члены"

.in +1c
.ti -1c
.RI "\fBColor\fP (const ksys_color_t &a=0)"
.br
.RI "Конструктор "
.ti -1c
.RI "\fBColor\fP (const \fBColor\fP &a)"
.br
.ti -1c
.RI "\fBColor\fP (const \fBARGB\fP &a)"
.br
.ti -1c
.RI "\fBColor\fP (const rgb_t &color)"
.br
.ti -1c
.RI "rgb_t \fBGetRGB\fP () const"
.br
.RI "Получить rgb_t\&. "
.ti -1c
.RI "\fBColor\fP & \fBoperator=\fP (const \fBColor\fP &a)"
.br
.ti -1c
.RI "\fBColor\fP & \fBoperator+\fP (const \fBColor\fP &a)"
.br
.RI "Смешивает два цвета (среднее занчение) "
.ti -1c
.RI "bool \fBoperator==\fP (const \fBColor\fP &a) const"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBColor\fP &a) const"
.br
.in -1c
.SS "Открытые атрибуты"

.in +1c
.ti -1c
.RI "uint32_t \fBval\fP"
.br
.ti -1c
.RI "struct {"
.br
.ti -1c
.RI "   uint8_t \fB_a\fP"
.br
.ti -1c
.RI "   uint8_t \fBblue\fP"
.br
.ti -1c
.RI "   uint8_t \fBgreen\fP"
.br
.ti -1c
.RI "   uint8_t \fBred\fP"
.br
.ti -1c
.RI "}; "
.br
.in -1c
.SH "Подробное описание"
.PP 
Цвет 
.SH "Конструктор(ы)"
.PP 
.SS "KolibriLib::Colors::Color::Color (const ksys_color_t & a = \fR0\fP)"

.PP
Конструктор 
.PP
\fBАргументы\fP
.RS 4
\fIa\fP 
.br
 
.RE
.PP

.SH "Методы"
.PP 
.SS "rgb_t KolibriLib::Colors::Color::GetRGB () const"

.PP
Получить rgb_t\&. 
.PP
\fBВозвращает\fP
.RS 4

.br
 
.RE
.PP

.SS "\fBColor\fP & KolibriLib::Colors::Color::operator+ (const \fBColor\fP & a)"

.PP
Смешивает два цвета (среднее занчение) 
.PP
\fBАргументы\fP
.RS 4
\fIa\fP 
.RE
.PP
\fBВозвращает\fP
.RS 4

.br
 
.RE
.PP


.SH "Автор"
.PP 
Автоматически создано Doxygen для KolibriLib из исходного текста\&.
