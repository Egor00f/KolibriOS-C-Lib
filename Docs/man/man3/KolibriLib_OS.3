.TH "KolibriLib::OS" 3 "KolibriLib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
KolibriLib::OS \- Работа с системой  

.SH SYNOPSIS
.br
.PP
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef unsigned int \fBEvent\fP"
.br
.RI "Ивент "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBEvents\fP { \fBNone\fP = KSYS_EVENT_NONE, \fBRedraw\fP = KSYS_EVENT_REDRAW, \fBButton\fP = KSYS_EVENT_BUTTON, \fBMouse\fP = KSYS_EVENT_MOUSE, \fBKey\fP = KSYS_EVENT_KEY, \fBDesktop\fP = KSYS_EVENT_DESKTOP, \fBDebug\fP = KSYS_EVENT_DEBUG, \fBExit\fP = 200 }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBColor::ColorsTable\fP \fBGetSystemColors\fP ()"
.br
.RI "Получить системные цвета "
.ti -1c
.RI "\fBEvent\fP \fBWaitEvent\fP ()"
.br
.RI "Ждать ивента "
.ti -1c
.RI "\fBEvent\fP \fBWaitEvent\fP (uint32_t TimeOut)"
.br
.RI "Ждать ивента "
.ti -1c
.RI "\fBEvent\fP \fBCheckEvent\fP ()"
.br
.RI "Проверить пришёл ли ли ивент "
.ti -1c
.RI "int \fBExec\fP (std::string AppName, std::string args)"
.br
.RI "Запустить программу "
.ti -1c
.RI "ksys_time_t \fBGetTime\fP ()"
.br
.RI "Получить системное время "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBColor::ColorsTable\fP \fBsys_color_table\fP"
.br
.RI "Таблица стандартных(системных) цветов "
.in -1c
.SH "Detailed Description"
.PP 
Работа с системой 
.SH "Function Documentation"
.PP 
.SS "\fBEvent\fP KolibriLib::OS::CheckEvent ()\fR [inline]\fP"

.PP
Проверить пришёл ли ли ивент 
.PP
\fBReturns\fP
.RS 4
Ивен 
.RE
.PP

.SS "int KolibriLib::OS::Exec (std::string AppName, std::string args)\fR [inline]\fP"

.PP
Запустить программу 
.PP
\fBParameters\fP
.RS 4
\fIAppName\fP путь до программы + имя 
.br
\fIargs\fP аргументы 
.RE
.PP
\fBReturns\fP
.RS 4
то что возвращает сама программа, -1 если исполняемы файл не найден 
.RE
.PP

.SS "\fBColor::ColorsTable\fP KolibriLib::OS::GetSystemColors ()"

.PP
Получить системные цвета 
.SS "изменяет переменную \fBsys_color_table\fP"
\fBReturns\fP
.RS 4
Таблица системных цветов 
.RE
.PP

.SS "ksys_time_t KolibriLib::OS::GetTime ()\fR [inline]\fP"

.PP
Получить системное время 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "\fBEvent\fP KolibriLib::OS::WaitEvent ()\fR [inline]\fP"

.PP
Ждать ивента 
.PP
\fBReturns\fP
.RS 4
Ивент 
.RE
.PP

.SS "\fBEvent\fP KolibriLib::OS::WaitEvent (uint32_t TimeOut)\fR [inline]\fP"

.PP
Ждать ивента 
.PP
\fBParameters\fP
.RS 4
\fIТаймаут\fP (в 1/100 секунды) 
.RE
.PP
\fBReturns\fP
.RS 4
Ивент 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for KolibriLib from the source code\&.
