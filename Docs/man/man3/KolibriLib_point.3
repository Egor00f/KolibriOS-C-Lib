.TH "KolibriLib::point< T >" 3 "KolibriLib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
KolibriLib::point< T > \- Просто точка  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <types\&.hpp>\fP
.SS "Открытые члены"

.in +1c
.ti -1c
.RI "\fBpoint\fP (T X=(T) 0, T Y=(T) 0)"
.br
.RI "Конструктор "
.ti -1c
.RI "\fBpoint\fP (float f)"
.br
.RI "Точка как отношение x/y\&. "
.ti -1c
.RI "ksys_pos_t \fBGetKsysPost\fP () const"
.br
.ti -1c
.RI "\fBpoint\fP< T > & \fBoperator+\fP (const \fBpoint\fP< T > &a)"
.br
.ti -1c
.RI "\fBpoint\fP< T > & \fBoperator\-\fP (const \fBpoint\fP< T > &a)"
.br
.ti -1c
.RI "\fBpoint\fP< T > & \fBoperator=\fP (const \fBpoint\fP< T > &p)"
.br
.ti -1c
.RI "\fBpoint\fP< T > & \fBoperator+=\fP (const T &p)"
.br
.RI "Прибавить к обоим кординатам значение "
.ti -1c
.RI "\fBpoint\fP< T > & \fBoperator\-=\fP (const T &p)"
.br
.ti -1c
.RI "\fBpoint\fP< T > & \fBoperator*=\fP (const T &p)"
.br
.ti -1c
.RI "\fBpoint\fP< T > & \fBoperator/=\fP (const T &p)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBpoint\fP< T > &a) const"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBpoint\fP< T > &a) const"
.br
.in -1c
.SS "Открытые атрибуты"

.in +1c
.ti -1c
.RI "T \fBx\fP"
.br
.RI "координата по оси X, или ширина "
.ti -1c
.RI "T \fBy\fP"
.br
.RI "координата по оси Y, или высота "
.in -1c
.SH "Подробное описание"
.PP 

.SS "template<class T>
.br
struct KolibriLib::point< T >"Просто точка 


.SS "необходимо использовать конкретный теип данных для точки используйте шаблоны\&. Например: point<uint64_t> p;"

.SH "Конструктор(ы)"
.PP 
.SS "template<class T > \fBKolibriLib::point\fP< T >::point (T X = \fR(T)0\fP, T Y = \fR(T)0\fP)"

.PP
Конструктор 
.PP
\fBАргументы\fP
.RS 4
\fIX\fP 
.br
\fIY\fP 
.br
 
.RE
.PP

.SS "template<class T > \fBKolibriLib::point\fP< T >::point (float f)"

.PP
Точка как отношение x/y\&. 
.PP
\fBАргументы\fP
.RS 4
\fIf\fP Десятичная дробь, которая ≈ x/y 
.RE
.PP

.SH "Методы"
.PP 
.SS "template<class T > bool \fBKolibriLib::point\fP< T >::operator!= (const \fBpoint\fP< T > & a) const"

.PP
\fBАргументы\fP
.RS 4
\fIa\fP 
.RE
.PP
\fBВозвращает\fP
.RS 4

.br
 
.RE
.PP

.SS "template<class T > \fBKolibriLib::point\fP< T > & \fBKolibriLib::point\fP< T >::operator+= (const T & p)"

.PP
Прибавить к обоим кординатам значение 
.PP
\fBПараметры шаблона\fP
.RS 4
\fIB\fP 
.RE
.PP
\fBАргументы\fP
.RS 4
\fIp\fP 
.RE
.PP
\fBВозвращает\fP
.RS 4

.br
 
.RE
.PP

.SS "template<class T > \fBKolibriLib::point\fP< T > & \fBKolibriLib::point\fP< T >::operator= (const \fBpoint\fP< T > & p)"

.PP
\fBАргументы\fP
.RS 4
\fIp\fP 
.RE
.PP
\fBВозвращает\fP
.RS 4

.br
 
.RE
.PP

.SS "template<class T > bool \fBKolibriLib::point\fP< T >::operator== (const \fBpoint\fP< T > & a) const"

.PP
\fBАргументы\fP
.RS 4
\fIa\fP 
.RE
.PP
\fBВозвращает\fP
.RS 4

.br
 
.RE
.PP


.SH "Автор"
.PP 
Автоматически создано Doxygen для KolibriLib из исходного текста\&.
