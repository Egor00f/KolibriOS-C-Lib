.TH "KolibriLib::UI::buttons" 3 "KolibriLib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
KolibriLib::UI::buttons \- Работа с кнопками  

.SH SYNOPSIS
.br
.PP
.SS "Классы"

.in +1c
.ti -1c
.RI "class \fBButton\fP"
.br
.RI "Класс для работы с кнопками "
.in -1c
.SS "Определения типов"

.in +1c
.ti -1c
.RI "typedef unsigned int \fBButtonID\fP"
.br
.RI "Id кнопки "
.in -1c
.SS "Функции"

.in +1c
.ti -1c
.RI "\fBButtonID\fP \fBGetFreeButtonId\fP ()"
.br
.RI "Получить свободный номер id кнопки из списка "
.ti -1c
.RI "void \fBFreeButtonId\fP (\fBButtonID\fP id)"
.br
.RI "Освободить номер кнопки "
.ti -1c
.RI "\fBButtonID\fP \fBautoDefineButton\fP (const \fBCoord\fP &coords, const \fBSize\fP &size, const \fBColors::Color\fP &color=\fBOS::GetSystemColors\fP()\&.work_button)"
.br
.RI "Создать кнопку, автоматически присвоить ей id\&. "
.ti -1c
.RI "void \fBDefineButton\fP (const \fBCoord\fP &coord, const \fBSize\fP &size, const \fBButtonID\fP &id, \fBColors::Color\fP color=\fBOS::GetSystemColors\fP()\&.work_button)"
.br
.RI "Создать кнопку, вручную "
.ti -1c
.RI "void \fBDeleteButton\fP (unsigned id)"
.br
.RI "Удалить кнопу "
.ti -1c
.RI "unsigned \fBGetPressedButton\fP ()"
.br
.RI "проверить какая кнопка нажата "
.in -1c
.SS "Переменные"

.in +1c
.ti -1c
.RI "const \fBButtonID\fP \fBStartButtonId\fP = 100"
.br
.ti -1c
.RI "std::map< \fBButtonID\fP, bool > \fBButtonsIdList\fP"
.br
.RI "Список idшников кнопок "
.in -1c
.SH "Подробное описание"
.PP 
Работа с кнопками 
.SH "Функции"
.PP 
.SS "\fBButtonID\fP KolibriLib::UI::buttons::autoDefineButton (const \fBCoord\fP & coords, const \fBSize\fP & size, const \fBColors::Color\fP & color = \fR\fBOS::GetSystemColors\fP()\&.work_button\fP)\fR [inline]\fP"

.PP
Создать кнопку, автоматически присвоить ей id\&. 
.PP
\fBАргументы\fP
.RS 4
\fIcoords\fP координаты 
.br
\fIsize\fP размер 
.br
\fIcolor\fP цвет 
.RE
.PP
\fBВозвращает\fP
.RS 4
id созданной кнопки 
.RE
.PP

.SS "void KolibriLib::UI::buttons::DefineButton (const \fBCoord\fP & coord, const \fBSize\fP & size, const \fBButtonID\fP & id, \fBColors::Color\fP color = \fR\fBOS::GetSystemColors\fP()\&.work_button\fP)\fR [inline]\fP"

.PP
Создать кнопку, вручную 
.PP
\fBАргументы\fP
.RS 4
\fIcoords\fP координаты 
.br
\fIsize\fP размер 
.br
\fIid\fP idшник кнопки 
.br
\fIcolor\fP цвет 
.RE
.PP

.SS "void KolibriLib::UI::buttons::DeleteButton (unsigned id)\fR [inline]\fP"

.PP
Удалить кнопу 
.PP
\fBАргументы\fP
.RS 4
\fIid\fP id удаляемой кнопки 
.RE
.PP

.SS "void KolibriLib::UI::buttons::FreeButtonId (\fBButtonID\fP id)\fR [inline]\fP"

.PP
Освободить номер кнопки 
.PP
\fBАргументы\fP
.RS 4
\fIid\fP номер номер кнопки из списка \fBButtonsIdList\fP
.RE
.PP

.SS "\fBButtonID\fP KolibriLib::UI::buttons::GetFreeButtonId ()"

.PP
Получить свободный номер id кнопки из списка 
.SS "функция может выполнятся очень долго, если вы уже создали довольно много кнопок\&. Это становится действительно важно когда у вас объявленно более 2000 кнопок"
\fBВозвращает\fP
.RS 4
номер кнопки из списка \fBButtonsIdList\fP
.RE
.PP

.SS "unsigned KolibriLib::UI::buttons::GetPressedButton ()\fR [inline]\fP"

.PP
проверить какая кнопка нажата 
.PP
\fBВозвращает\fP
.RS 4
id нажатой кнопки 
.RE
.PP

.SH "Автор"
.PP 
Автоматически создано Doxygen для KolibriLib из исходного текста\&.
