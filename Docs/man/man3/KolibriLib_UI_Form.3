.TH "KolibriLib::UI::Form" 3 "KolibriLib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
KolibriLib::UI::Form \- Форма для ввода текста  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <form\&.hpp>\fP
.PP
Базовые классы:\fBKolibriLib::UI::UIElement\fP\&.
.SS "Открытые члены"

.in +1c
.ti -1c
.RI "\fBForm\fP (const \fBCoord\fP &coord={0, 0}, const \fBSize\fP &size={32, 16}, const std::string &BackgroundText='Text\&.\&.\&.', const \fBColors::Color\fP &FormColor=OS::sys_color_table\&.work_text, const \fBColors::Color\fP &ButtonTextColor=OS::sys_color_table\&.work_area, const unsigned &Margin=DefaultMargin)"
.br
.RI "конструктор "
.ti -1c
.RI "void \fBRender\fP () const"
.br
.RI "Отрисовать форму "
.ti -1c
.RI "void \fBHandler\fP ()"
.br
.RI "Обработчик "
.ti -1c
.RI "bool \fBButtonHandler\fP ()"
.br
.RI "Обработчик кнопки "
.ti -1c
.RI "const std::string & \fBGetInput\fP () const"
.br
.RI "Получить введённый текст "
.ti -1c
.RI "const std::string & \fBGetBackgroundText\fP () const"
.br
.RI "Получить цвет фонового текста "
.ti -1c
.RI "const \fBColors::Color\fP & \fBGetBackgroundColor\fP () const"
.br
.RI "Получить цвет фона "
.ti -1c
.RI "void \fBSetBackgroundText\fP (const std::string &NewText)"
.br
.RI "Изменить фоновый текст "
.ti -1c
.RI "void \fBSetBackgroundColor\fP (const \fBColors::Color\fP &NewColor)"
.br
.RI "Изменить цвет фона "
.in -1c

Открытые члены унаследованные от \fBKolibriLib::UI::UIElement\fP
.in +1c
.ti -1c
.RI "\fBUIElement\fP (const \fBCoord\fP &coord={0, 0}, const \fBSize\fP &size={16, 16}, const \fBColors::Color\fP &MainColor=OS::sys_color_table\&.work_graph, const unsigned &Margin=DefaultMargin, bool relative=false)"
.br
.RI "Конструктор "
.ti -1c
.RI "const \fBSize\fP & \fBGetSize\fP () const"
.br
.RI "Получить размер элемента "
.ti -1c
.RI "void \fBSetSize\fP (const \fBSize\fP &NewSize)"
.br
.RI "Изменить размер элемента "
.ti -1c
.RI "unsigned \fBGetMargin\fP () const"
.br
.RI "Получить отступы "
.ti -1c
.RI "const \fBColors::Color\fP & \fBGetColor\fP () const"
.br
.RI "Получить осносной цвет элемента "
.ti -1c
.RI "void \fBSetColor\fP (const \fBColors::Color\fP &NewColor)"
.br
.ti -1c
.RI "void \fBSetCoord\fP (const \fBCoord\fP &NewCoord)"
.br
.ti -1c
.RI "const \fBCoord\fP & \fBGetCoord\fP () const"
.br
.RI "Получить координаты элемента "
.ti -1c
.RI "void \fBRotate\fP (unsigned NewAngle)"
.br
.RI "Повернуть элемент "
.ti -1c
.RI "unsigned \fBGetRotate\fP () const"
.br
.RI "Получить угол наклона элемента "
.ti -1c
.RI "bool \fBHover\fP () const"
.br
.RI "Проверить лежит ли курсор мыши над элементом "
.ti -1c
.RI "\fBUIElement\fP & \fBoperator=\fP (const \fBUIElement\fP &Element)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBUIElement\fP &Element) const"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBUIElement\fP &Element) const"
.br
.in -1c
.SS "Дополнительные унаследованные члены"


Защищенные данные унаследованные от \fBKolibriLib::UI::UIElement\fP
.in +1c
.ti -1c
.RI "\fBCoord\fP \fB_coord\fP"
.br
.RI "Координаты "
.ti -1c
.RI "\fBSize\fP \fB_size\fP"
.br
.RI "Размер "
.ti -1c
.RI "\fBColors::Color\fP \fB_MainColor\fP"
.br
.ti -1c
.RI "unsigned \fB_Margin\fP"
.br
.RI "Отступы "
.ti -1c
.RI "unsigned \fB_angle\fP"
.br
.RI "Угол наклона "
.ti -1c
.RI "bool \fB_relative\fP"
.br
.RI "Оносительны ли координаты "
.in -1c
.SH "Подробное описание"
.PP 
Форма для ввода текста 
.SH "Конструктор(ы)"
.PP 
.SS "KolibriLib::UI::Form::Form (const \fBCoord\fP & coord = \fR{0, 0}\fP, const \fBSize\fP & size = \fR{32, 16}\fP, const std::string & BackgroundText = \fR'Text\&.\&.\&.'\fP, const \fBColors::Color\fP & FormColor = \fROS::sys_color_table\&.work_text\fP, const \fBColors::Color\fP & ButtonTextColor = \fROS::sys_color_table\&.work_area\fP, const unsigned & Margin = \fRDefaultMargin\fP)"

.PP
конструктор 
.PP
\fBАргументы\fP
.RS 4
\fIcoord\fP позиция в коне 
.br
\fIsize\fP размеры 
.br
\fIBackgroundText\fP фоновый текст(проподает когда вводится текст) 
.br
\fIFormColor\fP цвет рамки формы 
.br
\fIBackgroundTextColor\fP цвет фонового текста 
.br
\fIMargin\fP отступы рамки от текста 
.RE
.PP

.SH "Методы"
.PP 
.SS "bool KolibriLib::UI::Form::ButtonHandler ()"

.PP
Обработчик кнопки 
.PP
\fBВозвращает\fP
.RS 4
true если на форму нажали, 
.RE
.PP

.SS "const \fBColors::Color\fP & KolibriLib::UI::Form::GetBackgroundColor () const"

.PP
Получить цвет фона 
.PP
\fBВозвращает\fP
.RS 4
Цвет фона формы 
.RE
.PP

.SS "const std::string & KolibriLib::UI::Form::GetBackgroundText () const"

.PP
Получить цвет фонового текста 
.PP
\fBВозвращает\fP
.RS 4
Цвет фонового текста 
.RE
.PP

.SS "const std::string & KolibriLib::UI::Form::GetInput () const"

.PP
Получить введённый текст 
.PP
\fBВозвращает\fP
.RS 4
\fB(текст который ввели в форму) \fP
.RE
.PP

.SS "void KolibriLib::UI::Form::SetBackgroundColor (const \fBColors::Color\fP & NewColor)"

.PP
Изменить цвет фона 
.PP
\fBАргументы\fP
.RS 4
\fINewColor\fP цвет 
.RE
.PP

.SS "void KolibriLib::UI::Form::SetBackgroundText (const std::string & NewText)"

.PP
Изменить фоновый текст 
.PP
\fBАргументы\fP
.RS 4
\fINewText\fP текст 
.RE
.PP


.SH "Автор"
.PP 
Автоматически создано Doxygen для KolibriLib из исходного текста\&.
