.TH "KolibriLib::UI::UIElement" 3 "KolibriLib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
KolibriLib::UI::UIElement \- Элемент интерфейса  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <UI\&.hpp>\fP
.PP
Производные классы:\fBKolibriLib::UI::Form\fP, \fBKolibriLib::UI::Frame\fP, \fBKolibriLib::UI::Images::Image\fP, \fBKolibriLib::UI::Menu\fP и \fBKolibriLib::UI::text::TextLabel\fP\&.
.SS "Открытые члены"

.in +1c
.ti -1c
.RI "\fBUIElement\fP (const \fBCoord\fP &coord=\fBCoord\fP(0, 0), const \fBSize\fP &size=\fBSize\fP(32, 32), const \fBColors::Color\fP &MainColor=\fBOS::GetSystemColors\fP()\&.work_graph, const unsigned &Margin=DefaultMargin, bool relative=false)"
.br
.RI "Конструктор "
.ti -1c
.RI "const \fBSize\fP & \fBGetSize\fP () const"
.br
.RI "Получить размер элемента "
.ti -1c
.RI "void \fBSetSize\fP (const \fBSize\fP &NewSize)"
.br
.RI "Изменить размер элемента "
.ti -1c
.RI "unsigned \fBGetMargin\fP () const"
.br
.RI "Получить отступы "
.ti -1c
.RI "const \fBColors::Color\fP & \fBGetColor\fP () const"
.br
.RI "Получить осносной цвет элемента "
.ti -1c
.RI "void \fBSetColor\fP (const \fBColors::Color\fP &NewColor)"
.br
.RI "Изменить цвет "
.ti -1c
.RI "void \fBSetCoord\fP (const \fBCoord\fP &NewCoord)"
.br
.RI "изменить координаты "
.ti -1c
.RI "const \fBCoord\fP & \fBGetCoord\fP () const"
.br
.RI "Получить координаты элемента "
.ti -1c
.RI "void \fBRotate\fP (unsigned NewAngle)"
.br
.RI "Повернуть элемент "
.ti -1c
.RI "unsigned \fBGetRotate\fP () const"
.br
.RI "Получить угол наклона элемента "
.ti -1c
.RI "bool \fBHover\fP () const"
.br
.RI "Проверить лежит ли курсор мыши над элементом "
.ti -1c
.RI "virtual void \fBRender\fP ()"
.br
.RI "отрисовать элемент "
.ti -1c
.RI "\fBUIElement\fP & \fBoperator=\fP (const \fBUIElement\fP &Element)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBUIElement\fP &Element) const"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBUIElement\fP &Element) const"
.br
.in -1c
.SS "Защищенные данные"

.in +1c
.ti -1c
.RI "\fBCoord\fP \fB_coord\fP"
.br
.RI "Координаты "
.ti -1c
.RI "\fBSize\fP \fB_size\fP"
.br
.RI "Размер "
.ti -1c
.RI "\fBColors::Color\fP \fB_MainColor\fP"
.br
.ti -1c
.RI "unsigned \fB_Margin\fP"
.br
.RI "Отступы "
.ti -1c
.RI "unsigned \fB_angle\fP"
.br
.RI "Угол наклона "
.ti -1c
.RI "bool \fB_relative\fP"
.br
.RI "Оносительны ли координаты "
.in -1c
.SH "Подробное описание"
.PP 
Элемент интерфейса 


.PP
\fBЗаметки\fP
.RS 4
Используется как шаблон для других классов 
.RE
.PP

.SH "Конструктор(ы)"
.PP 
.SS "KolibriLib::UI::UIElement::UIElement (const \fBCoord\fP & coord = \fR\fBCoord\fP(0, 0)\fP, const \fBSize\fP & size = \fR\fBSize\fP(32, 32)\fP, const \fBColors::Color\fP & MainColor = \fR\fBOS::GetSystemColors\fP()\&.work_graph\fP, const unsigned & Margin = \fRDefaultMargin\fP, bool relative = \fRfalse\fP)"

.PP
Конструктор 
.PP
\fBАргументы\fP
.RS 4
\fIcoord\fP координаты 
.br
\fIsize\fP размер 
.br
\fIMainColor\fP основной цвет 
.br
\fIMargin\fP отступы 
.br
\fIrelative\fP отностельность 
.RE
.PP

.SH "Методы"
.PP 
.SS "const \fBColors::Color\fP & KolibriLib::UI::UIElement::GetColor () const"

.PP
Получить осносной цвет элемента 
.PP
\fBВозвращает\fP
.RS 4
Функция возвращает _MainColor 
.RE
.PP

.SS "const \fBCoord\fP & KolibriLib::UI::UIElement::GetCoord () const"

.PP
Получить координаты элемента 
.PP
\fBВозвращает\fP
.RS 4
Функция возвращает _coord 
.RE
.PP

.SS "unsigned KolibriLib::UI::UIElement::GetMargin () const"

.PP
Получить отступы 
.PP
\fBВозвращает\fP
.RS 4
Функция возвращает _Margin 
.RE
.PP

.SS "unsigned KolibriLib::UI::UIElement::GetRotate () const"

.PP
Получить угол наклона элемента 
.PP
\fBВозвращает\fP
.RS 4
Функция возвращает _angle 
.RE
.PP

.SS "const \fBSize\fP & KolibriLib::UI::UIElement::GetSize () const"

.PP
Получить размер элемента 
.PP
\fBВозвращает\fP
.RS 4
Функция возвращает _size 
.RE
.PP

.SS "bool KolibriLib::UI::UIElement::Hover () const"

.PP
Проверить лежит ли курсор мыши над элементом 
.PP
\fBВозвращает\fP
.RS 4
true если курсор мыши находится в этом элементе, иначе false 
.RE
.PP

.SS "bool KolibriLib::UI::UIElement::operator!= (const \fBUIElement\fP & Element) const"

.PP
\fBАргументы\fP
.RS 4
\fIElement\fP 
.RE
.PP
\fBВозвращает\fP
.RS 4

.br
 
.RE
.PP

.SS "\fBUIElement\fP & KolibriLib::UI::UIElement::operator= (const \fBUIElement\fP & Element)"

.PP
\fBАргументы\fP
.RS 4
\fIElement\fP 
.RE
.PP
\fBВозвращает\fP
.RS 4

.br
 
.RE
.PP

.SS "bool KolibriLib::UI::UIElement::operator== (const \fBUIElement\fP & Element) const"

.PP
\fBАргументы\fP
.RS 4
\fIElement\fP 
.RE
.PP
\fBВозвращает\fP
.RS 4

.br
 
.RE
.PP

.SS "virtual void KolibriLib::UI::UIElement::Render ()\fR [virtual]\fP"

.PP
отрисовать элемент 
.PP
Переопределяется в \fBKolibriLib::UI::CheckBox\fP, \fBKolibriLib::UI::Frame\fP и \fBKolibriLib::UI::Menu\fP\&.
.SS "void KolibriLib::UI::UIElement::Rotate (unsigned NewAngle)"

.PP
Повернуть элемент 
.PP
\fBАргументы\fP
.RS 4
\fINewAngle\fP Новый угол наклона 
.RE
.PP

.SS "void KolibriLib::UI::UIElement::SetColor (const \fBColors::Color\fP & NewColor)"

.PP
Изменить цвет 
.PP
\fBАргументы\fP
.RS 4
\fINewColor\fP новый цвет 
.RE
.PP

.SS "void KolibriLib::UI::UIElement::SetCoord (const \fBCoord\fP & NewCoord)"

.PP
изменить координаты 
.PP
\fBАргументы\fP
.RS 4
\fINewCoord\fP новые координаты 
.RE
.PP

.SS "void KolibriLib::UI::UIElement::SetSize (const \fBSize\fP & NewSize)"

.PP
Изменить размер элемента 
.PP
\fBАргументы\fP
.RS 4
\fINewSize\fP новый размер 
.RE
.PP


.SH "Автор"
.PP 
Автоматически создано Doxygen для KolibriLib из исходного текста\&.
